// Vitest Snapshot v1

exports[`try generate with fixture > generated result should match snapshot 1`] = `
{
  "getActionsCancelWorkflowRun202Response": [Function],
  "getActionsCreateOrUpdateEnvironmentSecret201Response": [Function],
  "getActionsCreateOrUpdateOrgSecret201Response": [Function],
  "getActionsCreateOrUpdateRepoSecret201Response": [Function],
  "getActionsCreateRegistrationTokenForOrg201Response": [Function],
  "getActionsCreateRegistrationTokenForRepo201Response": [Function],
  "getActionsCreateRemoveTokenForOrg201Response": [Function],
  "getActionsCreateRemoveTokenForRepo201Response": [Function],
  "getActionsCreateSelfHostedRunnerGroupForOrg201Response": [Function],
  "getActionsGetAllowedActionsOrganization200Response": [Function],
  "getActionsGetAllowedActionsRepository200Response": [Function],
  "getActionsGetArtifact200Response": [Function],
  "getActionsGetEnvironmentPublicKey200Response": [Function],
  "getActionsGetEnvironmentSecret200Response": [Function],
  "getActionsGetGithubActionsPermissionsOrganization200Response": [Function],
  "getActionsGetGithubActionsPermissionsRepository200Response": [Function],
  "getActionsGetJobForWorkflowRun200Response": [Function],
  "getActionsGetOrgPublicKey200Response": [Function],
  "getActionsGetOrgSecret200Response": [Function],
  "getActionsGetPendingDeploymentsForRun200Response": [Function],
  "getActionsGetRepoPublicKey200Response": [Function],
  "getActionsGetRepoSecret200Response": [Function],
  "getActionsGetReviewsForRun200Response": [Function],
  "getActionsGetSelfHostedRunnerForOrg200Response": [Function],
  "getActionsGetSelfHostedRunnerForRepo200Response": [Function],
  "getActionsGetSelfHostedRunnerGroupForOrg200Response": [Function],
  "getActionsGetWorkflow200Response": [Function],
  "getActionsGetWorkflowRun200Response": [Function],
  "getActionsGetWorkflowRunAttempt200Response": [Function],
  "getActionsListArtifactsForRepo200Response": [Function],
  "getActionsListEnvironmentSecrets200Response": [Function],
  "getActionsListJobsForWorkflowRun200Response": [Function],
  "getActionsListJobsForWorkflowRunAttempt200Response": [Function],
  "getActionsListJobsForWorkflowRunAttempt404Response": [Function],
  "getActionsListOrgSecrets200Response": [Function],
  "getActionsListRepoAccessToSelfHostedRunnerGroupInOrg200Response": [Function],
  "getActionsListRepoSecrets200Response": [Function],
  "getActionsListRepoWorkflows200Response": [Function],
  "getActionsListRunnerApplicationsForOrg200Response": [Function],
  "getActionsListRunnerApplicationsForRepo200Response": [Function],
  "getActionsListSelectedReposForOrgSecret200Response": [Function],
  "getActionsListSelectedRepositoriesEnabledGithubActionsOrganization200Response": [Function],
  "getActionsListSelfHostedRunnerGroupsForOrg200Response": [Function],
  "getActionsListSelfHostedRunnersForOrg200Response": [Function],
  "getActionsListSelfHostedRunnersForRepo200Response": [Function],
  "getActionsListSelfHostedRunnersInGroupForOrg200Response": [Function],
  "getActionsListWorkflowRunArtifacts200Response": [Function],
  "getActionsListWorkflowRuns200Response": [Function],
  "getActionsListWorkflowRunsForRepo200Response": [Function],
  "getActionsReRunWorkflow201Response": [Function],
  "getActionsReviewPendingDeploymentsForRun200Response": [Function],
  "getActionsUpdateSelfHostedRunnerGroupForOrg200Response": [Function],
  "getActivityCheckRepoIsStarredByAuthenticatedUser401Response": [Function],
  "getActivityCheckRepoIsStarredByAuthenticatedUser403Response": [Function],
  "getActivityCheckRepoIsStarredByAuthenticatedUser404Response": [Function],
  "getActivityDeleteThreadSubscription401Response": [Function],
  "getActivityDeleteThreadSubscription403Response": [Function],
  "getActivityGetFeeds200Response": [Function],
  "getActivityGetRepoSubscription200Response": [Function],
  "getActivityGetRepoSubscription403Response": [Function],
  "getActivityGetThread200Response": [Function],
  "getActivityGetThread401Response": [Function],
  "getActivityGetThread403Response": [Function],
  "getActivityGetThreadSubscriptionForAuthenticatedUser200Response": [Function],
  "getActivityGetThreadSubscriptionForAuthenticatedUser401Response": [Function],
  "getActivityGetThreadSubscriptionForAuthenticatedUser403Response": [Function],
  "getActivityListEventsForAuthenticatedUser200Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser200Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser401Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser403Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser422Response": [Function],
  "getActivityListOrgEventsForAuthenticatedUser200Response": [Function],
  "getActivityListPublicEvents200Response": [Function],
  "getActivityListPublicEvents403Response": [Function],
  "getActivityListPublicEvents503Response": [Function],
  "getActivityListPublicEventsForRepoNetwork200Response": [Function],
  "getActivityListPublicEventsForRepoNetwork301Response": [Function],
  "getActivityListPublicEventsForRepoNetwork403Response": [Function],
  "getActivityListPublicEventsForRepoNetwork404Response": [Function],
  "getActivityListPublicEventsForUser200Response": [Function],
  "getActivityListPublicOrgEvents200Response": [Function],
  "getActivityListReceivedEventsForUser200Response": [Function],
  "getActivityListReceivedPublicEventsForUser200Response": [Function],
  "getActivityListRepoEvents200Response": [Function],
  "getActivityListRepoNotificationsForAuthenticatedUser200Response": [Function],
  "getActivityListReposStarredByAuthenticatedUser200Response": [Function],
  "getActivityListReposStarredByAuthenticatedUser401Response": [Function],
  "getActivityListReposStarredByAuthenticatedUser403Response": [Function],
  "getActivityListReposStarredByUser200Response": [Function],
  "getActivityListReposWatchedByUser200Response": [Function],
  "getActivityListStargazersForRepo200Response": [Function],
  "getActivityListStargazersForRepo422Response": [Function],
  "getActivityListWatchedReposForAuthenticatedUser200Response": [Function],
  "getActivityListWatchedReposForAuthenticatedUser401Response": [Function],
  "getActivityListWatchedReposForAuthenticatedUser403Response": [Function],
  "getActivityListWatchersForRepo200Response": [Function],
  "getActivityMarkNotificationsAsRead202Response": [Function],
  "getActivityMarkNotificationsAsRead401Response": [Function],
  "getActivityMarkNotificationsAsRead403Response": [Function],
  "getActivityMarkRepoNotificationsAsRead202Response": [Function],
  "getActivityMarkThreadAsRead403Response": [Function],
  "getActivitySetRepoSubscription200Response": [Function],
  "getActivitySetThreadSubscription200Response": [Function],
  "getActivitySetThreadSubscription401Response": [Function],
  "getActivitySetThreadSubscription403Response": [Function],
  "getActivityStarRepoForAuthenticatedUser401Response": [Function],
  "getActivityStarRepoForAuthenticatedUser403Response": [Function],
  "getActivityStarRepoForAuthenticatedUser404Response": [Function],
  "getActivityUnstarRepoForAuthenticatedUser401Response": [Function],
  "getActivityUnstarRepoForAuthenticatedUser403Response": [Function],
  "getActivityUnstarRepoForAuthenticatedUser404Response": [Function],
  "getAppsAddRepoToInstallationForAuthenticatedUser403Response": [Function],
  "getAppsAddRepoToInstallationForAuthenticatedUser404Response": [Function],
  "getAppsCheckAuthorization200Response": [Function],
  "getAppsCheckAuthorization404Response": [Function],
  "getAppsCheckToken200Response": [Function],
  "getAppsCheckToken404Response": [Function],
  "getAppsCheckToken422Response": [Function],
  "getAppsCreateContentAttachment200Response": [Function],
  "getAppsCreateContentAttachment403Response": [Function],
  "getAppsCreateContentAttachment404Response": [Function],
  "getAppsCreateContentAttachment410Response": [Function],
  "getAppsCreateContentAttachment415Response": [Function],
  "getAppsCreateContentAttachment422Response": [Function],
  "getAppsCreateFromManifest201Response": [Function],
  "getAppsCreateFromManifest404Response": [Function],
  "getAppsCreateFromManifest422Response": [Function],
  "getAppsCreateInstallationAccessToken201Response": [Function],
  "getAppsCreateInstallationAccessToken401Response": [Function],
  "getAppsCreateInstallationAccessToken403Response": [Function],
  "getAppsCreateInstallationAccessToken404Response": [Function],
  "getAppsCreateInstallationAccessToken415Response": [Function],
  "getAppsCreateInstallationAccessToken422Response": [Function],
  "getAppsDeleteAuthorization422Response": [Function],
  "getAppsDeleteInstallation404Response": [Function],
  "getAppsDeleteToken422Response": [Function],
  "getAppsGetAuthenticated200Response": [Function],
  "getAppsGetBySlug200Response": [Function],
  "getAppsGetBySlug403Response": [Function],
  "getAppsGetBySlug404Response": [Function],
  "getAppsGetBySlug415Response": [Function],
  "getAppsGetInstallation200Response": [Function],
  "getAppsGetInstallation404Response": [Function],
  "getAppsGetInstallation415Response": [Function],
  "getAppsGetOrgInstallation200Response": [Function],
  "getAppsGetRepoInstallation200Response": [Function],
  "getAppsGetRepoInstallation301Response": [Function],
  "getAppsGetRepoInstallation404Response": [Function],
  "getAppsGetUserInstallation200Response": [Function],
  "getAppsGetWebhookConfigForApp200Response": [Function],
  "getAppsGetWebhookDelivery200Response": [Function],
  "getAppsGetWebhookDelivery400Response": [Function],
  "getAppsGetWebhookDelivery422Response": [Function],
  "getAppsListInstallationReposForAuthenticatedUser200Response": [Function],
  "getAppsListInstallationReposForAuthenticatedUser403Response": [Function],
  "getAppsListInstallationReposForAuthenticatedUser404Response": [Function],
  "getAppsListInstallations200Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser200Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser401Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser403Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser415Response": [Function],
  "getAppsListReposAccessibleToInstallation200Response": [Function],
  "getAppsListReposAccessibleToInstallation401Response": [Function],
  "getAppsListReposAccessibleToInstallation403Response": [Function],
  "getAppsListWebhookDeliveries200Response": [Function],
  "getAppsListWebhookDeliveries400Response": [Function],
  "getAppsListWebhookDeliveries422Response": [Function],
  "getAppsRedeliverWebhookDelivery202Response": [Function],
  "getAppsRedeliverWebhookDelivery400Response": [Function],
  "getAppsRedeliverWebhookDelivery422Response": [Function],
  "getAppsRemoveRepoFromInstallationForAuthenticatedUser403Response": [Function],
  "getAppsRemoveRepoFromInstallationForAuthenticatedUser404Response": [Function],
  "getAppsResetAuthorization200Response": [Function],
  "getAppsResetToken200Response": [Function],
  "getAppsResetToken422Response": [Function],
  "getAppsScopeToken200Response": [Function],
  "getAppsScopeToken401Response": [Function],
  "getAppsScopeToken403Response": [Function],
  "getAppsScopeToken404Response": [Function],
  "getAppsScopeToken422Response": [Function],
  "getAppsSuspendInstallation404Response": [Function],
  "getAppsUnsuspendInstallation404Response": [Function],
  "getAppsUpdateWebhookConfigForApp200Response": [Function],
  "getChecksCreate201Response": [Function],
  "getChecksCreateSuite200Response": [Function],
  "getChecksCreateSuite201Response": [Function],
  "getChecksGet200Response": [Function],
  "getChecksGetSuite200Response": [Function],
  "getChecksListAnnotations200Response": [Function],
  "getChecksListForRef200Response": [Function],
  "getChecksListForSuite200Response": [Function],
  "getChecksListSuitesForRef200Response": [Function],
  "getChecksRerequestRun201Response": [Function],
  "getChecksRerequestRun403Response": [Function],
  "getChecksRerequestRun404Response": [Function],
  "getChecksRerequestRun422Response": [Function],
  "getChecksRerequestSuite201Response": [Function],
  "getChecksSetSuitesPreferences200Response": [Function],
  "getChecksUpdate200Response": [Function],
  "getCodeScanningDeleteAnalysis200Response": [Function],
  "getCodeScanningDeleteAnalysis400Response": [Function],
  "getCodeScanningDeleteAnalysis403Response": [Function],
  "getCodeScanningDeleteAnalysis404Response": [Function],
  "getCodeScanningDeleteAnalysis503Response": [Function],
  "getCodeScanningGetAlert200Response": [Function],
  "getCodeScanningGetAlert403Response": [Function],
  "getCodeScanningGetAlert404Response": [Function],
  "getCodeScanningGetAlert503Response": [Function],
  "getCodeScanningGetAnalysis200Response": [Function],
  "getCodeScanningGetAnalysis403Response": [Function],
  "getCodeScanningGetAnalysis404Response": [Function],
  "getCodeScanningGetAnalysis503Response": [Function],
  "getCodeScanningGetSarif200Response": [Function],
  "getCodeScanningGetSarif403Response": [Function],
  "getCodeScanningGetSarif503Response": [Function],
  "getCodeScanningListAlertInstances200Response": [Function],
  "getCodeScanningListAlertInstances403Response": [Function],
  "getCodeScanningListAlertInstances404Response": [Function],
  "getCodeScanningListAlertInstances503Response": [Function],
  "getCodeScanningListAlertsForRepo200Response": [Function],
  "getCodeScanningListAlertsForRepo403Response": [Function],
  "getCodeScanningListAlertsForRepo404Response": [Function],
  "getCodeScanningListAlertsForRepo503Response": [Function],
  "getCodeScanningListRecentAnalyses200Response": [Function],
  "getCodeScanningListRecentAnalyses403Response": [Function],
  "getCodeScanningListRecentAnalyses404Response": [Function],
  "getCodeScanningListRecentAnalyses503Response": [Function],
  "getCodeScanningUpdateAlert200Response": [Function],
  "getCodeScanningUpdateAlert403Response": [Function],
  "getCodeScanningUpdateAlert404Response": [Function],
  "getCodeScanningUpdateAlert503Response": [Function],
  "getCodeScanningUploadSarif202Response": [Function],
  "getCodeScanningUploadSarif403Response": [Function],
  "getCodeScanningUploadSarif404Response": [Function],
  "getCodeScanningUploadSarif503Response": [Function],
  "getCodesOfConductGetAllCodesOfConduct200Response": [Function],
  "getCodesOfConductGetConductCode200Response": [Function],
  "getCodesOfConductGetConductCode404Response": [Function],
  "getEmojisGet200Response": [Function],
  "getEnterpriseAdminAddAuthorizedSshKey201Response": [Function],
  "getEnterpriseAdminCreateGlobalWebhook201Response": [Function],
  "getEnterpriseAdminCreateImpersonationOAuthToken201Response": [Function],
  "getEnterpriseAdminCreateOrg201Response": [Function],
  "getEnterpriseAdminCreatePreReceiveEnvironment201Response": [Function],
  "getEnterpriseAdminCreatePreReceiveHook201Response": [Function],
  "getEnterpriseAdminCreateRegistrationTokenForEnterprise201Response": [Function],
  "getEnterpriseAdminCreateRemoveTokenForEnterprise201Response": [Function],
  "getEnterpriseAdminCreateSelfHostedRunnerGroupForEnterprise201Response": [Function],
  "getEnterpriseAdminCreateUser201Response": [Function],
  "getEnterpriseAdminDeletePreReceiveEnvironment422Response": [Function],
  "getEnterpriseAdminEnableOrDisableMaintenanceMode200Response": [Function],
  "getEnterpriseAdminGetAllAuthorizedSshKeys200Response": [Function],
  "getEnterpriseAdminGetAllStats200Response": [Function],
  "getEnterpriseAdminGetAllowedActionsEnterprise200Response": [Function],
  "getEnterpriseAdminGetAnnouncement200Response": [Function],
  "getEnterpriseAdminGetAuditLog200Response": [Function],
  "getEnterpriseAdminGetCommentStats200Response": [Function],
  "getEnterpriseAdminGetConfigurationStatus200Response": [Function],
  "getEnterpriseAdminGetDownloadStatusForPreReceiveEnvironment200Response": [Function],
  "getEnterpriseAdminGetGistStats200Response": [Function],
  "getEnterpriseAdminGetGithubActionsPermissionsEnterprise200Response": [Function],
  "getEnterpriseAdminGetGlobalWebhook200Response": [Function],
  "getEnterpriseAdminGetHooksStats200Response": [Function],
  "getEnterpriseAdminGetIssueStats200Response": [Function],
  "getEnterpriseAdminGetLicenseInformation200Response": [Function],
  "getEnterpriseAdminGetMaintenanceStatus200Response": [Function],
  "getEnterpriseAdminGetMilestoneStats200Response": [Function],
  "getEnterpriseAdminGetOrgStats200Response": [Function],
  "getEnterpriseAdminGetPagesStats200Response": [Function],
  "getEnterpriseAdminGetPreReceiveEnvironment200Response": [Function],
  "getEnterpriseAdminGetPreReceiveHook200Response": [Function],
  "getEnterpriseAdminGetPreReceiveHookForOrg200Response": [Function],
  "getEnterpriseAdminGetPreReceiveHookForRepo200Response": [Function],
  "getEnterpriseAdminGetPullRequestStats200Response": [Function],
  "getEnterpriseAdminGetRepoStats200Response": [Function],
  "getEnterpriseAdminGetSelfHostedRunnerForEnterprise200Response": [Function],
  "getEnterpriseAdminGetSelfHostedRunnerGroupForEnterprise200Response": [Function],
  "getEnterpriseAdminGetSettings200Response": [Function],
  "getEnterpriseAdminGetUserStats200Response": [Function],
  "getEnterpriseAdminListGlobalWebhooks200Response": [Function],
  "getEnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise200Response": [Function],
  "getEnterpriseAdminListPersonalAccessTokens200Response": [Function],
  "getEnterpriseAdminListPreReceiveEnvironments200Response": [Function],
  "getEnterpriseAdminListPreReceiveHooks200Response": [Function],
  "getEnterpriseAdminListPreReceiveHooksForOrg200Response": [Function],
  "getEnterpriseAdminListPreReceiveHooksForRepo200Response": [Function],
  "getEnterpriseAdminListPublicKeys200Response": [Function],
  "getEnterpriseAdminListRunnerApplicationsForEnterprise200Response": [Function],
  "getEnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise200Response": [Function],
  "getEnterpriseAdminListSelfHostedRunnerGroupsForEnterprise200Response": [Function],
  "getEnterpriseAdminListSelfHostedRunnersForEnterprise200Response": [Function],
  "getEnterpriseAdminListSelfHostedRunnersInGroupForEnterprise200Response": [Function],
  "getEnterpriseAdminRemoveAuthorizedSshKey200Response": [Function],
  "getEnterpriseAdminRemovePreReceiveHookEnforcementForOrg200Response": [Function],
  "getEnterpriseAdminRemovePreReceiveHookEnforcementForRepo200Response": [Function],
  "getEnterpriseAdminSetAnnouncement200Response": [Function],
  "getEnterpriseAdminStartPreReceiveEnvironmentDownload202Response": [Function],
  "getEnterpriseAdminStartPreReceiveEnvironmentDownload422Response": [Function],
  "getEnterpriseAdminSyncLdapMappingForTeam201Response": [Function],
  "getEnterpriseAdminSyncLdapMappingForUser201Response": [Function],
  "getEnterpriseAdminUpdateGlobalWebhook200Response": [Function],
  "getEnterpriseAdminUpdateLdapMappingForTeam200Response": [Function],
  "getEnterpriseAdminUpdateLdapMappingForUser200Response": [Function],
  "getEnterpriseAdminUpdateOrgName202Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveEnvironment200Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveEnvironment422Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveHook200Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveHookEnforcementForOrg200Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveHookEnforcementForRepo200Response": [Function],
  "getEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterprise200Response": [Function],
  "getEnterpriseAdminUpdateUsernameForUser202Response": [Function],
  "getGistsCheckIsStarred403Response": [Function],
  "getGistsCheckIsStarred404Response": [Function],
  "getGistsCreate201Response": [Function],
  "getGistsCreate403Response": [Function],
  "getGistsCreate404Response": [Function],
  "getGistsCreate422Response": [Function],
  "getGistsCreateComment201Response": [Function],
  "getGistsCreateComment403Response": [Function],
  "getGistsCreateComment404Response": [Function],
  "getGistsDelete403Response": [Function],
  "getGistsDelete404Response": [Function],
  "getGistsDeleteComment403Response": [Function],
  "getGistsDeleteComment404Response": [Function],
  "getGistsFork201Response": [Function],
  "getGistsFork403Response": [Function],
  "getGistsFork404Response": [Function],
  "getGistsFork422Response": [Function],
  "getGistsGet200Response": [Function],
  "getGistsGet403Response": [Function],
  "getGistsGet404Response": [Function],
  "getGistsGetComment200Response": [Function],
  "getGistsGetComment403Response": [Function],
  "getGistsGetComment404Response": [Function],
  "getGistsGetRevision200Response": [Function],
  "getGistsGetRevision403Response": [Function],
  "getGistsGetRevision404Response": [Function],
  "getGistsGetRevision422Response": [Function],
  "getGistsList200Response": [Function],
  "getGistsList403Response": [Function],
  "getGistsListComments200Response": [Function],
  "getGistsListComments403Response": [Function],
  "getGistsListComments404Response": [Function],
  "getGistsListCommits200Response": [Function],
  "getGistsListCommits403Response": [Function],
  "getGistsListCommits404Response": [Function],
  "getGistsListForUser200Response": [Function],
  "getGistsListForUser422Response": [Function],
  "getGistsListForks200Response": [Function],
  "getGistsListForks403Response": [Function],
  "getGistsListForks404Response": [Function],
  "getGistsListPublic200Response": [Function],
  "getGistsListPublic403Response": [Function],
  "getGistsListPublic422Response": [Function],
  "getGistsListStarred200Response": [Function],
  "getGistsListStarred401Response": [Function],
  "getGistsListStarred403Response": [Function],
  "getGistsStar403Response": [Function],
  "getGistsStar404Response": [Function],
  "getGistsUnstar403Response": [Function],
  "getGistsUnstar404Response": [Function],
  "getGistsUpdate200Response": [Function],
  "getGistsUpdate404Response": [Function],
  "getGistsUpdate422Response": [Function],
  "getGistsUpdateComment200Response": [Function],
  "getGistsUpdateComment404Response": [Function],
  "getGitCreateBlob201Response": [Function],
  "getGitCreateBlob403Response": [Function],
  "getGitCreateBlob404Response": [Function],
  "getGitCreateBlob409Response": [Function],
  "getGitCreateBlob422Response": [Function],
  "getGitCreateCommit201Response": [Function],
  "getGitCreateCommit404Response": [Function],
  "getGitCreateCommit422Response": [Function],
  "getGitCreateRef201Response": [Function],
  "getGitCreateRef422Response": [Function],
  "getGitCreateTag201Response": [Function],
  "getGitCreateTag422Response": [Function],
  "getGitCreateTree201Response": [Function],
  "getGitCreateTree403Response": [Function],
  "getGitCreateTree404Response": [Function],
  "getGitCreateTree422Response": [Function],
  "getGitDeleteRef422Response": [Function],
  "getGitGetBlob200Response": [Function],
  "getGitGetBlob403Response": [Function],
  "getGitGetBlob404Response": [Function],
  "getGitGetBlob422Response": [Function],
  "getGitGetCommit200Response": [Function],
  "getGitGetCommit404Response": [Function],
  "getGitGetRef200Response": [Function],
  "getGitGetRef404Response": [Function],
  "getGitGetTag200Response": [Function],
  "getGitGetTag404Response": [Function],
  "getGitGetTree200Response": [Function],
  "getGitGetTree404Response": [Function],
  "getGitGetTree422Response": [Function],
  "getGitListMatchingRefs200Response": [Function],
  "getGitUpdateRef200Response": [Function],
  "getGitUpdateRef422Response": [Function],
  "getGitignoreGetAllTemplates200Response": [Function],
  "getGitignoreGetTemplate200Response": [Function],
  "getIssuesAddAssignees201Response": [Function],
  "getIssuesAddLabels200Response": [Function],
  "getIssuesAddLabels410Response": [Function],
  "getIssuesAddLabels422Response": [Function],
  "getIssuesCheckUserCanBeAssigned404Response": [Function],
  "getIssuesCreate201Response": [Function],
  "getIssuesCreate403Response": [Function],
  "getIssuesCreate404Response": [Function],
  "getIssuesCreate410Response": [Function],
  "getIssuesCreate422Response": [Function],
  "getIssuesCreate503Response": [Function],
  "getIssuesCreateComment201Response": [Function],
  "getIssuesCreateComment403Response": [Function],
  "getIssuesCreateComment404Response": [Function],
  "getIssuesCreateComment410Response": [Function],
  "getIssuesCreateComment422Response": [Function],
  "getIssuesCreateLabel201Response": [Function],
  "getIssuesCreateLabel404Response": [Function],
  "getIssuesCreateLabel422Response": [Function],
  "getIssuesCreateMilestone201Response": [Function],
  "getIssuesCreateMilestone404Response": [Function],
  "getIssuesCreateMilestone422Response": [Function],
  "getIssuesDeleteMilestone404Response": [Function],
  "getIssuesGet200Response": [Function],
  "getIssuesGet301Response": [Function],
  "getIssuesGet404Response": [Function],
  "getIssuesGet410Response": [Function],
  "getIssuesGetComment200Response": [Function],
  "getIssuesGetComment404Response": [Function],
  "getIssuesGetEvent200Response": [Function],
  "getIssuesGetEvent403Response": [Function],
  "getIssuesGetEvent404Response": [Function],
  "getIssuesGetEvent410Response": [Function],
  "getIssuesGetLabel200Response": [Function],
  "getIssuesGetLabel404Response": [Function],
  "getIssuesGetMilestone200Response": [Function],
  "getIssuesGetMilestone404Response": [Function],
  "getIssuesList200Response": [Function],
  "getIssuesList404Response": [Function],
  "getIssuesList422Response": [Function],
  "getIssuesListAssignees200Response": [Function],
  "getIssuesListAssignees404Response": [Function],
  "getIssuesListComments200Response": [Function],
  "getIssuesListComments404Response": [Function],
  "getIssuesListComments410Response": [Function],
  "getIssuesListCommentsForRepo200Response": [Function],
  "getIssuesListCommentsForRepo404Response": [Function],
  "getIssuesListCommentsForRepo422Response": [Function],
  "getIssuesListEvents200Response": [Function],
  "getIssuesListEvents410Response": [Function],
  "getIssuesListEventsForRepo200Response": [Function],
  "getIssuesListEventsForRepo422Response": [Function],
  "getIssuesListEventsForTimeline200Response": [Function],
  "getIssuesListEventsForTimeline404Response": [Function],
  "getIssuesListEventsForTimeline410Response": [Function],
  "getIssuesListForAuthenticatedUser200Response": [Function],
  "getIssuesListForAuthenticatedUser404Response": [Function],
  "getIssuesListForOrg200Response": [Function],
  "getIssuesListForOrg404Response": [Function],
  "getIssuesListForRepo200Response": [Function],
  "getIssuesListForRepo301Response": [Function],
  "getIssuesListForRepo404Response": [Function],
  "getIssuesListForRepo422Response": [Function],
  "getIssuesListLabelsForMilestone200Response": [Function],
  "getIssuesListLabelsForRepo200Response": [Function],
  "getIssuesListLabelsForRepo404Response": [Function],
  "getIssuesListLabelsOnIssue200Response": [Function],
  "getIssuesListLabelsOnIssue410Response": [Function],
  "getIssuesListMilestones200Response": [Function],
  "getIssuesListMilestones404Response": [Function],
  "getIssuesLock403Response": [Function],
  "getIssuesLock404Response": [Function],
  "getIssuesLock410Response": [Function],
  "getIssuesLock422Response": [Function],
  "getIssuesRemoveAllLabels410Response": [Function],
  "getIssuesRemoveAssignees200Response": [Function],
  "getIssuesRemoveLabel200Response": [Function],
  "getIssuesRemoveLabel404Response": [Function],
  "getIssuesRemoveLabel410Response": [Function],
  "getIssuesSetLabels200Response": [Function],
  "getIssuesSetLabels410Response": [Function],
  "getIssuesSetLabels422Response": [Function],
  "getIssuesUnlock403Response": [Function],
  "getIssuesUnlock404Response": [Function],
  "getIssuesUpdate200Response": [Function],
  "getIssuesUpdate301Response": [Function],
  "getIssuesUpdate403Response": [Function],
  "getIssuesUpdate404Response": [Function],
  "getIssuesUpdate410Response": [Function],
  "getIssuesUpdate422Response": [Function],
  "getIssuesUpdate503Response": [Function],
  "getIssuesUpdateComment200Response": [Function],
  "getIssuesUpdateComment422Response": [Function],
  "getIssuesUpdateLabel200Response": [Function],
  "getIssuesUpdateMilestone200Response": [Function],
  "getLicensesGet200Response": [Function],
  "getLicensesGet403Response": [Function],
  "getLicensesGet404Response": [Function],
  "getLicensesGetAllCommonlyUsed200Response": [Function],
  "getLicensesGetForRepo200Response": [Function],
  "getMarkdownRender200Response": [Function],
  "getMarkdownRenderRaw200Response": [Function],
  "getMetaGet200Response": [Function],
  "getMetaGetOctocat200Response": [Function],
  "getMetaGetZen200Response": [Function],
  "getMetaRoot200Response": [Function],
  "getOauthAuthorizationsCreateAuthorization201Response": [Function],
  "getOauthAuthorizationsCreateAuthorization401Response": [Function],
  "getOauthAuthorizationsCreateAuthorization403Response": [Function],
  "getOauthAuthorizationsCreateAuthorization410Response": [Function],
  "getOauthAuthorizationsCreateAuthorization422Response": [Function],
  "getOauthAuthorizationsDeleteAuthorization401Response": [Function],
  "getOauthAuthorizationsDeleteAuthorization403Response": [Function],
  "getOauthAuthorizationsDeleteGrant401Response": [Function],
  "getOauthAuthorizationsDeleteGrant403Response": [Function],
  "getOauthAuthorizationsGetAuthorization200Response": [Function],
  "getOauthAuthorizationsGetAuthorization401Response": [Function],
  "getOauthAuthorizationsGetAuthorization403Response": [Function],
  "getOauthAuthorizationsGetGrant200Response": [Function],
  "getOauthAuthorizationsGetGrant401Response": [Function],
  "getOauthAuthorizationsGetGrant403Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp200Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp201Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp401Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp403Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp422Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprint200Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprint201Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprint422Response": [Function],
  "getOauthAuthorizationsListAuthorizations200Response": [Function],
  "getOauthAuthorizationsListAuthorizations401Response": [Function],
  "getOauthAuthorizationsListAuthorizations403Response": [Function],
  "getOauthAuthorizationsListAuthorizations404Response": [Function],
  "getOauthAuthorizationsListGrants200Response": [Function],
  "getOauthAuthorizationsListGrants401Response": [Function],
  "getOauthAuthorizationsListGrants403Response": [Function],
  "getOauthAuthorizationsListGrants404Response": [Function],
  "getOauthAuthorizationsUpdateAuthorization200Response": [Function],
  "getOauthAuthorizationsUpdateAuthorization422Response": [Function],
  "getOrgsConvertMemberToOutsideCollaborator202Response": [Function],
  "getOrgsConvertMemberToOutsideCollaborator404Response": [Function],
  "getOrgsCreateWebhook201Response": [Function],
  "getOrgsCreateWebhook404Response": [Function],
  "getOrgsCreateWebhook422Response": [Function],
  "getOrgsDeleteWebhook404Response": [Function],
  "getOrgsGet200Response": [Function],
  "getOrgsGet404Response": [Function],
  "getOrgsGetAuditLog200Response": [Function],
  "getOrgsGetMembershipForAuthenticatedUser200Response": [Function],
  "getOrgsGetMembershipForAuthenticatedUser403Response": [Function],
  "getOrgsGetMembershipForAuthenticatedUser404Response": [Function],
  "getOrgsGetMembershipForUser200Response": [Function],
  "getOrgsGetMembershipForUser403Response": [Function],
  "getOrgsGetMembershipForUser404Response": [Function],
  "getOrgsGetWebhook200Response": [Function],
  "getOrgsGetWebhook404Response": [Function],
  "getOrgsGetWebhookConfigForOrg200Response": [Function],
  "getOrgsGetWebhookDelivery200Response": [Function],
  "getOrgsGetWebhookDelivery400Response": [Function],
  "getOrgsGetWebhookDelivery422Response": [Function],
  "getOrgsList200Response": [Function],
  "getOrgsListAppInstallations200Response": [Function],
  "getOrgsListForAuthenticatedUser200Response": [Function],
  "getOrgsListForAuthenticatedUser401Response": [Function],
  "getOrgsListForAuthenticatedUser403Response": [Function],
  "getOrgsListForUser200Response": [Function],
  "getOrgsListMembers200Response": [Function],
  "getOrgsListMembers422Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser200Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser401Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser403Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser422Response": [Function],
  "getOrgsListOutsideCollaborators200Response": [Function],
  "getOrgsListPublicMembers200Response": [Function],
  "getOrgsListWebhookDeliveries200Response": [Function],
  "getOrgsListWebhookDeliveries400Response": [Function],
  "getOrgsListWebhookDeliveries422Response": [Function],
  "getOrgsListWebhooks200Response": [Function],
  "getOrgsListWebhooks404Response": [Function],
  "getOrgsPingWebhook404Response": [Function],
  "getOrgsRedeliverWebhookDelivery202Response": [Function],
  "getOrgsRedeliverWebhookDelivery400Response": [Function],
  "getOrgsRedeliverWebhookDelivery422Response": [Function],
  "getOrgsRemoveMember403Response": [Function],
  "getOrgsRemoveMembershipForUser403Response": [Function],
  "getOrgsRemoveMembershipForUser404Response": [Function],
  "getOrgsRemoveOutsideCollaborator422Response": [Function],
  "getOrgsSetMembershipForUser200Response": [Function],
  "getOrgsSetMembershipForUser403Response": [Function],
  "getOrgsSetMembershipForUser422Response": [Function],
  "getOrgsSetPublicMembershipForAuthenticatedUser403Response": [Function],
  "getOrgsUpdate200Response": [Function],
  "getOrgsUpdate409Response": [Function],
  "getOrgsUpdate422Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser200Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser403Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser404Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser422Response": [Function],
  "getOrgsUpdateWebhook200Response": [Function],
  "getOrgsUpdateWebhook404Response": [Function],
  "getOrgsUpdateWebhook422Response": [Function],
  "getOrgsUpdateWebhookConfigForOrg200Response": [Function],
  "getProjectsAddCollaborator401Response": [Function],
  "getProjectsAddCollaborator403Response": [Function],
  "getProjectsAddCollaborator404Response": [Function],
  "getProjectsAddCollaborator422Response": [Function],
  "getProjectsCreateCard201Response": [Function],
  "getProjectsCreateCard401Response": [Function],
  "getProjectsCreateCard403Response": [Function],
  "getProjectsCreateCard422Response": [Function],
  "getProjectsCreateCard503Response": [Function],
  "getProjectsCreateColumn201Response": [Function],
  "getProjectsCreateColumn401Response": [Function],
  "getProjectsCreateColumn403Response": [Function],
  "getProjectsCreateColumn422Response": [Function],
  "getProjectsCreateForAuthenticatedUser201Response": [Function],
  "getProjectsCreateForAuthenticatedUser401Response": [Function],
  "getProjectsCreateForAuthenticatedUser403Response": [Function],
  "getProjectsCreateForAuthenticatedUser415Response": [Function],
  "getProjectsCreateForAuthenticatedUser422Response": [Function],
  "getProjectsCreateForOrg201Response": [Function],
  "getProjectsCreateForOrg401Response": [Function],
  "getProjectsCreateForOrg403Response": [Function],
  "getProjectsCreateForOrg404Response": [Function],
  "getProjectsCreateForOrg410Response": [Function],
  "getProjectsCreateForOrg422Response": [Function],
  "getProjectsCreateForRepo201Response": [Function],
  "getProjectsCreateForRepo401Response": [Function],
  "getProjectsCreateForRepo403Response": [Function],
  "getProjectsCreateForRepo404Response": [Function],
  "getProjectsCreateForRepo410Response": [Function],
  "getProjectsCreateForRepo422Response": [Function],
  "getProjectsDelete401Response": [Function],
  "getProjectsDelete403Response": [Function],
  "getProjectsDelete404Response": [Function],
  "getProjectsDelete410Response": [Function],
  "getProjectsDeleteCard401Response": [Function],
  "getProjectsDeleteCard403Response": [Function],
  "getProjectsDeleteCard404Response": [Function],
  "getProjectsDeleteColumn401Response": [Function],
  "getProjectsDeleteColumn403Response": [Function],
  "getProjectsGet200Response": [Function],
  "getProjectsGet401Response": [Function],
  "getProjectsGet403Response": [Function],
  "getProjectsGetCard200Response": [Function],
  "getProjectsGetCard401Response": [Function],
  "getProjectsGetCard403Response": [Function],
  "getProjectsGetCard404Response": [Function],
  "getProjectsGetColumn200Response": [Function],
  "getProjectsGetColumn401Response": [Function],
  "getProjectsGetColumn403Response": [Function],
  "getProjectsGetColumn404Response": [Function],
  "getProjectsGetPermissionForUser200Response": [Function],
  "getProjectsGetPermissionForUser401Response": [Function],
  "getProjectsGetPermissionForUser403Response": [Function],
  "getProjectsGetPermissionForUser404Response": [Function],
  "getProjectsGetPermissionForUser422Response": [Function],
  "getProjectsListCards200Response": [Function],
  "getProjectsListCards401Response": [Function],
  "getProjectsListCards403Response": [Function],
  "getProjectsListCollaborators200Response": [Function],
  "getProjectsListCollaborators401Response": [Function],
  "getProjectsListCollaborators403Response": [Function],
  "getProjectsListCollaborators404Response": [Function],
  "getProjectsListCollaborators422Response": [Function],
  "getProjectsListColumns200Response": [Function],
  "getProjectsListColumns401Response": [Function],
  "getProjectsListColumns403Response": [Function],
  "getProjectsListForOrg200Response": [Function],
  "getProjectsListForOrg422Response": [Function],
  "getProjectsListForRepo200Response": [Function],
  "getProjectsListForRepo401Response": [Function],
  "getProjectsListForRepo403Response": [Function],
  "getProjectsListForRepo404Response": [Function],
  "getProjectsListForRepo410Response": [Function],
  "getProjectsListForRepo422Response": [Function],
  "getProjectsListForUser200Response": [Function],
  "getProjectsListForUser422Response": [Function],
  "getProjectsMoveCard201Response": [Function],
  "getProjectsMoveCard401Response": [Function],
  "getProjectsMoveCard403Response": [Function],
  "getProjectsMoveCard422Response": [Function],
  "getProjectsMoveCard503Response": [Function],
  "getProjectsMoveColumn201Response": [Function],
  "getProjectsMoveColumn401Response": [Function],
  "getProjectsMoveColumn403Response": [Function],
  "getProjectsMoveColumn422Response": [Function],
  "getProjectsRemoveCollaborator401Response": [Function],
  "getProjectsRemoveCollaborator403Response": [Function],
  "getProjectsRemoveCollaborator404Response": [Function],
  "getProjectsRemoveCollaborator422Response": [Function],
  "getProjectsUpdate200Response": [Function],
  "getProjectsUpdate401Response": [Function],
  "getProjectsUpdate403Response": [Function],
  "getProjectsUpdate410Response": [Function],
  "getProjectsUpdate422Response": [Function],
  "getProjectsUpdateCard200Response": [Function],
  "getProjectsUpdateCard401Response": [Function],
  "getProjectsUpdateCard403Response": [Function],
  "getProjectsUpdateCard404Response": [Function],
  "getProjectsUpdateCard422Response": [Function],
  "getProjectsUpdateColumn200Response": [Function],
  "getProjectsUpdateColumn401Response": [Function],
  "getProjectsUpdateColumn403Response": [Function],
  "getPullsCreate201Response": [Function],
  "getPullsCreate403Response": [Function],
  "getPullsCreate422Response": [Function],
  "getPullsCreateReplyForReviewComment201Response": [Function],
  "getPullsCreateReplyForReviewComment404Response": [Function],
  "getPullsCreateReview200Response": [Function],
  "getPullsCreateReview403Response": [Function],
  "getPullsCreateReview422Response": [Function],
  "getPullsCreateReviewComment201Response": [Function],
  "getPullsCreateReviewComment403Response": [Function],
  "getPullsCreateReviewComment422Response": [Function],
  "getPullsDeletePendingReview200Response": [Function],
  "getPullsDeletePendingReview404Response": [Function],
  "getPullsDeletePendingReview422Response": [Function],
  "getPullsDeleteReviewComment404Response": [Function],
  "getPullsDismissReview200Response": [Function],
  "getPullsDismissReview404Response": [Function],
  "getPullsDismissReview422Response": [Function],
  "getPullsGet200Response": [Function],
  "getPullsGet404Response": [Function],
  "getPullsGet500Response": [Function],
  "getPullsGetReview200Response": [Function],
  "getPullsGetReview404Response": [Function],
  "getPullsGetReviewComment200Response": [Function],
  "getPullsGetReviewComment404Response": [Function],
  "getPullsList200Response": [Function],
  "getPullsList422Response": [Function],
  "getPullsListCommentsForReview200Response": [Function],
  "getPullsListCommentsForReview404Response": [Function],
  "getPullsListCommits200Response": [Function],
  "getPullsListFiles200Response": [Function],
  "getPullsListFiles422Response": [Function],
  "getPullsListFiles500Response": [Function],
  "getPullsListRequestedReviewers200Response": [Function],
  "getPullsListReviewComments200Response": [Function],
  "getPullsListReviewCommentsForRepo200Response": [Function],
  "getPullsListReviews200Response": [Function],
  "getPullsMerge200Response": [Function],
  "getPullsMerge403Response": [Function],
  "getPullsMerge404Response": [Function],
  "getPullsMerge405Response": [Function],
  "getPullsMerge409Response": [Function],
  "getPullsMerge422Response": [Function],
  "getPullsRemoveRequestedReviewers200Response": [Function],
  "getPullsRemoveRequestedReviewers422Response": [Function],
  "getPullsRequestReviewers201Response": [Function],
  "getPullsRequestReviewers403Response": [Function],
  "getPullsSubmitReview200Response": [Function],
  "getPullsSubmitReview403Response": [Function],
  "getPullsSubmitReview404Response": [Function],
  "getPullsSubmitReview422Response": [Function],
  "getPullsUpdate200Response": [Function],
  "getPullsUpdate403Response": [Function],
  "getPullsUpdate422Response": [Function],
  "getPullsUpdateBranch202Response": [Function],
  "getPullsUpdateBranch403Response": [Function],
  "getPullsUpdateBranch422Response": [Function],
  "getPullsUpdateReview200Response": [Function],
  "getPullsUpdateReview422Response": [Function],
  "getPullsUpdateReviewComment200Response": [Function],
  "getRateLimitGet200Response": [Function],
  "getRateLimitGet404Response": [Function],
  "getReactionsCreateForCommitComment200Response": [Function],
  "getReactionsCreateForCommitComment201Response": [Function],
  "getReactionsCreateForCommitComment415Response": [Function],
  "getReactionsCreateForCommitComment422Response": [Function],
  "getReactionsCreateForIssue200Response": [Function],
  "getReactionsCreateForIssue201Response": [Function],
  "getReactionsCreateForIssue422Response": [Function],
  "getReactionsCreateForIssueComment200Response": [Function],
  "getReactionsCreateForIssueComment201Response": [Function],
  "getReactionsCreateForIssueComment422Response": [Function],
  "getReactionsCreateForPullRequestReviewComment200Response": [Function],
  "getReactionsCreateForPullRequestReviewComment201Response": [Function],
  "getReactionsCreateForPullRequestReviewComment422Response": [Function],
  "getReactionsCreateForRelease200Response": [Function],
  "getReactionsCreateForRelease201Response": [Function],
  "getReactionsCreateForRelease422Response": [Function],
  "getReactionsCreateForTeamDiscussionCommentInOrg200Response": [Function],
  "getReactionsCreateForTeamDiscussionCommentInOrg201Response": [Function],
  "getReactionsCreateForTeamDiscussionCommentLegacy201Response": [Function],
  "getReactionsCreateForTeamDiscussionInOrg200Response": [Function],
  "getReactionsCreateForTeamDiscussionInOrg201Response": [Function],
  "getReactionsCreateForTeamDiscussionLegacy201Response": [Function],
  "getReactionsDeleteLegacy401Response": [Function],
  "getReactionsDeleteLegacy403Response": [Function],
  "getReactionsDeleteLegacy410Response": [Function],
  "getReactionsListForCommitComment200Response": [Function],
  "getReactionsListForCommitComment404Response": [Function],
  "getReactionsListForIssue200Response": [Function],
  "getReactionsListForIssue404Response": [Function],
  "getReactionsListForIssue410Response": [Function],
  "getReactionsListForIssueComment200Response": [Function],
  "getReactionsListForIssueComment404Response": [Function],
  "getReactionsListForPullRequestReviewComment200Response": [Function],
  "getReactionsListForPullRequestReviewComment404Response": [Function],
  "getReactionsListForTeamDiscussionCommentInOrg200Response": [Function],
  "getReactionsListForTeamDiscussionCommentLegacy200Response": [Function],
  "getReactionsListForTeamDiscussionInOrg200Response": [Function],
  "getReactionsListForTeamDiscussionLegacy200Response": [Function],
  "getReposAcceptInvitationForAuthenticatedUser403Response": [Function],
  "getReposAcceptInvitationForAuthenticatedUser404Response": [Function],
  "getReposAcceptInvitationForAuthenticatedUser409Response": [Function],
  "getReposAddAppAccessRestrictions200Response": [Function],
  "getReposAddAppAccessRestrictions422Response": [Function],
  "getReposAddCollaborator201Response": [Function],
  "getReposAddCollaborator403Response": [Function],
  "getReposAddCollaborator422Response": [Function],
  "getReposAddStatusCheckContexts200Response": [Function],
  "getReposAddStatusCheckContexts403Response": [Function],
  "getReposAddStatusCheckContexts404Response": [Function],
  "getReposAddStatusCheckContexts422Response": [Function],
  "getReposAddTeamAccessRestrictions200Response": [Function],
  "getReposAddTeamAccessRestrictions422Response": [Function],
  "getReposAddUserAccessRestrictions200Response": [Function],
  "getReposAddUserAccessRestrictions422Response": [Function],
  "getReposCompareCommits200Response": [Function],
  "getReposCompareCommits404Response": [Function],
  "getReposCompareCommits500Response": [Function],
  "getReposCreateAutolink201Response": [Function],
  "getReposCreateAutolink422Response": [Function],
  "getReposCreateCommitComment201Response": [Function],
  "getReposCreateCommitComment403Response": [Function],
  "getReposCreateCommitComment422Response": [Function],
  "getReposCreateCommitSignatureProtection200Response": [Function],
  "getReposCreateCommitSignatureProtection404Response": [Function],
  "getReposCreateCommitStatus201Response": [Function],
  "getReposCreateDeployKey201Response": [Function],
  "getReposCreateDeployKey422Response": [Function],
  "getReposCreateDeployment201Response": [Function],
  "getReposCreateDeployment202Response": [Function],
  "getReposCreateDeployment422Response": [Function],
  "getReposCreateDeploymentStatus201Response": [Function],
  "getReposCreateDeploymentStatus422Response": [Function],
  "getReposCreateDispatchEvent422Response": [Function],
  "getReposCreateForAuthenticatedUser201Response": [Function],
  "getReposCreateForAuthenticatedUser400Response": [Function],
  "getReposCreateForAuthenticatedUser401Response": [Function],
  "getReposCreateForAuthenticatedUser403Response": [Function],
  "getReposCreateForAuthenticatedUser404Response": [Function],
  "getReposCreateForAuthenticatedUser422Response": [Function],
  "getReposCreateFork202Response": [Function],
  "getReposCreateFork400Response": [Function],
  "getReposCreateFork403Response": [Function],
  "getReposCreateFork404Response": [Function],
  "getReposCreateFork422Response": [Function],
  "getReposCreateInOrg201Response": [Function],
  "getReposCreateInOrg403Response": [Function],
  "getReposCreateInOrg422Response": [Function],
  "getReposCreateOrUpdateEnvironment200Response": [Function],
  "getReposCreateOrUpdateEnvironment422Response": [Function],
  "getReposCreateOrUpdateFileContents200Response": [Function],
  "getReposCreateOrUpdateFileContents201Response": [Function],
  "getReposCreateOrUpdateFileContents404Response": [Function],
  "getReposCreateOrUpdateFileContents409Response": [Function],
  "getReposCreateOrUpdateFileContents422Response": [Function],
  "getReposCreatePagesSite201Response": [Function],
  "getReposCreatePagesSite409Response": [Function],
  "getReposCreatePagesSite422Response": [Function],
  "getReposCreateRelease201Response": [Function],
  "getReposCreateRelease422Response": [Function],
  "getReposCreateUsingTemplate201Response": [Function],
  "getReposCreateWebhook201Response": [Function],
  "getReposCreateWebhook403Response": [Function],
  "getReposCreateWebhook404Response": [Function],
  "getReposCreateWebhook422Response": [Function],
  "getReposDeclineInvitationForAuthenticatedUser403Response": [Function],
  "getReposDeclineInvitationForAuthenticatedUser404Response": [Function],
  "getReposDeclineInvitationForAuthenticatedUser409Response": [Function],
  "getReposDelete307Response": [Function],
  "getReposDelete403Response": [Function],
  "getReposDelete404Response": [Function],
  "getReposDeleteAdminBranchProtection404Response": [Function],
  "getReposDeleteAutolink404Response": [Function],
  "getReposDeleteBranchProtection403Response": [Function],
  "getReposDeleteCommitComment404Response": [Function],
  "getReposDeleteCommitSignatureProtection404Response": [Function],
  "getReposDeleteDeployment404Response": [Function],
  "getReposDeleteDeployment422Response": [Function],
  "getReposDeleteFile200Response": [Function],
  "getReposDeleteFile404Response": [Function],
  "getReposDeleteFile409Response": [Function],
  "getReposDeleteFile422Response": [Function],
  "getReposDeleteFile503Response": [Function],
  "getReposDeletePagesSite404Response": [Function],
  "getReposDeletePagesSite422Response": [Function],
  "getReposDeletePullRequestReviewProtection404Response": [Function],
  "getReposDeleteWebhook404Response": [Function],
  "getReposEnableLfsForRepo202Response": [Function],
  "getReposGenerateReleaseNotes200Response": [Function],
  "getReposGenerateReleaseNotes404Response": [Function],
  "getReposGet200Response": [Function],
  "getReposGet301Response": [Function],
  "getReposGet403Response": [Function],
  "getReposGet404Response": [Function],
  "getReposGetAccessRestrictions200Response": [Function],
  "getReposGetAccessRestrictions404Response": [Function],
  "getReposGetAdminBranchProtection200Response": [Function],
  "getReposGetAllEnvironments200Response": [Function],
  "getReposGetAllStatusCheckContexts200Response": [Function],
  "getReposGetAllStatusCheckContexts404Response": [Function],
  "getReposGetAllTopics200Response": [Function],
  "getReposGetAllTopics404Response": [Function],
  "getReposGetAppsWithAccessToProtectedBranch200Response": [Function],
  "getReposGetAppsWithAccessToProtectedBranch404Response": [Function],
  "getReposGetAutolink200Response": [Function],
  "getReposGetAutolink404Response": [Function],
  "getReposGetBranch200Response": [Function],
  "getReposGetBranch301Response": [Function],
  "getReposGetBranch404Response": [Function],
  "getReposGetBranch415Response": [Function],
  "getReposGetBranchProtection200Response": [Function],
  "getReposGetBranchProtection404Response": [Function],
  "getReposGetCodeFrequencyStats200Response": [Function],
  "getReposGetCodeFrequencyStats202Response": [Function],
  "getReposGetCollaboratorPermissionLevel200Response": [Function],
  "getReposGetCollaboratorPermissionLevel404Response": [Function],
  "getReposGetCombinedStatusForRef200Response": [Function],
  "getReposGetCombinedStatusForRef404Response": [Function],
  "getReposGetCommit200Response": [Function],
  "getReposGetCommit404Response": [Function],
  "getReposGetCommit422Response": [Function],
  "getReposGetCommit500Response": [Function],
  "getReposGetCommitActivityStats200Response": [Function],
  "getReposGetCommitActivityStats202Response": [Function],
  "getReposGetCommitComment200Response": [Function],
  "getReposGetCommitComment404Response": [Function],
  "getReposGetCommitSignatureProtection200Response": [Function],
  "getReposGetCommitSignatureProtection404Response": [Function],
  "getReposGetContent200Response": [Function],
  "getReposGetContent403Response": [Function],
  "getReposGetContent404Response": [Function],
  "getReposGetContributorsStats200Response": [Function],
  "getReposGetContributorsStats202Response": [Function],
  "getReposGetDeployKey200Response": [Function],
  "getReposGetDeployKey404Response": [Function],
  "getReposGetDeployment200Response": [Function],
  "getReposGetDeployment404Response": [Function],
  "getReposGetDeploymentStatus200Response": [Function],
  "getReposGetDeploymentStatus404Response": [Function],
  "getReposGetEnvironment200Response": [Function],
  "getReposGetLatestPagesBuild200Response": [Function],
  "getReposGetLatestRelease200Response": [Function],
  "getReposGetPages200Response": [Function],
  "getReposGetPages404Response": [Function],
  "getReposGetPagesBuild200Response": [Function],
  "getReposGetParticipationStats200Response": [Function],
  "getReposGetParticipationStats404Response": [Function],
  "getReposGetPullRequestReviewProtection200Response": [Function],
  "getReposGetPunchCardStats200Response": [Function],
  "getReposGetReadme200Response": [Function],
  "getReposGetReadme404Response": [Function],
  "getReposGetReadme422Response": [Function],
  "getReposGetReadmeInDirectory200Response": [Function],
  "getReposGetReadmeInDirectory404Response": [Function],
  "getReposGetReadmeInDirectory422Response": [Function],
  "getReposGetRelease200Response": [Function],
  "getReposGetRelease404Response": [Function],
  "getReposGetReleaseAsset200Response": [Function],
  "getReposGetReleaseAsset404Response": [Function],
  "getReposGetReleaseAsset415Response": [Function],
  "getReposGetReleaseByTag200Response": [Function],
  "getReposGetReleaseByTag404Response": [Function],
  "getReposGetStatusChecksProtection200Response": [Function],
  "getReposGetStatusChecksProtection404Response": [Function],
  "getReposGetTeamsWithAccessToProtectedBranch200Response": [Function],
  "getReposGetTeamsWithAccessToProtectedBranch404Response": [Function],
  "getReposGetUsersWithAccessToProtectedBranch200Response": [Function],
  "getReposGetUsersWithAccessToProtectedBranch404Response": [Function],
  "getReposGetWebhook200Response": [Function],
  "getReposGetWebhook404Response": [Function],
  "getReposGetWebhookConfigForRepo200Response": [Function],
  "getReposGetWebhookDelivery200Response": [Function],
  "getReposGetWebhookDelivery400Response": [Function],
  "getReposGetWebhookDelivery422Response": [Function],
  "getReposListAutolinks200Response": [Function],
  "getReposListBranches200Response": [Function],
  "getReposListBranches404Response": [Function],
  "getReposListBranchesForHeadCommit200Response": [Function],
  "getReposListBranchesForHeadCommit422Response": [Function],
  "getReposListCollaborators200Response": [Function],
  "getReposListCollaborators404Response": [Function],
  "getReposListCommentsForCommit200Response": [Function],
  "getReposListCommitCommentsForRepo200Response": [Function],
  "getReposListCommitStatusesForRef200Response": [Function],
  "getReposListCommitStatusesForRef301Response": [Function],
  "getReposListCommits200Response": [Function],
  "getReposListCommits400Response": [Function],
  "getReposListCommits404Response": [Function],
  "getReposListCommits409Response": [Function],
  "getReposListCommits500Response": [Function],
  "getReposListContributors200Response": [Function],
  "getReposListContributors403Response": [Function],
  "getReposListContributors404Response": [Function],
  "getReposListDeployKeys200Response": [Function],
  "getReposListDeploymentStatuses200Response": [Function],
  "getReposListDeploymentStatuses404Response": [Function],
  "getReposListDeployments200Response": [Function],
  "getReposListForAuthenticatedUser200Response": [Function],
  "getReposListForAuthenticatedUser401Response": [Function],
  "getReposListForAuthenticatedUser403Response": [Function],
  "getReposListForAuthenticatedUser422Response": [Function],
  "getReposListForOrg200Response": [Function],
  "getReposListForUser200Response": [Function],
  "getReposListForks200Response": [Function],
  "getReposListForks400Response": [Function],
  "getReposListInvitations200Response": [Function],
  "getReposListInvitationsForAuthenticatedUser200Response": [Function],
  "getReposListInvitationsForAuthenticatedUser401Response": [Function],
  "getReposListInvitationsForAuthenticatedUser403Response": [Function],
  "getReposListInvitationsForAuthenticatedUser404Response": [Function],
  "getReposListLanguages200Response": [Function],
  "getReposListPagesBuilds200Response": [Function],
  "getReposListPublic200Response": [Function],
  "getReposListPublic422Response": [Function],
  "getReposListPullRequestsAssociatedWithCommit200Response": [Function],
  "getReposListReleaseAssets200Response": [Function],
  "getReposListReleases200Response": [Function],
  "getReposListReleases404Response": [Function],
  "getReposListTags200Response": [Function],
  "getReposListTeams200Response": [Function],
  "getReposListWebhookDeliveries200Response": [Function],
  "getReposListWebhookDeliveries400Response": [Function],
  "getReposListWebhookDeliveries422Response": [Function],
  "getReposListWebhooks200Response": [Function],
  "getReposListWebhooks404Response": [Function],
  "getReposMerge201Response": [Function],
  "getReposMerge403Response": [Function],
  "getReposMerge422Response": [Function],
  "getReposMergeUpstream200Response": [Function],
  "getReposPingWebhook404Response": [Function],
  "getReposRedeliverWebhookDelivery202Response": [Function],
  "getReposRedeliverWebhookDelivery400Response": [Function],
  "getReposRedeliverWebhookDelivery422Response": [Function],
  "getReposRemoveAppAccessRestrictions200Response": [Function],
  "getReposRemoveAppAccessRestrictions422Response": [Function],
  "getReposRemoveStatusCheckContexts200Response": [Function],
  "getReposRemoveStatusCheckContexts404Response": [Function],
  "getReposRemoveStatusCheckContexts422Response": [Function],
  "getReposRemoveTeamAccessRestrictions200Response": [Function],
  "getReposRemoveTeamAccessRestrictions422Response": [Function],
  "getReposRemoveUserAccessRestrictions200Response": [Function],
  "getReposRemoveUserAccessRestrictions422Response": [Function],
  "getReposRenameBranch201Response": [Function],
  "getReposRenameBranch403Response": [Function],
  "getReposRenameBranch404Response": [Function],
  "getReposRenameBranch422Response": [Function],
  "getReposReplaceAllTopics200Response": [Function],
  "getReposReplaceAllTopics404Response": [Function],
  "getReposReplaceAllTopics422Response": [Function],
  "getReposRequestPagesBuild201Response": [Function],
  "getReposSetAdminBranchProtection200Response": [Function],
  "getReposSetAppAccessRestrictions200Response": [Function],
  "getReposSetAppAccessRestrictions422Response": [Function],
  "getReposSetStatusCheckContexts200Response": [Function],
  "getReposSetStatusCheckContexts404Response": [Function],
  "getReposSetStatusCheckContexts422Response": [Function],
  "getReposSetTeamAccessRestrictions200Response": [Function],
  "getReposSetTeamAccessRestrictions422Response": [Function],
  "getReposSetUserAccessRestrictions200Response": [Function],
  "getReposSetUserAccessRestrictions422Response": [Function],
  "getReposTestPushWebhook404Response": [Function],
  "getReposTransfer202Response": [Function],
  "getReposUpdate200Response": [Function],
  "getReposUpdate307Response": [Function],
  "getReposUpdate403Response": [Function],
  "getReposUpdate404Response": [Function],
  "getReposUpdate422Response": [Function],
  "getReposUpdateBranchProtection200Response": [Function],
  "getReposUpdateBranchProtection403Response": [Function],
  "getReposUpdateBranchProtection404Response": [Function],
  "getReposUpdateBranchProtection422Response": [Function],
  "getReposUpdateCommitComment200Response": [Function],
  "getReposUpdateCommitComment404Response": [Function],
  "getReposUpdateInformationAboutPagesSite400Response": [Function],
  "getReposUpdateInformationAboutPagesSite422Response": [Function],
  "getReposUpdateInvitation200Response": [Function],
  "getReposUpdatePullRequestReviewProtection200Response": [Function],
  "getReposUpdatePullRequestReviewProtection422Response": [Function],
  "getReposUpdateRelease200Response": [Function],
  "getReposUpdateReleaseAsset200Response": [Function],
  "getReposUpdateStatusCheckProtection200Response": [Function],
  "getReposUpdateStatusCheckProtection404Response": [Function],
  "getReposUpdateStatusCheckProtection422Response": [Function],
  "getReposUpdateWebhook200Response": [Function],
  "getReposUpdateWebhook404Response": [Function],
  "getReposUpdateWebhook422Response": [Function],
  "getReposUpdateWebhookConfigForRepo200Response": [Function],
  "getReposUploadReleaseAsset201Response": [Function],
  "getSearchCode200Response": [Function],
  "getSearchCode403Response": [Function],
  "getSearchCode422Response": [Function],
  "getSearchCode503Response": [Function],
  "getSearchCommits200Response": [Function],
  "getSearchIssuesAndPullRequests200Response": [Function],
  "getSearchIssuesAndPullRequests403Response": [Function],
  "getSearchIssuesAndPullRequests422Response": [Function],
  "getSearchIssuesAndPullRequests503Response": [Function],
  "getSearchLabels200Response": [Function],
  "getSearchLabels403Response": [Function],
  "getSearchLabels404Response": [Function],
  "getSearchLabels422Response": [Function],
  "getSearchRepos200Response": [Function],
  "getSearchRepos422Response": [Function],
  "getSearchRepos503Response": [Function],
  "getSearchTopics200Response": [Function],
  "getSearchUsers200Response": [Function],
  "getSearchUsers422Response": [Function],
  "getSearchUsers503Response": [Function],
  "getSecretScanningGetAlert200Response": [Function],
  "getSecretScanningGetAlert503Response": [Function],
  "getSecretScanningListAlertsForOrg200Response": [Function],
  "getSecretScanningListAlertsForOrg404Response": [Function],
  "getSecretScanningListAlertsForOrg503Response": [Function],
  "getSecretScanningListAlertsForRepo200Response": [Function],
  "getSecretScanningListAlertsForRepo503Response": [Function],
  "getSecretScanningListLocationsForAlert200Response": [Function],
  "getSecretScanningListLocationsForAlert503Response": [Function],
  "getSecretScanningUpdateAlert200Response": [Function],
  "getSecretScanningUpdateAlert503Response": [Function],
  "getTeamsAddMemberLegacy403Response": [Function],
  "getTeamsAddOrUpdateMembershipForUserInOrg200Response": [Function],
  "getTeamsAddOrUpdateMembershipForUserLegacy200Response": [Function],
  "getTeamsAddOrUpdateMembershipForUserLegacy404Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsInOrg403Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsLegacy403Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsLegacy404Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsLegacy422Response": [Function],
  "getTeamsAddOrUpdateRepoPermissionsLegacy403Response": [Function],
  "getTeamsAddOrUpdateRepoPermissionsLegacy422Response": [Function],
  "getTeamsCheckPermissionsForProjectInOrg200Response": [Function],
  "getTeamsCheckPermissionsForProjectLegacy200Response": [Function],
  "getTeamsCheckPermissionsForRepoInOrg200Response": [Function],
  "getTeamsCheckPermissionsForRepoLegacy200Response": [Function],
  "getTeamsCreate201Response": [Function],
  "getTeamsCreate403Response": [Function],
  "getTeamsCreate422Response": [Function],
  "getTeamsCreateDiscussionCommentInOrg201Response": [Function],
  "getTeamsCreateDiscussionCommentLegacy201Response": [Function],
  "getTeamsCreateDiscussionInOrg201Response": [Function],
  "getTeamsCreateDiscussionLegacy201Response": [Function],
  "getTeamsDeleteLegacy404Response": [Function],
  "getTeamsDeleteLegacy422Response": [Function],
  "getTeamsGetByName200Response": [Function],
  "getTeamsGetByName404Response": [Function],
  "getTeamsGetDiscussionCommentInOrg200Response": [Function],
  "getTeamsGetDiscussionCommentLegacy200Response": [Function],
  "getTeamsGetDiscussionInOrg200Response": [Function],
  "getTeamsGetDiscussionLegacy200Response": [Function],
  "getTeamsGetLegacy200Response": [Function],
  "getTeamsGetLegacy404Response": [Function],
  "getTeamsGetMembershipForUserInOrg200Response": [Function],
  "getTeamsGetMembershipForUserLegacy200Response": [Function],
  "getTeamsGetMembershipForUserLegacy404Response": [Function],
  "getTeamsList200Response": [Function],
  "getTeamsList403Response": [Function],
  "getTeamsListChildInOrg200Response": [Function],
  "getTeamsListChildLegacy200Response": [Function],
  "getTeamsListChildLegacy403Response": [Function],
  "getTeamsListChildLegacy404Response": [Function],
  "getTeamsListChildLegacy422Response": [Function],
  "getTeamsListDiscussionCommentsInOrg200Response": [Function],
  "getTeamsListDiscussionCommentsLegacy200Response": [Function],
  "getTeamsListDiscussionsInOrg200Response": [Function],
  "getTeamsListDiscussionsLegacy200Response": [Function],
  "getTeamsListForAuthenticatedUser200Response": [Function],
  "getTeamsListForAuthenticatedUser403Response": [Function],
  "getTeamsListForAuthenticatedUser404Response": [Function],
  "getTeamsListMembersInOrg200Response": [Function],
  "getTeamsListMembersLegacy200Response": [Function],
  "getTeamsListMembersLegacy404Response": [Function],
  "getTeamsListProjectsInOrg200Response": [Function],
  "getTeamsListProjectsLegacy200Response": [Function],
  "getTeamsListProjectsLegacy404Response": [Function],
  "getTeamsListReposInOrg200Response": [Function],
  "getTeamsListReposLegacy200Response": [Function],
  "getTeamsListReposLegacy404Response": [Function],
  "getTeamsRemoveProjectLegacy404Response": [Function],
  "getTeamsRemoveProjectLegacy415Response": [Function],
  "getTeamsRemoveProjectLegacy422Response": [Function],
  "getTeamsUpdateDiscussionCommentInOrg200Response": [Function],
  "getTeamsUpdateDiscussionCommentLegacy200Response": [Function],
  "getTeamsUpdateDiscussionInOrg200Response": [Function],
  "getTeamsUpdateDiscussionLegacy200Response": [Function],
  "getTeamsUpdateInOrg201Response": [Function],
  "getTeamsUpdateLegacy200Response": [Function],
  "getTeamsUpdateLegacy201Response": [Function],
  "getTeamsUpdateLegacy403Response": [Function],
  "getTeamsUpdateLegacy404Response": [Function],
  "getTeamsUpdateLegacy422Response": [Function],
  "getUsersAddEmailForAuthenticatedUser201Response": [Function],
  "getUsersAddEmailForAuthenticatedUser401Response": [Function],
  "getUsersAddEmailForAuthenticatedUser403Response": [Function],
  "getUsersAddEmailForAuthenticatedUser404Response": [Function],
  "getUsersAddEmailForAuthenticatedUser422Response": [Function],
  "getUsersCheckPersonIsFollowedByAuthenticated401Response": [Function],
  "getUsersCheckPersonIsFollowedByAuthenticated403Response": [Function],
  "getUsersCheckPersonIsFollowedByAuthenticated404Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser201Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser401Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser403Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser404Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser422Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser201Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser401Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser403Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser404Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser422Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser401Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser403Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser404Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser422Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser401Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser403Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser404Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser422Response": [Function],
  "getUsersDeletePublicSshKeyForAuthenticatedUser401Response": [Function],
  "getUsersDeletePublicSshKeyForAuthenticatedUser403Response": [Function],
  "getUsersDeletePublicSshKeyForAuthenticatedUser404Response": [Function],
  "getUsersFollow401Response": [Function],
  "getUsersFollow403Response": [Function],
  "getUsersFollow404Response": [Function],
  "getUsersGetAuthenticated200Response": [Function],
  "getUsersGetAuthenticated401Response": [Function],
  "getUsersGetAuthenticated403Response": [Function],
  "getUsersGetByUsername200Response": [Function],
  "getUsersGetByUsername404Response": [Function],
  "getUsersGetContextForUser200Response": [Function],
  "getUsersGetContextForUser404Response": [Function],
  "getUsersGetContextForUser422Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser200Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser401Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser403Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser404Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser200Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser401Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser403Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser404Response": [Function],
  "getUsersList200Response": [Function],
  "getUsersListEmailsForAuthenticatedUser200Response": [Function],
  "getUsersListEmailsForAuthenticatedUser401Response": [Function],
  "getUsersListEmailsForAuthenticatedUser403Response": [Function],
  "getUsersListEmailsForAuthenticatedUser404Response": [Function],
  "getUsersListFollowedByAuthenticatedUser200Response": [Function],
  "getUsersListFollowedByAuthenticatedUser401Response": [Function],
  "getUsersListFollowedByAuthenticatedUser403Response": [Function],
  "getUsersListFollowersForAuthenticatedUser200Response": [Function],
  "getUsersListFollowersForAuthenticatedUser401Response": [Function],
  "getUsersListFollowersForAuthenticatedUser403Response": [Function],
  "getUsersListFollowersForUser200Response": [Function],
  "getUsersListFollowingForUser200Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser200Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser401Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser403Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser404Response": [Function],
  "getUsersListGpgKeysForUser200Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser200Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser401Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser403Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser404Response": [Function],
  "getUsersListPublicKeysForUser200Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser200Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser401Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser403Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser404Response": [Function],
  "getUsersUnfollow401Response": [Function],
  "getUsersUnfollow403Response": [Function],
  "getUsersUnfollow404Response": [Function],
  "getUsersUpdateAuthenticated200Response": [Function],
  "getUsersUpdateAuthenticated401Response": [Function],
  "getUsersUpdateAuthenticated403Response": [Function],
  "getUsersUpdateAuthenticated404Response": [Function],
  "getUsersUpdateAuthenticated422Response": [Function],
  "handlers": [
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:28:30",
        "header": "GET /",
        "method": "GET",
        "path": "/",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:33:30",
        "header": "GET /admin/hooks",
        "method": "GET",
        "path": "/admin/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:38:30",
        "header": "POST /admin/hooks",
        "method": "POST",
        "path": "/admin/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:43:30",
        "header": "GET /admin/hooks/:hookId",
        "method": "GET",
        "path": "/admin/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:48:30",
        "header": "PATCH /admin/hooks/:hookId",
        "method": "PATCH",
        "path": "/admin/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:53:36",
        "header": "DELETE /admin/hooks/:hookId",
        "method": "DELETE",
        "path": "/admin/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:58:30",
        "header": "POST /admin/hooks/:hookId/pings",
        "method": "POST",
        "path": "/admin/hooks/:hookId/pings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:63:30",
        "header": "GET /admin/keys",
        "method": "GET",
        "path": "/admin/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:68:36",
        "header": "DELETE /admin/keys/:keyIds",
        "method": "DELETE",
        "path": "/admin/keys/:keyIds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:73:30",
        "header": "PATCH /admin/ldap/teams/:teamId/mapping",
        "method": "PATCH",
        "path": "/admin/ldap/teams/:teamId/mapping",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:78:30",
        "header": "POST /admin/ldap/teams/:teamId/sync",
        "method": "POST",
        "path": "/admin/ldap/teams/:teamId/sync",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:83:30",
        "header": "PATCH /admin/ldap/users/:username/mapping",
        "method": "PATCH",
        "path": "/admin/ldap/users/:username/mapping",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:88:30",
        "header": "POST /admin/ldap/users/:username/sync",
        "method": "POST",
        "path": "/admin/ldap/users/:username/sync",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:93:30",
        "header": "POST /admin/organizations",
        "method": "POST",
        "path": "/admin/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:98:30",
        "header": "PATCH /admin/organizations/:org",
        "method": "PATCH",
        "path": "/admin/organizations/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:103:30",
        "header": "GET /admin/pre-receive-environments",
        "method": "GET",
        "path": "/admin/pre-receive-environments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:108:30",
        "header": "POST /admin/pre-receive-environments",
        "method": "POST",
        "path": "/admin/pre-receive-environments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:113:30",
        "header": "GET /admin/pre-receive-environments/:preReceiveEnvironmentId",
        "method": "GET",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:118:30",
        "header": "PATCH /admin/pre-receive-environments/:preReceiveEnvironmentId",
        "method": "PATCH",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:126:36",
        "header": "DELETE /admin/pre-receive-environments/:preReceiveEnvironmentId",
        "method": "DELETE",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:134:30",
        "header": "POST /admin/pre-receive-environments/:preReceiveEnvironmentId/downloads",
        "method": "POST",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:142:30",
        "header": "GET /admin/pre-receive-environments/:preReceiveEnvironmentId/downloads/latest",
        "method": "GET",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId/downloads/latest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:147:30",
        "header": "GET /admin/pre-receive-hooks",
        "method": "GET",
        "path": "/admin/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:152:30",
        "header": "POST /admin/pre-receive-hooks",
        "method": "POST",
        "path": "/admin/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:157:30",
        "header": "GET /admin/pre-receive-hooks/:preReceiveHookId",
        "method": "GET",
        "path": "/admin/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:162:30",
        "header": "PATCH /admin/pre-receive-hooks/:preReceiveHookId",
        "method": "PATCH",
        "path": "/admin/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:167:36",
        "header": "DELETE /admin/pre-receive-hooks/:preReceiveHookId",
        "method": "DELETE",
        "path": "/admin/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:172:30",
        "header": "GET /admin/tokens",
        "method": "GET",
        "path": "/admin/tokens",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:177:36",
        "header": "DELETE /admin/tokens/:tokenId",
        "method": "DELETE",
        "path": "/admin/tokens/:tokenId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:182:30",
        "header": "POST /admin/users",
        "method": "POST",
        "path": "/admin/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:187:30",
        "header": "PATCH /admin/users/:username",
        "method": "PATCH",
        "path": "/admin/users/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:192:36",
        "header": "DELETE /admin/users/:username",
        "method": "DELETE",
        "path": "/admin/users/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:197:30",
        "header": "POST /admin/users/:username/authorizations",
        "method": "POST",
        "path": "/admin/users/:username/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:202:36",
        "header": "DELETE /admin/users/:username/authorizations",
        "method": "DELETE",
        "path": "/admin/users/:username/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:207:30",
        "header": "GET /app",
        "method": "GET",
        "path": "/app",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:212:30",
        "header": "POST /app-manifests/:code/conversions",
        "method": "POST",
        "path": "/app-manifests/:code/conversions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:221:30",
        "header": "GET /app/hook/config",
        "method": "GET",
        "path": "/app/hook/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:226:30",
        "header": "PATCH /app/hook/config",
        "method": "PATCH",
        "path": "/app/hook/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:231:30",
        "header": "GET /app/hook/deliveries",
        "method": "GET",
        "path": "/app/hook/deliveries",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:240:30",
        "header": "GET /app/hook/deliveries/:deliveryId",
        "method": "GET",
        "path": "/app/hook/deliveries/:deliveryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:249:30",
        "header": "POST /app/hook/deliveries/:deliveryId/attempts",
        "method": "POST",
        "path": "/app/hook/deliveries/:deliveryId/attempts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:258:30",
        "header": "GET /app/installations",
        "method": "GET",
        "path": "/app/installations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:263:30",
        "header": "GET /app/installations/:installationId",
        "method": "GET",
        "path": "/app/installations/:installationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:272:36",
        "header": "DELETE /app/installations/:installationId",
        "method": "DELETE",
        "path": "/app/installations/:installationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:280:30",
        "header": "POST /app/installations/:installationId/access_tokens",
        "method": "POST",
        "path": "/app/installations/:installationId/access_tokens",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:292:30",
        "header": "PUT /app/installations/:installationId/suspended",
        "method": "PUT",
        "path": "/app/installations/:installationId/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:300:36",
        "header": "DELETE /app/installations/:installationId/suspended",
        "method": "DELETE",
        "path": "/app/installations/:installationId/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:308:30",
        "header": "GET /applications/grants",
        "method": "GET",
        "path": "/applications/grants",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:319:30",
        "header": "GET /applications/grants/:grantId",
        "method": "GET",
        "path": "/applications/grants/:grantId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:329:36",
        "header": "DELETE /applications/grants/:grantId",
        "method": "DELETE",
        "path": "/applications/grants/:grantId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:339:36",
        "header": "DELETE /applications/:clientId/grant",
        "method": "DELETE",
        "path": "/applications/:clientId/grant",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:347:36",
        "header": "DELETE /applications/:clientId/grants/:accessToken",
        "method": "DELETE",
        "path": "/applications/:clientId/grants/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:352:30",
        "header": "POST /applications/:clientId/token",
        "method": "POST",
        "path": "/applications/:clientId/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:361:30",
        "header": "PATCH /applications/:clientId/token",
        "method": "PATCH",
        "path": "/applications/:clientId/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:369:36",
        "header": "DELETE /applications/:clientId/token",
        "method": "DELETE",
        "path": "/applications/:clientId/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:377:30",
        "header": "POST /applications/:clientId/token/scoped",
        "method": "POST",
        "path": "/applications/:clientId/token/scoped",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:388:30",
        "header": "GET /applications/:clientId/tokens/:accessToken",
        "method": "GET",
        "path": "/applications/:clientId/tokens/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:396:30",
        "header": "POST /applications/:clientId/tokens/:accessToken",
        "method": "POST",
        "path": "/applications/:clientId/tokens/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:401:36",
        "header": "DELETE /applications/:clientId/tokens/:accessToken",
        "method": "DELETE",
        "path": "/applications/:clientId/tokens/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:406:30",
        "header": "GET /apps/:appSlug",
        "method": "GET",
        "path": "/apps/:appSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:416:30",
        "header": "GET /authorizations",
        "method": "GET",
        "path": "/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:427:30",
        "header": "POST /authorizations",
        "method": "POST",
        "path": "/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:439:30",
        "header": "PUT /authorizations/clients/:clientId",
        "method": "PUT",
        "path": "/authorizations/clients/:clientId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:451:30",
        "header": "PUT /authorizations/clients/:clientId/:fingerprint",
        "method": "PUT",
        "path": "/authorizations/clients/:clientId/:fingerprint",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:460:30",
        "header": "GET /authorizations/:authorizationId",
        "method": "GET",
        "path": "/authorizations/:authorizationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:470:30",
        "header": "PATCH /authorizations/:authorizationId",
        "method": "PATCH",
        "path": "/authorizations/:authorizationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:478:36",
        "header": "DELETE /authorizations/:authorizationId",
        "method": "DELETE",
        "path": "/authorizations/:authorizationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:488:30",
        "header": "GET /codes_of_conduct",
        "method": "GET",
        "path": "/codes_of_conduct",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:496:30",
        "header": "GET /codes_of_conduct/:key",
        "method": "GET",
        "path": "/codes_of_conduct/:key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:505:30",
        "header": "GET /emojis",
        "method": "GET",
        "path": "/emojis",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:513:30",
        "header": "GET /enterprise/announcement",
        "method": "GET",
        "path": "/enterprise/announcement",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:518:30",
        "header": "PATCH /enterprise/announcement",
        "method": "PATCH",
        "path": "/enterprise/announcement",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:523:36",
        "header": "DELETE /enterprise/announcement",
        "method": "DELETE",
        "path": "/enterprise/announcement",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:528:30",
        "header": "GET /enterprise/settings/license",
        "method": "GET",
        "path": "/enterprise/settings/license",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:533:30",
        "header": "GET /enterprise/stats/all",
        "method": "GET",
        "path": "/enterprise/stats/all",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:538:30",
        "header": "GET /enterprise/stats/comments",
        "method": "GET",
        "path": "/enterprise/stats/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:543:30",
        "header": "GET /enterprise/stats/gists",
        "method": "GET",
        "path": "/enterprise/stats/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:548:30",
        "header": "GET /enterprise/stats/hooks",
        "method": "GET",
        "path": "/enterprise/stats/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:553:30",
        "header": "GET /enterprise/stats/issues",
        "method": "GET",
        "path": "/enterprise/stats/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:558:30",
        "header": "GET /enterprise/stats/milestones",
        "method": "GET",
        "path": "/enterprise/stats/milestones",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:563:30",
        "header": "GET /enterprise/stats/orgs",
        "method": "GET",
        "path": "/enterprise/stats/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:568:30",
        "header": "GET /enterprise/stats/pages",
        "method": "GET",
        "path": "/enterprise/stats/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:573:30",
        "header": "GET /enterprise/stats/pulls",
        "method": "GET",
        "path": "/enterprise/stats/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:578:30",
        "header": "GET /enterprise/stats/repos",
        "method": "GET",
        "path": "/enterprise/stats/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:583:30",
        "header": "GET /enterprise/stats/users",
        "method": "GET",
        "path": "/enterprise/stats/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:588:30",
        "header": "GET /enterprises/:enterprise/actions/permissions",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:593:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:598:30",
        "header": "GET /enterprises/:enterprise/actions/permissions/organizations",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/permissions/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:605:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions/organizations",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:610:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions/organizations/:orgId",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:615:36",
        "header": "DELETE /enterprises/:enterprise/actions/permissions/organizations/:orgId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/permissions/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:620:30",
        "header": "GET /enterprises/:enterprise/actions/permissions/selected-actions",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:625:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions/selected-actions",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:630:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:635:30",
        "header": "POST /enterprises/:enterprise/actions/runner-groups",
        "method": "POST",
        "path": "/enterprises/:enterprise/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:640:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:645:30",
        "header": "PATCH /enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
        "method": "PATCH",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:650:36",
        "header": "DELETE /enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:655:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:662:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:667:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:672:36",
        "header": "DELETE /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:677:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:682:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:687:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:692:36",
        "header": "DELETE /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:697:30",
        "header": "GET /enterprises/:enterprise/actions/runners",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:702:30",
        "header": "GET /enterprises/:enterprise/actions/runners/downloads",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runners/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:707:30",
        "header": "POST /enterprises/:enterprise/actions/runners/registration-token",
        "method": "POST",
        "path": "/enterprises/:enterprise/actions/runners/registration-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:712:30",
        "header": "POST /enterprises/:enterprise/actions/runners/remove-token",
        "method": "POST",
        "path": "/enterprises/:enterprise/actions/runners/remove-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:717:30",
        "header": "GET /enterprises/:enterprise/actions/runners/:runnerId",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:722:36",
        "header": "DELETE /enterprises/:enterprise/actions/runners/:runnerId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:727:30",
        "header": "GET /enterprises/:enterprise/audit-log",
        "method": "GET",
        "path": "/enterprises/:enterprise/audit-log",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:732:30",
        "header": "GET /events",
        "method": "GET",
        "path": "/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:742:30",
        "header": "GET /feeds",
        "method": "GET",
        "path": "/feeds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:747:30",
        "header": "GET /gists",
        "method": "GET",
        "path": "/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:756:30",
        "header": "POST /gists",
        "method": "POST",
        "path": "/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:767:30",
        "header": "GET /gists/public",
        "method": "GET",
        "path": "/gists/public",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:777:30",
        "header": "GET /gists/starred",
        "method": "GET",
        "path": "/gists/starred",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:787:30",
        "header": "GET /gists/:gistId",
        "method": "GET",
        "path": "/gists/:gistId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:797:30",
        "header": "PATCH /gists/:gistId",
        "method": "PATCH",
        "path": "/gists/:gistId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:806:36",
        "header": "DELETE /gists/:gistId",
        "method": "DELETE",
        "path": "/gists/:gistId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:816:30",
        "header": "GET /gists/:gistId/comments",
        "method": "GET",
        "path": "/gists/:gistId/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:826:30",
        "header": "POST /gists/:gistId/comments",
        "method": "POST",
        "path": "/gists/:gistId/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:836:30",
        "header": "GET /gists/:gistId/comments/:commentId",
        "method": "GET",
        "path": "/gists/:gistId/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:846:30",
        "header": "PATCH /gists/:gistId/comments/:commentId",
        "method": "PATCH",
        "path": "/gists/:gistId/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:854:36",
        "header": "DELETE /gists/:gistId/comments/:commentId",
        "method": "DELETE",
        "path": "/gists/:gistId/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:864:30",
        "header": "GET /gists/:gistId/commits",
        "method": "GET",
        "path": "/gists/:gistId/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:874:30",
        "header": "GET /gists/:gistId/forks",
        "method": "GET",
        "path": "/gists/:gistId/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:884:30",
        "header": "POST /gists/:gistId/forks",
        "method": "POST",
        "path": "/gists/:gistId/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:895:30",
        "header": "GET /gists/:gistId/star",
        "method": "GET",
        "path": "/gists/:gistId/star",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:905:30",
        "header": "PUT /gists/:gistId/star",
        "method": "PUT",
        "path": "/gists/:gistId/star",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:915:36",
        "header": "DELETE /gists/:gistId/star",
        "method": "DELETE",
        "path": "/gists/:gistId/star",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:925:30",
        "header": "GET /gists/:gistId/:sha",
        "method": "GET",
        "path": "/gists/:gistId/:sha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:935:30",
        "header": "GET /gitignore/templates",
        "method": "GET",
        "path": "/gitignore/templates",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:943:30",
        "header": "GET /gitignore/templates/:name",
        "method": "GET",
        "path": "/gitignore/templates/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:951:30",
        "header": "GET /installation/repositories",
        "method": "GET",
        "path": "/installation/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:961:36",
        "header": "DELETE /installation/token",
        "method": "DELETE",
        "path": "/installation/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:966:30",
        "header": "GET /issues",
        "method": "GET",
        "path": "/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:976:30",
        "header": "GET /licenses",
        "method": "GET",
        "path": "/licenses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:984:30",
        "header": "GET /licenses/:license",
        "method": "GET",
        "path": "/licenses/:license",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:994:30",
        "header": "POST /markdown",
        "method": "POST",
        "path": "/markdown",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1002:30",
        "header": "POST /markdown/raw",
        "method": "POST",
        "path": "/markdown/raw",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1010:30",
        "header": "GET /meta",
        "method": "GET",
        "path": "/meta",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1018:30",
        "header": "GET /networks/:owner/:repo/events",
        "method": "GET",
        "path": "/networks/:owner/:repo/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1029:30",
        "header": "GET /notifications",
        "method": "GET",
        "path": "/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1040:30",
        "header": "PUT /notifications",
        "method": "PUT",
        "path": "/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1051:30",
        "header": "GET /notifications/threads/:threadId",
        "method": "GET",
        "path": "/notifications/threads/:threadId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1061:30",
        "header": "PATCH /notifications/threads/:threadId",
        "method": "PATCH",
        "path": "/notifications/threads/:threadId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1070:30",
        "header": "GET /notifications/threads/:threadId/subscription",
        "method": "GET",
        "path": "/notifications/threads/:threadId/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1080:30",
        "header": "PUT /notifications/threads/:threadId/subscription",
        "method": "PUT",
        "path": "/notifications/threads/:threadId/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1090:36",
        "header": "DELETE /notifications/threads/:threadId/subscription",
        "method": "DELETE",
        "path": "/notifications/threads/:threadId/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1100:30",
        "header": "GET /octocat",
        "method": "GET",
        "path": "/octocat",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1105:30",
        "header": "GET /organizations",
        "method": "GET",
        "path": "/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1113:30",
        "header": "GET /orgs/:org",
        "method": "GET",
        "path": "/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1121:30",
        "header": "PATCH /orgs/:org",
        "method": "PATCH",
        "path": "/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1130:30",
        "header": "GET /orgs/:org/actions/permissions",
        "method": "GET",
        "path": "/orgs/:org/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1135:30",
        "header": "PUT /orgs/:org/actions/permissions",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1140:30",
        "header": "GET /orgs/:org/actions/permissions/repositories",
        "method": "GET",
        "path": "/orgs/:org/actions/permissions/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1147:30",
        "header": "PUT /orgs/:org/actions/permissions/repositories",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1152:30",
        "header": "PUT /orgs/:org/actions/permissions/repositories/:repositoryId",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1157:36",
        "header": "DELETE /orgs/:org/actions/permissions/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/permissions/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1162:30",
        "header": "GET /orgs/:org/actions/permissions/selected-actions",
        "method": "GET",
        "path": "/orgs/:org/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1167:30",
        "header": "PUT /orgs/:org/actions/permissions/selected-actions",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1172:30",
        "header": "GET /orgs/:org/actions/runner-groups",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1177:30",
        "header": "POST /orgs/:org/actions/runner-groups",
        "method": "POST",
        "path": "/orgs/:org/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1182:30",
        "header": "GET /orgs/:org/actions/runner-groups/:runnerGroupId",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1187:30",
        "header": "PATCH /orgs/:org/actions/runner-groups/:runnerGroupId",
        "method": "PATCH",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1192:36",
        "header": "DELETE /orgs/:org/actions/runner-groups/:runnerGroupId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1197:30",
        "header": "GET /orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1202:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1207:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1212:36",
        "header": "DELETE /orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1217:30",
        "header": "GET /orgs/:org/actions/runner-groups/:runnerGroupId/runners",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1222:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/runners",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1227:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1232:36",
        "header": "DELETE /orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1237:30",
        "header": "GET /orgs/:org/actions/runners",
        "method": "GET",
        "path": "/orgs/:org/actions/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1242:30",
        "header": "GET /orgs/:org/actions/runners/downloads",
        "method": "GET",
        "path": "/orgs/:org/actions/runners/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1247:30",
        "header": "POST /orgs/:org/actions/runners/registration-token",
        "method": "POST",
        "path": "/orgs/:org/actions/runners/registration-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1252:30",
        "header": "POST /orgs/:org/actions/runners/remove-token",
        "method": "POST",
        "path": "/orgs/:org/actions/runners/remove-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1257:30",
        "header": "GET /orgs/:org/actions/runners/:runnerId",
        "method": "GET",
        "path": "/orgs/:org/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1262:36",
        "header": "DELETE /orgs/:org/actions/runners/:runnerId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1267:30",
        "header": "GET /orgs/:org/actions/secrets",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1272:30",
        "header": "GET /orgs/:org/actions/secrets/public-key",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets/public-key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1277:30",
        "header": "GET /orgs/:org/actions/secrets/:secretName",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1282:30",
        "header": "PUT /orgs/:org/actions/secrets/:secretName",
        "method": "PUT",
        "path": "/orgs/:org/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1290:36",
        "header": "DELETE /orgs/:org/actions/secrets/:secretName",
        "method": "DELETE",
        "path": "/orgs/:org/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1295:30",
        "header": "GET /orgs/:org/actions/secrets/:secretName/repositories",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1300:30",
        "header": "PUT /orgs/:org/actions/secrets/:secretName/repositories",
        "method": "PUT",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1305:30",
        "header": "PUT /orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
        "method": "PUT",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1313:36",
        "header": "DELETE /orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1321:30",
        "header": "GET /orgs/:org/audit-log",
        "method": "GET",
        "path": "/orgs/:org/audit-log",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1326:30",
        "header": "GET /orgs/:org/events",
        "method": "GET",
        "path": "/orgs/:org/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1331:30",
        "header": "GET /orgs/:org/hooks",
        "method": "GET",
        "path": "/orgs/:org/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1339:30",
        "header": "POST /orgs/:org/hooks",
        "method": "POST",
        "path": "/orgs/:org/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1348:30",
        "header": "GET /orgs/:org/hooks/:hookId",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1356:30",
        "header": "PATCH /orgs/:org/hooks/:hookId",
        "method": "PATCH",
        "path": "/orgs/:org/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1365:36",
        "header": "DELETE /orgs/:org/hooks/:hookId",
        "method": "DELETE",
        "path": "/orgs/:org/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1373:30",
        "header": "GET /orgs/:org/hooks/:hookId/config",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1378:30",
        "header": "PATCH /orgs/:org/hooks/:hookId/config",
        "method": "PATCH",
        "path": "/orgs/:org/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1383:30",
        "header": "GET /orgs/:org/hooks/:hookId/deliveries",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId/deliveries",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1392:30",
        "header": "GET /orgs/:org/hooks/:hookId/deliveries/:deliveryId",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId/deliveries/:deliveryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1401:30",
        "header": "POST /orgs/:org/hooks/:hookId/deliveries/:deliveryId/attempts",
        "method": "POST",
        "path": "/orgs/:org/hooks/:hookId/deliveries/:deliveryId/attempts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1410:30",
        "header": "POST /orgs/:org/hooks/:hookId/pings",
        "method": "POST",
        "path": "/orgs/:org/hooks/:hookId/pings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1418:30",
        "header": "GET /orgs/:org/installation",
        "method": "GET",
        "path": "/orgs/:org/installation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1423:30",
        "header": "GET /orgs/:org/installations",
        "method": "GET",
        "path": "/orgs/:org/installations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1428:30",
        "header": "GET /orgs/:org/issues",
        "method": "GET",
        "path": "/orgs/:org/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1436:30",
        "header": "GET /orgs/:org/members",
        "method": "GET",
        "path": "/orgs/:org/members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1445:30",
        "header": "GET /orgs/:org/members/:username",
        "method": "GET",
        "path": "/orgs/:org/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1454:36",
        "header": "DELETE /orgs/:org/members/:username",
        "method": "DELETE",
        "path": "/orgs/:org/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1462:30",
        "header": "GET /orgs/:org/memberships/:username",
        "method": "GET",
        "path": "/orgs/:org/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1471:30",
        "header": "PUT /orgs/:org/memberships/:username",
        "method": "PUT",
        "path": "/orgs/:org/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1480:36",
        "header": "DELETE /orgs/:org/memberships/:username",
        "method": "DELETE",
        "path": "/orgs/:org/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1489:30",
        "header": "GET /orgs/:org/outside_collaborators",
        "method": "GET",
        "path": "/orgs/:org/outside_collaborators",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1494:30",
        "header": "PUT /orgs/:org/outside_collaborators/:username",
        "method": "PUT",
        "path": "/orgs/:org/outside_collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1504:36",
        "header": "DELETE /orgs/:org/outside_collaborators/:username",
        "method": "DELETE",
        "path": "/orgs/:org/outside_collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1512:30",
        "header": "GET /orgs/:org/pre-receive-hooks",
        "method": "GET",
        "path": "/orgs/:org/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1517:30",
        "header": "GET /orgs/:org/pre-receive-hooks/:preReceiveHookId",
        "method": "GET",
        "path": "/orgs/:org/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1522:30",
        "header": "PATCH /orgs/:org/pre-receive-hooks/:preReceiveHookId",
        "method": "PATCH",
        "path": "/orgs/:org/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1527:36",
        "header": "DELETE /orgs/:org/pre-receive-hooks/:preReceiveHookId",
        "method": "DELETE",
        "path": "/orgs/:org/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1532:30",
        "header": "GET /orgs/:org/projects",
        "method": "GET",
        "path": "/orgs/:org/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1540:30",
        "header": "POST /orgs/:org/projects",
        "method": "POST",
        "path": "/orgs/:org/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1552:30",
        "header": "GET /orgs/:org/public_members",
        "method": "GET",
        "path": "/orgs/:org/public_members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1557:30",
        "header": "GET /orgs/:org/public_members/:username",
        "method": "GET",
        "path": "/orgs/:org/public_members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1565:30",
        "header": "PUT /orgs/:org/public_members/:username",
        "method": "PUT",
        "path": "/orgs/:org/public_members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1573:36",
        "header": "DELETE /orgs/:org/public_members/:username",
        "method": "DELETE",
        "path": "/orgs/:org/public_members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1578:30",
        "header": "GET /orgs/:org/repos",
        "method": "GET",
        "path": "/orgs/:org/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1583:30",
        "header": "POST /orgs/:org/repos",
        "method": "POST",
        "path": "/orgs/:org/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1592:30",
        "header": "GET /orgs/:org/secret-scanning/alerts",
        "method": "GET",
        "path": "/orgs/:org/secret-scanning/alerts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1601:30",
        "header": "GET /orgs/:org/teams",
        "method": "GET",
        "path": "/orgs/:org/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1609:30",
        "header": "POST /orgs/:org/teams",
        "method": "POST",
        "path": "/orgs/:org/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1618:30",
        "header": "GET /orgs/:org/teams/:teamSlug",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1626:30",
        "header": "PATCH /orgs/:org/teams/:teamSlug",
        "method": "PATCH",
        "path": "/orgs/:org/teams/:teamSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1631:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1636:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1641:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1646:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1651:30",
        "header": "PATCH /orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
        "method": "PATCH",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1656:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1661:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1666:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1671:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1676:30",
        "header": "PATCH /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
        "method": "PATCH",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1681:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1686:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1694:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1705:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions/:reactionId",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1713:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1718:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1726:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions/:reactionId",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1731:30",
        "header": "GET /orgs/:org/teams/:teamSlug/members",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1736:30",
        "header": "GET /orgs/:org/teams/:teamSlug/memberships/:username",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1744:30",
        "header": "PUT /orgs/:org/teams/:teamSlug/memberships/:username",
        "method": "PUT",
        "path": "/orgs/:org/teams/:teamSlug/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1753:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/memberships/:username",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1761:30",
        "header": "GET /orgs/:org/teams/:teamSlug/projects",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1766:30",
        "header": "GET /orgs/:org/teams/:teamSlug/projects/:projectId",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1774:30",
        "header": "PUT /orgs/:org/teams/:teamSlug/projects/:projectId",
        "method": "PUT",
        "path": "/orgs/:org/teams/:teamSlug/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1782:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/projects/:projectId",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1787:30",
        "header": "GET /orgs/:org/teams/:teamSlug/repos",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1792:30",
        "header": "GET /orgs/:org/teams/:teamSlug/repos/:owner/:repo",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1801:30",
        "header": "PUT /orgs/:org/teams/:teamSlug/repos/:owner/:repo",
        "method": "PUT",
        "path": "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1806:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/repos/:owner/:repo",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1811:30",
        "header": "GET /orgs/:org/teams/:teamSlug/teams",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1816:30",
        "header": "GET /projects/columns/cards/:cardId",
        "method": "GET",
        "path": "/projects/columns/cards/:cardId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1827:30",
        "header": "PATCH /projects/columns/cards/:cardId",
        "method": "PATCH",
        "path": "/projects/columns/cards/:cardId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1839:36",
        "header": "DELETE /projects/columns/cards/:cardId",
        "method": "DELETE",
        "path": "/projects/columns/cards/:cardId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1850:30",
        "header": "POST /projects/columns/cards/:cardId/moves",
        "method": "POST",
        "path": "/projects/columns/cards/:cardId/moves",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1862:30",
        "header": "GET /projects/columns/:columnId",
        "method": "GET",
        "path": "/projects/columns/:columnId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1873:30",
        "header": "PATCH /projects/columns/:columnId",
        "method": "PATCH",
        "path": "/projects/columns/:columnId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1883:36",
        "header": "DELETE /projects/columns/:columnId",
        "method": "DELETE",
        "path": "/projects/columns/:columnId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1893:30",
        "header": "GET /projects/columns/:columnId/cards",
        "method": "GET",
        "path": "/projects/columns/:columnId/cards",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1903:30",
        "header": "POST /projects/columns/:columnId/cards",
        "method": "POST",
        "path": "/projects/columns/:columnId/cards",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1915:30",
        "header": "POST /projects/columns/:columnId/moves",
        "method": "POST",
        "path": "/projects/columns/:columnId/moves",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1926:30",
        "header": "GET /projects/:projectId",
        "method": "GET",
        "path": "/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1936:30",
        "header": "PATCH /projects/:projectId",
        "method": "PATCH",
        "path": "/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1949:36",
        "header": "DELETE /projects/:projectId",
        "method": "DELETE",
        "path": "/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1961:30",
        "header": "GET /projects/:projectId/collaborators",
        "method": "GET",
        "path": "/projects/:projectId/collaborators",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1973:30",
        "header": "PUT /projects/:projectId/collaborators/:username",
        "method": "PUT",
        "path": "/projects/:projectId/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1985:36",
        "header": "DELETE /projects/:projectId/collaborators/:username",
        "method": "DELETE",
        "path": "/projects/:projectId/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:1997:30",
        "header": "GET /projects/:projectId/collaborators/:username/permission",
        "method": "GET",
        "path": "/projects/:projectId/collaborators/:username/permission",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2009:30",
        "header": "GET /projects/:projectId/columns",
        "method": "GET",
        "path": "/projects/:projectId/columns",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2019:30",
        "header": "POST /projects/:projectId/columns",
        "method": "POST",
        "path": "/projects/:projectId/columns",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2030:30",
        "header": "GET /rate_limit",
        "method": "GET",
        "path": "/rate_limit",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2039:36",
        "header": "DELETE /reactions/:reactionId",
        "method": "DELETE",
        "path": "/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2050:30",
        "header": "GET /repos/:owner/:repo",
        "method": "GET",
        "path": "/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2060:30",
        "header": "PATCH /repos/:owner/:repo",
        "method": "PATCH",
        "path": "/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2071:36",
        "header": "DELETE /repos/:owner/:repo",
        "method": "DELETE",
        "path": "/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2081:30",
        "header": "GET /repos/:owner/:repo/actions/artifacts",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/artifacts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2086:30",
        "header": "GET /repos/:owner/:repo/actions/artifacts/:artifactId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/artifacts/:artifactId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2091:36",
        "header": "DELETE /repos/:owner/:repo/actions/artifacts/:artifactId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/artifacts/:artifactId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2096:30",
        "header": "GET /repos/:owner/:repo/actions/artifacts/:artifactId/:archiveFormat",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/artifacts/:artifactId/:archiveFormat",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2101:30",
        "header": "GET /repos/:owner/:repo/actions/jobs/:jobId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/jobs/:jobId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2106:30",
        "header": "GET /repos/:owner/:repo/actions/jobs/:jobId/logs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/jobs/:jobId/logs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2111:30",
        "header": "GET /repos/:owner/:repo/actions/permissions",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2116:30",
        "header": "PUT /repos/:owner/:repo/actions/permissions",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2121:30",
        "header": "GET /repos/:owner/:repo/actions/permissions/selected-actions",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2126:30",
        "header": "PUT /repos/:owner/:repo/actions/permissions/selected-actions",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2131:30",
        "header": "GET /repos/:owner/:repo/actions/runners",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2136:30",
        "header": "GET /repos/:owner/:repo/actions/runners/downloads",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runners/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2141:30",
        "header": "POST /repos/:owner/:repo/actions/runners/registration-token",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runners/registration-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2146:30",
        "header": "POST /repos/:owner/:repo/actions/runners/remove-token",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runners/remove-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2151:30",
        "header": "GET /repos/:owner/:repo/actions/runners/:runnerId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2156:36",
        "header": "DELETE /repos/:owner/:repo/actions/runners/:runnerId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2161:30",
        "header": "GET /repos/:owner/:repo/actions/runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2166:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2171:36",
        "header": "DELETE /repos/:owner/:repo/actions/runs/:runId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/runs/:runId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2176:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/approvals",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/approvals",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2181:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/artifacts",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/artifacts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2186:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2191:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber/jobs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber/jobs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2199:30",
        "header": "POST /repos/:owner/:repo/actions/runs/:runId/cancel",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runs/:runId/cancel",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2204:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/jobs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/jobs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2209:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/logs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/logs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2214:36",
        "header": "DELETE /repos/:owner/:repo/actions/runs/:runId/logs",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/runs/:runId/logs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2219:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/pending_deployments",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/pending_deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2224:30",
        "header": "POST /repos/:owner/:repo/actions/runs/:runId/pending_deployments",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runs/:runId/pending_deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2229:30",
        "header": "POST /repos/:owner/:repo/actions/runs/:runId/rerun",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runs/:runId/rerun",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2234:30",
        "header": "GET /repos/:owner/:repo/actions/secrets",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/secrets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2239:30",
        "header": "GET /repos/:owner/:repo/actions/secrets/public-key",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/secrets/public-key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2244:30",
        "header": "GET /repos/:owner/:repo/actions/secrets/:secretName",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2249:30",
        "header": "PUT /repos/:owner/:repo/actions/secrets/:secretName",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2257:36",
        "header": "DELETE /repos/:owner/:repo/actions/secrets/:secretName",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2262:30",
        "header": "GET /repos/:owner/:repo/actions/workflows",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/workflows",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2267:30",
        "header": "GET /repos/:owner/:repo/actions/workflows/:workflowId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2272:30",
        "header": "PUT /repos/:owner/:repo/actions/workflows/:workflowId/disable",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/disable",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2277:30",
        "header": "POST /repos/:owner/:repo/actions/workflows/:workflowId/dispatches",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/dispatches",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2282:30",
        "header": "PUT /repos/:owner/:repo/actions/workflows/:workflowId/enable",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/enable",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2287:30",
        "header": "GET /repos/:owner/:repo/actions/workflows/:workflowId/runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2292:30",
        "header": "GET /repos/:owner/:repo/assignees",
        "method": "GET",
        "path": "/repos/:owner/:repo/assignees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2300:30",
        "header": "GET /repos/:owner/:repo/assignees/:assignee",
        "method": "GET",
        "path": "/repos/:owner/:repo/assignees/:assignee",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2308:30",
        "header": "GET /repos/:owner/:repo/autolinks",
        "method": "GET",
        "path": "/repos/:owner/:repo/autolinks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2313:30",
        "header": "POST /repos/:owner/:repo/autolinks",
        "method": "POST",
        "path": "/repos/:owner/:repo/autolinks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2321:30",
        "header": "GET /repos/:owner/:repo/autolinks/:autolinkId",
        "method": "GET",
        "path": "/repos/:owner/:repo/autolinks/:autolinkId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2329:36",
        "header": "DELETE /repos/:owner/:repo/autolinks/:autolinkId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/autolinks/:autolinkId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2337:30",
        "header": "GET /repos/:owner/:repo/branches",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2345:30",
        "header": "GET /repos/:owner/:repo/branches/:branch",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2355:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2363:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2373:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2381:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2386:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2391:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2399:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2404:30",
        "header": "PATCH /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2412:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2420:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2428:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2436:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2444:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2452:30",
        "header": "PATCH /repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2461:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2466:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2474:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2484:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2493:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2502:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2510:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2515:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2523:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2531:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2539:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2547:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2555:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2563:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2571:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2579:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2587:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2595:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2603:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2611:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/rename",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/rename",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2621:30",
        "header": "POST /repos/:owner/:repo/check-runs",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2626:30",
        "header": "GET /repos/:owner/:repo/check-runs/:checkRunId",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2631:30",
        "header": "PATCH /repos/:owner/:repo/check-runs/:checkRunId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2636:30",
        "header": "GET /repos/:owner/:repo/check-runs/:checkRunId/annotations",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId/annotations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2641:30",
        "header": "POST /repos/:owner/:repo/check-runs/:checkRunId/rerequest",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId/rerequest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2651:30",
        "header": "POST /repos/:owner/:repo/check-suites",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-suites",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2659:30",
        "header": "PATCH /repos/:owner/:repo/check-suites/preferences",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/check-suites/preferences",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2664:30",
        "header": "GET /repos/:owner/:repo/check-suites/:checkSuiteId",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-suites/:checkSuiteId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2669:30",
        "header": "GET /repos/:owner/:repo/check-suites/:checkSuiteId/check-runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-suites/:checkSuiteId/check-runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2674:30",
        "header": "POST /repos/:owner/:repo/check-suites/:checkSuiteId/rerequest",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-suites/:checkSuiteId/rerequest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2679:30",
        "header": "GET /repos/:owner/:repo/code-scanning/alerts",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/alerts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2689:30",
        "header": "GET /repos/:owner/:repo/code-scanning/alerts/:alertNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2699:30",
        "header": "PATCH /repos/:owner/:repo/code-scanning/alerts/:alertNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/code-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2709:30",
        "header": "GET /repos/:owner/:repo/code-scanning/alerts/:alertNumber/instances",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/alerts/:alertNumber/instances",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2719:30",
        "header": "GET /repos/:owner/:repo/code-scanning/analyses",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/analyses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2729:30",
        "header": "GET /repos/:owner/:repo/code-scanning/analyses/:analysisId",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/analyses/:analysisId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2739:36",
        "header": "DELETE /repos/:owner/:repo/code-scanning/analyses/:analysisId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/code-scanning/analyses/:analysisId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2750:30",
        "header": "POST /repos/:owner/:repo/code-scanning/sarifs",
        "method": "POST",
        "path": "/repos/:owner/:repo/code-scanning/sarifs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2762:30",
        "header": "GET /repos/:owner/:repo/code-scanning/sarifs/:sarifId",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/sarifs/:sarifId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2772:30",
        "header": "GET /repos/:owner/:repo/collaborators",
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2780:30",
        "header": "GET /repos/:owner/:repo/collaborators/:username",
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2788:30",
        "header": "PUT /repos/:owner/:repo/collaborators/:username",
        "method": "PUT",
        "path": "/repos/:owner/:repo/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2798:36",
        "header": "DELETE /repos/:owner/:repo/collaborators/:username",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2803:30",
        "header": "GET /repos/:owner/:repo/collaborators/:username/permission",
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators/:username/permission",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2811:30",
        "header": "GET /repos/:owner/:repo/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2816:30",
        "header": "GET /repos/:owner/:repo/comments/:commentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2824:30",
        "header": "PATCH /repos/:owner/:repo/comments/:commentId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2832:36",
        "header": "DELETE /repos/:owner/:repo/comments/:commentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2840:30",
        "header": "GET /repos/:owner/:repo/comments/:commentId/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2848:30",
        "header": "POST /repos/:owner/:repo/comments/:commentId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2858:36",
        "header": "DELETE /repos/:owner/:repo/comments/:commentId/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/comments/:commentId/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2863:30",
        "header": "GET /repos/:owner/:repo/commits",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2874:30",
        "header": "GET /repos/:owner/:repo/commits/:commitSha/branches-where-head",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commitSha/branches-where-head",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2882:30",
        "header": "GET /repos/:owner/:repo/commits/:commitSha/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commitSha/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2887:30",
        "header": "POST /repos/:owner/:repo/commits/:commitSha/comments",
        "method": "POST",
        "path": "/repos/:owner/:repo/commits/:commitSha/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2896:30",
        "header": "GET /repos/:owner/:repo/commits/:commitSha/pulls",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commitSha/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2901:30",
        "header": "GET /repos/:owner/:repo/commits/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2911:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/check-runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/check-runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2916:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/check-suites",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/check-suites",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2921:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/status",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/status",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2929:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/statuses",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/statuses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2937:30",
        "header": "GET /repos/:owner/:repo/compare/:basehead",
        "method": "GET",
        "path": "/repos/:owner/:repo/compare/:basehead",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2946:30",
        "header": "POST /repos/:owner/:repo/content_references/:contentReferenceId/attachments",
        "method": "POST",
        "path": "/repos/:owner/:repo/content_references/:contentReferenceId/attachments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2959:30",
        "header": "GET /repos/:owner/:repo/contents/:path",
        "method": "GET",
        "path": "/repos/:owner/:repo/contents/:path",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2969:30",
        "header": "PUT /repos/:owner/:repo/contents/:path",
        "method": "PUT",
        "path": "/repos/:owner/:repo/contents/:path",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2980:36",
        "header": "DELETE /repos/:owner/:repo/contents/:path",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/contents/:path",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:2991:30",
        "header": "GET /repos/:owner/:repo/contributors",
        "method": "GET",
        "path": "/repos/:owner/:repo/contributors",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3001:30",
        "header": "GET /repos/:owner/:repo/deployments",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3006:30",
        "header": "POST /repos/:owner/:repo/deployments",
        "method": "POST",
        "path": "/repos/:owner/:repo/deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3016:30",
        "header": "GET /repos/:owner/:repo/deployments/:deploymentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deploymentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3024:36",
        "header": "DELETE /repos/:owner/:repo/deployments/:deploymentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/deployments/:deploymentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3033:30",
        "header": "GET /repos/:owner/:repo/deployments/:deploymentId/statuses",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deploymentId/statuses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3041:30",
        "header": "POST /repos/:owner/:repo/deployments/:deploymentId/statuses",
        "method": "POST",
        "path": "/repos/:owner/:repo/deployments/:deploymentId/statuses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3049:30",
        "header": "GET /repos/:owner/:repo/deployments/:deploymentId/statuses/:statusId",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deploymentId/statuses/:statusId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3057:30",
        "header": "POST /repos/:owner/:repo/dispatches",
        "method": "POST",
        "path": "/repos/:owner/:repo/dispatches",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3065:30",
        "header": "GET /repos/:owner/:repo/environments",
        "method": "GET",
        "path": "/repos/:owner/:repo/environments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3070:30",
        "header": "GET /repos/:owner/:repo/environments/:environmentName",
        "method": "GET",
        "path": "/repos/:owner/:repo/environments/:environmentName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3075:30",
        "header": "PUT /repos/:owner/:repo/environments/:environmentName",
        "method": "PUT",
        "path": "/repos/:owner/:repo/environments/:environmentName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3083:36",
        "header": "DELETE /repos/:owner/:repo/environments/:environmentName",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/environments/:environmentName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3088:30",
        "header": "GET /repos/:owner/:repo/events",
        "method": "GET",
        "path": "/repos/:owner/:repo/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3093:30",
        "header": "GET /repos/:owner/:repo/forks",
        "method": "GET",
        "path": "/repos/:owner/:repo/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3101:30",
        "header": "POST /repos/:owner/:repo/forks",
        "method": "POST",
        "path": "/repos/:owner/:repo/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3112:30",
        "header": "POST /repos/:owner/:repo/git/blobs",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/blobs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3123:30",
        "header": "GET /repos/:owner/:repo/git/blobs/:fileSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/blobs/:fileSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3133:30",
        "header": "POST /repos/:owner/:repo/git/commits",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3142:30",
        "header": "GET /repos/:owner/:repo/git/commits/:commitSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/commits/:commitSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3150:30",
        "header": "GET /repos/:owner/:repo/git/matching-refs/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/matching-refs/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3155:30",
        "header": "GET /repos/:owner/:repo/git/ref/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/ref/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3163:30",
        "header": "POST /repos/:owner/:repo/git/refs",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/refs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3171:30",
        "header": "PATCH /repos/:owner/:repo/git/refs/:ref",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/git/refs/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3179:36",
        "header": "DELETE /repos/:owner/:repo/git/refs/:ref",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/git/refs/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3187:30",
        "header": "POST /repos/:owner/:repo/git/tags",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/tags",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3195:30",
        "header": "GET /repos/:owner/:repo/git/tags/:tagSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/tags/:tagSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3203:30",
        "header": "POST /repos/:owner/:repo/git/trees",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/trees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3213:30",
        "header": "GET /repos/:owner/:repo/git/trees/:treeSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/trees/:treeSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3222:30",
        "header": "GET /repos/:owner/:repo/hooks",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3230:30",
        "header": "POST /repos/:owner/:repo/hooks",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3240:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3248:30",
        "header": "PATCH /repos/:owner/:repo/hooks/:hookId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3257:36",
        "header": "DELETE /repos/:owner/:repo/hooks/:hookId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3265:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId/config",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3270:30",
        "header": "PATCH /repos/:owner/:repo/hooks/:hookId/config",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3275:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId/deliveries",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId/deliveries",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3284:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3293:30",
        "header": "POST /repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId/attempts",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId/attempts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3302:30",
        "header": "POST /repos/:owner/:repo/hooks/:hookId/pings",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hookId/pings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3310:30",
        "header": "POST /repos/:owner/:repo/hooks/:hookId/tests",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hookId/tests",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3318:30",
        "header": "GET /repos/:owner/:repo/installation",
        "method": "GET",
        "path": "/repos/:owner/:repo/installation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3327:30",
        "header": "GET /repos/:owner/:repo/invitations",
        "method": "GET",
        "path": "/repos/:owner/:repo/invitations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3332:30",
        "header": "PATCH /repos/:owner/:repo/invitations/:invitationId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3337:36",
        "header": "DELETE /repos/:owner/:repo/invitations/:invitationId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3342:30",
        "header": "GET /repos/:owner/:repo/issues",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3352:30",
        "header": "POST /repos/:owner/:repo/issues",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3364:30",
        "header": "GET /repos/:owner/:repo/issues/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3373:30",
        "header": "GET /repos/:owner/:repo/issues/comments/:commentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3381:30",
        "header": "PATCH /repos/:owner/:repo/issues/comments/:commentId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/issues/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3389:36",
        "header": "DELETE /repos/:owner/:repo/issues/comments/:commentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3394:30",
        "header": "GET /repos/:owner/:repo/issues/comments/:commentId/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3402:30",
        "header": "POST /repos/:owner/:repo/issues/comments/:commentId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3411:36",
        "header": "DELETE /repos/:owner/:repo/issues/comments/:commentId/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/comments/:commentId/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3416:30",
        "header": "GET /repos/:owner/:repo/issues/events",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3424:30",
        "header": "GET /repos/:owner/:repo/issues/events/:eventId",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/events/:eventId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3434:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3445:30",
        "header": "PATCH /repos/:owner/:repo/issues/:issueNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/issues/:issueNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3458:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/assignees",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/assignees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3463:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/assignees",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/assignees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3468:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3477:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/comments",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3488:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/events",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3496:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3504:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3513:30",
        "header": "PUT /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "PUT",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3522:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3530:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/labels/:name",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3539:30",
        "header": "PUT /repos/:owner/:repo/issues/:issueNumber/lock",
        "method": "PUT",
        "path": "/repos/:owner/:repo/issues/:issueNumber/lock",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3550:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/lock",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/lock",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3559:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3568:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3577:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3582:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/timeline",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/timeline",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3591:30",
        "header": "GET /repos/:owner/:repo/keys",
        "method": "GET",
        "path": "/repos/:owner/:repo/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3596:30",
        "header": "POST /repos/:owner/:repo/keys",
        "method": "POST",
        "path": "/repos/:owner/:repo/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3604:30",
        "header": "GET /repos/:owner/:repo/keys/:keyId",
        "method": "GET",
        "path": "/repos/:owner/:repo/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3612:36",
        "header": "DELETE /repos/:owner/:repo/keys/:keyId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3617:30",
        "header": "GET /repos/:owner/:repo/labels",
        "method": "GET",
        "path": "/repos/:owner/:repo/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3625:30",
        "header": "POST /repos/:owner/:repo/labels",
        "method": "POST",
        "path": "/repos/:owner/:repo/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3634:30",
        "header": "GET /repos/:owner/:repo/labels/:name",
        "method": "GET",
        "path": "/repos/:owner/:repo/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3642:30",
        "header": "PATCH /repos/:owner/:repo/labels/:name",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3647:36",
        "header": "DELETE /repos/:owner/:repo/labels/:name",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3652:30",
        "header": "GET /repos/:owner/:repo/languages",
        "method": "GET",
        "path": "/repos/:owner/:repo/languages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3657:30",
        "header": "PUT /repos/:owner/:repo/lfs",
        "method": "PUT",
        "path": "/repos/:owner/:repo/lfs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3665:36",
        "header": "DELETE /repos/:owner/:repo/lfs",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/lfs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3670:30",
        "header": "GET /repos/:owner/:repo/license",
        "method": "GET",
        "path": "/repos/:owner/:repo/license",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3675:30",
        "header": "POST /repos/:owner/:repo/merge-upstream",
        "method": "POST",
        "path": "/repos/:owner/:repo/merge-upstream",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3684:30",
        "header": "POST /repos/:owner/:repo/merges",
        "method": "POST",
        "path": "/repos/:owner/:repo/merges",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3696:30",
        "header": "GET /repos/:owner/:repo/milestones",
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3704:30",
        "header": "POST /repos/:owner/:repo/milestones",
        "method": "POST",
        "path": "/repos/:owner/:repo/milestones",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3713:30",
        "header": "GET /repos/:owner/:repo/milestones/:milestoneNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3721:30",
        "header": "PATCH /repos/:owner/:repo/milestones/:milestoneNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3726:36",
        "header": "DELETE /repos/:owner/:repo/milestones/:milestoneNumber",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3734:30",
        "header": "GET /repos/:owner/:repo/milestones/:milestoneNumber/labels",
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3739:30",
        "header": "GET /repos/:owner/:repo/notifications",
        "method": "GET",
        "path": "/repos/:owner/:repo/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3744:30",
        "header": "PUT /repos/:owner/:repo/notifications",
        "method": "PUT",
        "path": "/repos/:owner/:repo/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3752:30",
        "header": "GET /repos/:owner/:repo/pages",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3760:30",
        "header": "POST /repos/:owner/:repo/pages",
        "method": "POST",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3769:30",
        "header": "PUT /repos/:owner/:repo/pages",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3778:36",
        "header": "DELETE /repos/:owner/:repo/pages",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3787:30",
        "header": "GET /repos/:owner/:repo/pages/builds",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3792:30",
        "header": "POST /repos/:owner/:repo/pages/builds",
        "method": "POST",
        "path": "/repos/:owner/:repo/pages/builds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3797:30",
        "header": "GET /repos/:owner/:repo/pages/builds/latest",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds/latest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3802:30",
        "header": "GET /repos/:owner/:repo/pages/builds/:buildId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds/:buildId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3807:30",
        "header": "GET /repos/:owner/:repo/pre-receive-hooks",
        "method": "GET",
        "path": "/repos/:owner/:repo/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3812:30",
        "header": "GET /repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3817:30",
        "header": "PATCH /repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3822:36",
        "header": "DELETE /repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3827:30",
        "header": "GET /repos/:owner/:repo/projects",
        "method": "GET",
        "path": "/repos/:owner/:repo/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3839:30",
        "header": "POST /repos/:owner/:repo/projects",
        "method": "POST",
        "path": "/repos/:owner/:repo/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3851:30",
        "header": "GET /repos/:owner/:repo/pulls",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3860:30",
        "header": "POST /repos/:owner/:repo/pulls",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3869:30",
        "header": "GET /repos/:owner/:repo/pulls/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3874:30",
        "header": "GET /repos/:owner/:repo/pulls/comments/:commentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3882:30",
        "header": "PATCH /repos/:owner/:repo/pulls/comments/:commentId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3887:36",
        "header": "DELETE /repos/:owner/:repo/pulls/comments/:commentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3895:30",
        "header": "GET /repos/:owner/:repo/pulls/comments/:commentId/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3903:30",
        "header": "POST /repos/:owner/:repo/pulls/comments/:commentId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3912:36",
        "header": "DELETE /repos/:owner/:repo/pulls/comments/:commentId/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3917:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3927:30",
        "header": "PATCH /repos/:owner/:repo/pulls/:pullNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pulls/:pullNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3936:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3941:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/comments",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3950:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/comments/:commentId/replies",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/comments/:commentId/replies",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3958:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/commits",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3963:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/files",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/files",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3972:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/merge",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/merge",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3980:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/merge",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/merge",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3992:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:3997:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4006:36",
        "header": "DELETE /repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4014:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/reviews",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4019:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/reviews",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4028:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4036:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4044:36",
        "header": "DELETE /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4053:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4061:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/dismissals",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/dismissals",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4070:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/events",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4080:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/update-branch",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/update-branch",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4089:30",
        "header": "GET /repos/:owner/:repo/readme",
        "method": "GET",
        "path": "/repos/:owner/:repo/readme",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4098:30",
        "header": "GET /repos/:owner/:repo/readme/:dir",
        "method": "GET",
        "path": "/repos/:owner/:repo/readme/:dir",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4107:30",
        "header": "GET /repos/:owner/:repo/releases",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4115:30",
        "header": "POST /repos/:owner/:repo/releases",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4123:30",
        "header": "GET /repos/:owner/:repo/releases/assets/:assetId",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/assets/:assetId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4133:30",
        "header": "PATCH /repos/:owner/:repo/releases/assets/:assetId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/releases/assets/:assetId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4138:36",
        "header": "DELETE /repos/:owner/:repo/releases/assets/:assetId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/releases/assets/:assetId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4143:30",
        "header": "POST /repos/:owner/:repo/releases/generate-notes",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases/generate-notes",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4151:30",
        "header": "GET /repos/:owner/:repo/releases/latest",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/latest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4156:30",
        "header": "GET /repos/:owner/:repo/releases/tags/:tag",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/tags/:tag",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4164:30",
        "header": "GET /repos/:owner/:repo/releases/:releaseId",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/:releaseId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4172:30",
        "header": "PATCH /repos/:owner/:repo/releases/:releaseId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/releases/:releaseId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4177:36",
        "header": "DELETE /repos/:owner/:repo/releases/:releaseId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/releases/:releaseId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4182:30",
        "header": "GET /repos/:owner/:repo/releases/:releaseId/assets",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/:releaseId/assets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4187:30",
        "header": "POST /repos/:owner/:repo/releases/:releaseId/assets",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases/:releaseId/assets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4195:30",
        "header": "POST /repos/:owner/:repo/releases/:releaseId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases/:releaseId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4204:30",
        "header": "GET /repos/:owner/:repo/secret-scanning/alerts",
        "method": "GET",
        "path": "/repos/:owner/:repo/secret-scanning/alerts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4213:30",
        "header": "GET /repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4223:30",
        "header": "PATCH /repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4233:30",
        "header": "GET /repos/:owner/:repo/secret-scanning/alerts/:alertNumber/locations",
        "method": "GET",
        "path": "/repos/:owner/:repo/secret-scanning/alerts/:alertNumber/locations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4242:30",
        "header": "GET /repos/:owner/:repo/stargazers",
        "method": "GET",
        "path": "/repos/:owner/:repo/stargazers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4250:30",
        "header": "GET /repos/:owner/:repo/stats/code_frequency",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/code_frequency",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4259:30",
        "header": "GET /repos/:owner/:repo/stats/commit_activity",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/commit_activity",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4268:30",
        "header": "GET /repos/:owner/:repo/stats/contributors",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/contributors",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4277:30",
        "header": "GET /repos/:owner/:repo/stats/participation",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/participation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4285:30",
        "header": "GET /repos/:owner/:repo/stats/punch_card",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/punch_card",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4293:30",
        "header": "POST /repos/:owner/:repo/statuses/:sha",
        "method": "POST",
        "path": "/repos/:owner/:repo/statuses/:sha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4298:30",
        "header": "GET /repos/:owner/:repo/subscribers",
        "method": "GET",
        "path": "/repos/:owner/:repo/subscribers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4303:30",
        "header": "GET /repos/:owner/:repo/subscription",
        "method": "GET",
        "path": "/repos/:owner/:repo/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4312:30",
        "header": "PUT /repos/:owner/:repo/subscription",
        "method": "PUT",
        "path": "/repos/:owner/:repo/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4317:36",
        "header": "DELETE /repos/:owner/:repo/subscription",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4322:30",
        "header": "GET /repos/:owner/:repo/tags",
        "method": "GET",
        "path": "/repos/:owner/:repo/tags",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4327:30",
        "header": "GET /repos/:owner/:repo/tarball/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/tarball/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4332:30",
        "header": "GET /repos/:owner/:repo/teams",
        "method": "GET",
        "path": "/repos/:owner/:repo/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4337:30",
        "header": "GET /repos/:owner/:repo/topics",
        "method": "GET",
        "path": "/repos/:owner/:repo/topics",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4345:30",
        "header": "PUT /repos/:owner/:repo/topics",
        "method": "PUT",
        "path": "/repos/:owner/:repo/topics",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4354:30",
        "header": "POST /repos/:owner/:repo/transfer",
        "method": "POST",
        "path": "/repos/:owner/:repo/transfer",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4359:30",
        "header": "GET /repos/:owner/:repo/zipball/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/zipball/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4364:30",
        "header": "POST /repos/:templateOwner/:templateRepo/generate",
        "method": "POST",
        "path": "/repos/:templateOwner/:templateRepo/generate",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4369:30",
        "header": "GET /repositories",
        "method": "GET",
        "path": "/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4378:30",
        "header": "GET /repositories/:repositoryId/environments/:environmentName/secrets",
        "method": "GET",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4383:30",
        "header": "GET /repositories/:repositoryId/environments/:environmentName/secrets/public-key",
        "method": "GET",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/public-key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4388:30",
        "header": "GET /repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
        "method": "GET",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4393:30",
        "header": "PUT /repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
        "method": "PUT",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4401:36",
        "header": "DELETE /repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
        "method": "DELETE",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4406:30",
        "header": "GET /search/code",
        "method": "GET",
        "path": "/search/code",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4417:30",
        "header": "GET /search/commits",
        "method": "GET",
        "path": "/search/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4425:30",
        "header": "GET /search/issues",
        "method": "GET",
        "path": "/search/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4436:30",
        "header": "GET /search/labels",
        "method": "GET",
        "path": "/search/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4447:30",
        "header": "GET /search/repositories",
        "method": "GET",
        "path": "/search/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4457:30",
        "header": "GET /search/topics",
        "method": "GET",
        "path": "/search/topics",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4465:30",
        "header": "GET /search/users",
        "method": "GET",
        "path": "/search/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4475:30",
        "header": "GET /setup/api/configcheck",
        "method": "GET",
        "path": "/setup/api/configcheck",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4480:30",
        "header": "POST /setup/api/configure",
        "method": "POST",
        "path": "/setup/api/configure",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4485:30",
        "header": "GET /setup/api/maintenance",
        "method": "GET",
        "path": "/setup/api/maintenance",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4490:30",
        "header": "POST /setup/api/maintenance",
        "method": "POST",
        "path": "/setup/api/maintenance",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4495:30",
        "header": "GET /setup/api/settings",
        "method": "GET",
        "path": "/setup/api/settings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4500:30",
        "header": "PUT /setup/api/settings",
        "method": "PUT",
        "path": "/setup/api/settings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4505:30",
        "header": "GET /setup/api/settings/authorized-keys",
        "method": "GET",
        "path": "/setup/api/settings/authorized-keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4510:30",
        "header": "POST /setup/api/settings/authorized-keys",
        "method": "POST",
        "path": "/setup/api/settings/authorized-keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4515:36",
        "header": "DELETE /setup/api/settings/authorized-keys",
        "method": "DELETE",
        "path": "/setup/api/settings/authorized-keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4520:30",
        "header": "POST /setup/api/start",
        "method": "POST",
        "path": "/setup/api/start",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4525:30",
        "header": "POST /setup/api/upgrade",
        "method": "POST",
        "path": "/setup/api/upgrade",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4530:30",
        "header": "GET /teams/:teamId",
        "method": "GET",
        "path": "/teams/:teamId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4538:30",
        "header": "PATCH /teams/:teamId",
        "method": "PATCH",
        "path": "/teams/:teamId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4549:36",
        "header": "DELETE /teams/:teamId",
        "method": "DELETE",
        "path": "/teams/:teamId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4558:30",
        "header": "GET /teams/:teamId/discussions",
        "method": "GET",
        "path": "/teams/:teamId/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4563:30",
        "header": "POST /teams/:teamId/discussions",
        "method": "POST",
        "path": "/teams/:teamId/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4568:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4573:30",
        "header": "PATCH /teams/:teamId/discussions/:discussionNumber",
        "method": "PATCH",
        "path": "/teams/:teamId/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4578:36",
        "header": "DELETE /teams/:teamId/discussions/:discussionNumber",
        "method": "DELETE",
        "path": "/teams/:teamId/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4583:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/comments",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4588:30",
        "header": "POST /teams/:teamId/discussions/:discussionNumber/comments",
        "method": "POST",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4593:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4598:30",
        "header": "PATCH /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
        "method": "PATCH",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4603:36",
        "header": "DELETE /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
        "method": "DELETE",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4608:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4613:30",
        "header": "POST /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "POST",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4618:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/reactions",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4623:30",
        "header": "POST /teams/:teamId/discussions/:discussionNumber/reactions",
        "method": "POST",
        "path": "/teams/:teamId/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4628:30",
        "header": "GET /teams/:teamId/members",
        "method": "GET",
        "path": "/teams/:teamId/members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4636:30",
        "header": "GET /teams/:teamId/members/:username",
        "method": "GET",
        "path": "/teams/:teamId/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4644:30",
        "header": "PUT /teams/:teamId/members/:username",
        "method": "PUT",
        "path": "/teams/:teamId/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4654:36",
        "header": "DELETE /teams/:teamId/members/:username",
        "method": "DELETE",
        "path": "/teams/:teamId/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4662:30",
        "header": "GET /teams/:teamId/memberships/:username",
        "method": "GET",
        "path": "/teams/:teamId/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4670:30",
        "header": "PUT /teams/:teamId/memberships/:username",
        "method": "PUT",
        "path": "/teams/:teamId/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4680:36",
        "header": "DELETE /teams/:teamId/memberships/:username",
        "method": "DELETE",
        "path": "/teams/:teamId/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4688:30",
        "header": "GET /teams/:teamId/projects",
        "method": "GET",
        "path": "/teams/:teamId/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4696:30",
        "header": "GET /teams/:teamId/projects/:projectId",
        "method": "GET",
        "path": "/teams/:teamId/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4704:30",
        "header": "PUT /teams/:teamId/projects/:projectId",
        "method": "PUT",
        "path": "/teams/:teamId/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4714:36",
        "header": "DELETE /teams/:teamId/projects/:projectId",
        "method": "DELETE",
        "path": "/teams/:teamId/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4724:30",
        "header": "GET /teams/:teamId/repos",
        "method": "GET",
        "path": "/teams/:teamId/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4732:30",
        "header": "GET /teams/:teamId/repos/:owner/:repo",
        "method": "GET",
        "path": "/teams/:teamId/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4741:30",
        "header": "PUT /teams/:teamId/repos/:owner/:repo",
        "method": "PUT",
        "path": "/teams/:teamId/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4750:36",
        "header": "DELETE /teams/:teamId/repos/:owner/:repo",
        "method": "DELETE",
        "path": "/teams/:teamId/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4755:30",
        "header": "GET /teams/:teamId/teams",
        "method": "GET",
        "path": "/teams/:teamId/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4765:30",
        "header": "GET /user",
        "method": "GET",
        "path": "/user",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4775:30",
        "header": "PATCH /user",
        "method": "PATCH",
        "path": "/user",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4787:30",
        "header": "GET /user/emails",
        "method": "GET",
        "path": "/user/emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4798:30",
        "header": "POST /user/emails",
        "method": "POST",
        "path": "/user/emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4810:36",
        "header": "DELETE /user/emails",
        "method": "DELETE",
        "path": "/user/emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4822:30",
        "header": "GET /user/followers",
        "method": "GET",
        "path": "/user/followers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4832:30",
        "header": "GET /user/following",
        "method": "GET",
        "path": "/user/following",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4842:30",
        "header": "GET /user/following/:username",
        "method": "GET",
        "path": "/user/following/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4853:30",
        "header": "PUT /user/following/:username",
        "method": "PUT",
        "path": "/user/following/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4864:36",
        "header": "DELETE /user/following/:username",
        "method": "DELETE",
        "path": "/user/following/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4875:30",
        "header": "GET /user/gpg_keys",
        "method": "GET",
        "path": "/user/gpg_keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4886:30",
        "header": "POST /user/gpg_keys",
        "method": "POST",
        "path": "/user/gpg_keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4898:30",
        "header": "GET /user/gpg_keys/:gpgKeyId",
        "method": "GET",
        "path": "/user/gpg_keys/:gpgKeyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4909:36",
        "header": "DELETE /user/gpg_keys/:gpgKeyId",
        "method": "DELETE",
        "path": "/user/gpg_keys/:gpgKeyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4921:30",
        "header": "GET /user/installations",
        "method": "GET",
        "path": "/user/installations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4932:30",
        "header": "GET /user/installations/:installationId/repositories",
        "method": "GET",
        "path": "/user/installations/:installationId/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4942:30",
        "header": "PUT /user/installations/:installationId/repositories/:repositoryId",
        "method": "PUT",
        "path": "/user/installations/:installationId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4952:36",
        "header": "DELETE /user/installations/:installationId/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/user/installations/:installationId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4962:30",
        "header": "GET /user/issues",
        "method": "GET",
        "path": "/user/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4971:30",
        "header": "GET /user/keys",
        "method": "GET",
        "path": "/user/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4982:30",
        "header": "POST /user/keys",
        "method": "POST",
        "path": "/user/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:4994:30",
        "header": "GET /user/keys/:keyId",
        "method": "GET",
        "path": "/user/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5005:36",
        "header": "DELETE /user/keys/:keyId",
        "method": "DELETE",
        "path": "/user/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5016:30",
        "header": "GET /user/memberships/orgs",
        "method": "GET",
        "path": "/user/memberships/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5027:30",
        "header": "GET /user/memberships/orgs/:org",
        "method": "GET",
        "path": "/user/memberships/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5036:30",
        "header": "PATCH /user/memberships/orgs/:org",
        "method": "PATCH",
        "path": "/user/memberships/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5046:30",
        "header": "GET /user/orgs",
        "method": "GET",
        "path": "/user/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5056:30",
        "header": "POST /user/projects",
        "method": "POST",
        "path": "/user/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5068:30",
        "header": "GET /user/public_emails",
        "method": "GET",
        "path": "/user/public_emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5079:30",
        "header": "GET /user/repos",
        "method": "GET",
        "path": "/user/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5090:30",
        "header": "POST /user/repos",
        "method": "POST",
        "path": "/user/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5103:30",
        "header": "GET /user/repository_invitations",
        "method": "GET",
        "path": "/user/repository_invitations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5114:30",
        "header": "PATCH /user/repository_invitations/:invitationId",
        "method": "PATCH",
        "path": "/user/repository_invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5125:36",
        "header": "DELETE /user/repository_invitations/:invitationId",
        "method": "DELETE",
        "path": "/user/repository_invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5136:30",
        "header": "GET /user/starred",
        "method": "GET",
        "path": "/user/starred",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5146:30",
        "header": "GET /user/starred/:owner/:repo",
        "method": "GET",
        "path": "/user/starred/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5157:30",
        "header": "PUT /user/starred/:owner/:repo",
        "method": "PUT",
        "path": "/user/starred/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5168:36",
        "header": "DELETE /user/starred/:owner/:repo",
        "method": "DELETE",
        "path": "/user/starred/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5179:30",
        "header": "GET /user/subscriptions",
        "method": "GET",
        "path": "/user/subscriptions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5189:30",
        "header": "GET /user/teams",
        "method": "GET",
        "path": "/user/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5199:30",
        "header": "GET /users",
        "method": "GET",
        "path": "/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5207:30",
        "header": "GET /users/:username",
        "method": "GET",
        "path": "/users/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5215:30",
        "header": "GET /users/:username/events",
        "method": "GET",
        "path": "/users/:username/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5220:30",
        "header": "GET /users/:username/events/orgs/:org",
        "method": "GET",
        "path": "/users/:username/events/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5225:30",
        "header": "GET /users/:username/events/public",
        "method": "GET",
        "path": "/users/:username/events/public",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5230:30",
        "header": "GET /users/:username/followers",
        "method": "GET",
        "path": "/users/:username/followers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5235:30",
        "header": "GET /users/:username/following",
        "method": "GET",
        "path": "/users/:username/following",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5240:30",
        "header": "GET /users/:username/following/:targetUser",
        "method": "GET",
        "path": "/users/:username/following/:targetUser",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5248:30",
        "header": "GET /users/:username/gists",
        "method": "GET",
        "path": "/users/:username/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5256:30",
        "header": "GET /users/:username/gpg_keys",
        "method": "GET",
        "path": "/users/:username/gpg_keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5261:30",
        "header": "GET /users/:username/hovercard",
        "method": "GET",
        "path": "/users/:username/hovercard",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5270:30",
        "header": "GET /users/:username/installation",
        "method": "GET",
        "path": "/users/:username/installation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5275:30",
        "header": "GET /users/:username/keys",
        "method": "GET",
        "path": "/users/:username/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5280:30",
        "header": "GET /users/:username/orgs",
        "method": "GET",
        "path": "/users/:username/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5285:30",
        "header": "GET /users/:username/projects",
        "method": "GET",
        "path": "/users/:username/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5293:30",
        "header": "GET /users/:username/received_events",
        "method": "GET",
        "path": "/users/:username/received_events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5298:30",
        "header": "GET /users/:username/received_events/public",
        "method": "GET",
        "path": "/users/:username/received_events/public",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5303:30",
        "header": "GET /users/:username/repos",
        "method": "GET",
        "path": "/users/:username/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5308:30",
        "header": "PUT /users/:username/site_admin",
        "method": "PUT",
        "path": "/users/:username/site_admin",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5313:36",
        "header": "DELETE /users/:username/site_admin",
        "method": "DELETE",
        "path": "/users/:username/site_admin",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5318:30",
        "header": "GET /users/:username/starred",
        "method": "GET",
        "path": "/users/:username/starred",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5323:30",
        "header": "GET /users/:username/subscriptions",
        "method": "GET",
        "path": "/users/:username/subscriptions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5328:30",
        "header": "PUT /users/:username/suspended",
        "method": "PUT",
        "path": "/users/:username/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5333:36",
        "header": "DELETE /users/:username/suspended",
        "method": "DELETE",
        "path": "/users/:username/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--node.js:5338:30",
        "header": "GET /zen",
        "method": "GET",
        "path": "/zen",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
  ],
  "startWorker": [Function],
}
`;

exports[`try generate with fixture > generated result should match snapshot 2`] = `
{
  "getActionsCancelWorkflowRun202Response": [Function],
  "getActionsCreateOrUpdateEnvironmentSecret201Response": [Function],
  "getActionsCreateOrUpdateOrgSecret201Response": [Function],
  "getActionsCreateOrUpdateRepoSecret201Response": [Function],
  "getActionsCreateRegistrationTokenForOrg201Response": [Function],
  "getActionsCreateRegistrationTokenForRepo201Response": [Function],
  "getActionsCreateRemoveTokenForOrg201Response": [Function],
  "getActionsCreateRemoveTokenForRepo201Response": [Function],
  "getActionsCreateSelfHostedRunnerGroupForOrg201Response": [Function],
  "getActionsGetAllowedActionsOrganization200Response": [Function],
  "getActionsGetAllowedActionsRepository200Response": [Function],
  "getActionsGetArtifact200Response": [Function],
  "getActionsGetEnvironmentPublicKey200Response": [Function],
  "getActionsGetEnvironmentSecret200Response": [Function],
  "getActionsGetGithubActionsPermissionsOrganization200Response": [Function],
  "getActionsGetGithubActionsPermissionsRepository200Response": [Function],
  "getActionsGetJobForWorkflowRun200Response": [Function],
  "getActionsGetOrgPublicKey200Response": [Function],
  "getActionsGetOrgSecret200Response": [Function],
  "getActionsGetPendingDeploymentsForRun200Response": [Function],
  "getActionsGetRepoPublicKey200Response": [Function],
  "getActionsGetRepoSecret200Response": [Function],
  "getActionsGetReviewsForRun200Response": [Function],
  "getActionsGetSelfHostedRunnerForOrg200Response": [Function],
  "getActionsGetSelfHostedRunnerForRepo200Response": [Function],
  "getActionsGetSelfHostedRunnerGroupForOrg200Response": [Function],
  "getActionsGetWorkflow200Response": [Function],
  "getActionsGetWorkflowRun200Response": [Function],
  "getActionsGetWorkflowRunAttempt200Response": [Function],
  "getActionsListArtifactsForRepo200Response": [Function],
  "getActionsListEnvironmentSecrets200Response": [Function],
  "getActionsListJobsForWorkflowRun200Response": [Function],
  "getActionsListJobsForWorkflowRunAttempt200Response": [Function],
  "getActionsListJobsForWorkflowRunAttempt404Response": [Function],
  "getActionsListOrgSecrets200Response": [Function],
  "getActionsListRepoAccessToSelfHostedRunnerGroupInOrg200Response": [Function],
  "getActionsListRepoSecrets200Response": [Function],
  "getActionsListRepoWorkflows200Response": [Function],
  "getActionsListRunnerApplicationsForOrg200Response": [Function],
  "getActionsListRunnerApplicationsForRepo200Response": [Function],
  "getActionsListSelectedReposForOrgSecret200Response": [Function],
  "getActionsListSelectedRepositoriesEnabledGithubActionsOrganization200Response": [Function],
  "getActionsListSelfHostedRunnerGroupsForOrg200Response": [Function],
  "getActionsListSelfHostedRunnersForOrg200Response": [Function],
  "getActionsListSelfHostedRunnersForRepo200Response": [Function],
  "getActionsListSelfHostedRunnersInGroupForOrg200Response": [Function],
  "getActionsListWorkflowRunArtifacts200Response": [Function],
  "getActionsListWorkflowRuns200Response": [Function],
  "getActionsListWorkflowRunsForRepo200Response": [Function],
  "getActionsReRunWorkflow201Response": [Function],
  "getActionsReviewPendingDeploymentsForRun200Response": [Function],
  "getActionsUpdateSelfHostedRunnerGroupForOrg200Response": [Function],
  "getActivityCheckRepoIsStarredByAuthenticatedUser401Response": [Function],
  "getActivityCheckRepoIsStarredByAuthenticatedUser403Response": [Function],
  "getActivityCheckRepoIsStarredByAuthenticatedUser404Response": [Function],
  "getActivityDeleteThreadSubscription401Response": [Function],
  "getActivityDeleteThreadSubscription403Response": [Function],
  "getActivityGetFeeds200Response": [Function],
  "getActivityGetRepoSubscription200Response": [Function],
  "getActivityGetRepoSubscription403Response": [Function],
  "getActivityGetThread200Response": [Function],
  "getActivityGetThread401Response": [Function],
  "getActivityGetThread403Response": [Function],
  "getActivityGetThreadSubscriptionForAuthenticatedUser200Response": [Function],
  "getActivityGetThreadSubscriptionForAuthenticatedUser401Response": [Function],
  "getActivityGetThreadSubscriptionForAuthenticatedUser403Response": [Function],
  "getActivityListEventsForAuthenticatedUser200Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser200Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser401Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser403Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser422Response": [Function],
  "getActivityListOrgEventsForAuthenticatedUser200Response": [Function],
  "getActivityListPublicEvents200Response": [Function],
  "getActivityListPublicEvents403Response": [Function],
  "getActivityListPublicEvents503Response": [Function],
  "getActivityListPublicEventsForRepoNetwork200Response": [Function],
  "getActivityListPublicEventsForRepoNetwork301Response": [Function],
  "getActivityListPublicEventsForRepoNetwork403Response": [Function],
  "getActivityListPublicEventsForRepoNetwork404Response": [Function],
  "getActivityListPublicEventsForUser200Response": [Function],
  "getActivityListPublicOrgEvents200Response": [Function],
  "getActivityListReceivedEventsForUser200Response": [Function],
  "getActivityListReceivedPublicEventsForUser200Response": [Function],
  "getActivityListRepoEvents200Response": [Function],
  "getActivityListRepoNotificationsForAuthenticatedUser200Response": [Function],
  "getActivityListReposStarredByAuthenticatedUser200Response": [Function],
  "getActivityListReposStarredByAuthenticatedUser401Response": [Function],
  "getActivityListReposStarredByAuthenticatedUser403Response": [Function],
  "getActivityListReposStarredByUser200Response": [Function],
  "getActivityListReposWatchedByUser200Response": [Function],
  "getActivityListStargazersForRepo200Response": [Function],
  "getActivityListStargazersForRepo422Response": [Function],
  "getActivityListWatchedReposForAuthenticatedUser200Response": [Function],
  "getActivityListWatchedReposForAuthenticatedUser401Response": [Function],
  "getActivityListWatchedReposForAuthenticatedUser403Response": [Function],
  "getActivityListWatchersForRepo200Response": [Function],
  "getActivityMarkNotificationsAsRead202Response": [Function],
  "getActivityMarkNotificationsAsRead401Response": [Function],
  "getActivityMarkNotificationsAsRead403Response": [Function],
  "getActivityMarkRepoNotificationsAsRead202Response": [Function],
  "getActivityMarkThreadAsRead403Response": [Function],
  "getActivitySetRepoSubscription200Response": [Function],
  "getActivitySetThreadSubscription200Response": [Function],
  "getActivitySetThreadSubscription401Response": [Function],
  "getActivitySetThreadSubscription403Response": [Function],
  "getActivityStarRepoForAuthenticatedUser401Response": [Function],
  "getActivityStarRepoForAuthenticatedUser403Response": [Function],
  "getActivityStarRepoForAuthenticatedUser404Response": [Function],
  "getActivityUnstarRepoForAuthenticatedUser401Response": [Function],
  "getActivityUnstarRepoForAuthenticatedUser403Response": [Function],
  "getActivityUnstarRepoForAuthenticatedUser404Response": [Function],
  "getAppsAddRepoToInstallationForAuthenticatedUser403Response": [Function],
  "getAppsAddRepoToInstallationForAuthenticatedUser404Response": [Function],
  "getAppsCheckAuthorization200Response": [Function],
  "getAppsCheckAuthorization404Response": [Function],
  "getAppsCheckToken200Response": [Function],
  "getAppsCheckToken404Response": [Function],
  "getAppsCheckToken422Response": [Function],
  "getAppsCreateContentAttachment200Response": [Function],
  "getAppsCreateContentAttachment403Response": [Function],
  "getAppsCreateContentAttachment404Response": [Function],
  "getAppsCreateContentAttachment410Response": [Function],
  "getAppsCreateContentAttachment415Response": [Function],
  "getAppsCreateContentAttachment422Response": [Function],
  "getAppsCreateFromManifest201Response": [Function],
  "getAppsCreateFromManifest404Response": [Function],
  "getAppsCreateFromManifest422Response": [Function],
  "getAppsCreateInstallationAccessToken201Response": [Function],
  "getAppsCreateInstallationAccessToken401Response": [Function],
  "getAppsCreateInstallationAccessToken403Response": [Function],
  "getAppsCreateInstallationAccessToken404Response": [Function],
  "getAppsCreateInstallationAccessToken415Response": [Function],
  "getAppsCreateInstallationAccessToken422Response": [Function],
  "getAppsDeleteAuthorization422Response": [Function],
  "getAppsDeleteInstallation404Response": [Function],
  "getAppsDeleteToken422Response": [Function],
  "getAppsGetAuthenticated200Response": [Function],
  "getAppsGetBySlug200Response": [Function],
  "getAppsGetBySlug403Response": [Function],
  "getAppsGetBySlug404Response": [Function],
  "getAppsGetBySlug415Response": [Function],
  "getAppsGetInstallation200Response": [Function],
  "getAppsGetInstallation404Response": [Function],
  "getAppsGetInstallation415Response": [Function],
  "getAppsGetOrgInstallation200Response": [Function],
  "getAppsGetRepoInstallation200Response": [Function],
  "getAppsGetRepoInstallation301Response": [Function],
  "getAppsGetRepoInstallation404Response": [Function],
  "getAppsGetUserInstallation200Response": [Function],
  "getAppsGetWebhookConfigForApp200Response": [Function],
  "getAppsGetWebhookDelivery200Response": [Function],
  "getAppsGetWebhookDelivery400Response": [Function],
  "getAppsGetWebhookDelivery422Response": [Function],
  "getAppsListInstallationReposForAuthenticatedUser200Response": [Function],
  "getAppsListInstallationReposForAuthenticatedUser403Response": [Function],
  "getAppsListInstallationReposForAuthenticatedUser404Response": [Function],
  "getAppsListInstallations200Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser200Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser401Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser403Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser415Response": [Function],
  "getAppsListReposAccessibleToInstallation200Response": [Function],
  "getAppsListReposAccessibleToInstallation401Response": [Function],
  "getAppsListReposAccessibleToInstallation403Response": [Function],
  "getAppsListWebhookDeliveries200Response": [Function],
  "getAppsListWebhookDeliveries400Response": [Function],
  "getAppsListWebhookDeliveries422Response": [Function],
  "getAppsRedeliverWebhookDelivery202Response": [Function],
  "getAppsRedeliverWebhookDelivery400Response": [Function],
  "getAppsRedeliverWebhookDelivery422Response": [Function],
  "getAppsRemoveRepoFromInstallationForAuthenticatedUser403Response": [Function],
  "getAppsRemoveRepoFromInstallationForAuthenticatedUser404Response": [Function],
  "getAppsResetAuthorization200Response": [Function],
  "getAppsResetToken200Response": [Function],
  "getAppsResetToken422Response": [Function],
  "getAppsScopeToken200Response": [Function],
  "getAppsScopeToken401Response": [Function],
  "getAppsScopeToken403Response": [Function],
  "getAppsScopeToken404Response": [Function],
  "getAppsScopeToken422Response": [Function],
  "getAppsSuspendInstallation404Response": [Function],
  "getAppsUnsuspendInstallation404Response": [Function],
  "getAppsUpdateWebhookConfigForApp200Response": [Function],
  "getChecksCreate201Response": [Function],
  "getChecksCreateSuite200Response": [Function],
  "getChecksCreateSuite201Response": [Function],
  "getChecksGet200Response": [Function],
  "getChecksGetSuite200Response": [Function],
  "getChecksListAnnotations200Response": [Function],
  "getChecksListForRef200Response": [Function],
  "getChecksListForSuite200Response": [Function],
  "getChecksListSuitesForRef200Response": [Function],
  "getChecksRerequestRun201Response": [Function],
  "getChecksRerequestRun403Response": [Function],
  "getChecksRerequestRun404Response": [Function],
  "getChecksRerequestRun422Response": [Function],
  "getChecksRerequestSuite201Response": [Function],
  "getChecksSetSuitesPreferences200Response": [Function],
  "getChecksUpdate200Response": [Function],
  "getCodeScanningDeleteAnalysis200Response": [Function],
  "getCodeScanningDeleteAnalysis400Response": [Function],
  "getCodeScanningDeleteAnalysis403Response": [Function],
  "getCodeScanningDeleteAnalysis404Response": [Function],
  "getCodeScanningDeleteAnalysis503Response": [Function],
  "getCodeScanningGetAlert200Response": [Function],
  "getCodeScanningGetAlert403Response": [Function],
  "getCodeScanningGetAlert404Response": [Function],
  "getCodeScanningGetAlert503Response": [Function],
  "getCodeScanningGetAnalysis200Response": [Function],
  "getCodeScanningGetAnalysis403Response": [Function],
  "getCodeScanningGetAnalysis404Response": [Function],
  "getCodeScanningGetAnalysis503Response": [Function],
  "getCodeScanningGetSarif200Response": [Function],
  "getCodeScanningGetSarif403Response": [Function],
  "getCodeScanningGetSarif503Response": [Function],
  "getCodeScanningListAlertInstances200Response": [Function],
  "getCodeScanningListAlertInstances403Response": [Function],
  "getCodeScanningListAlertInstances404Response": [Function],
  "getCodeScanningListAlertInstances503Response": [Function],
  "getCodeScanningListAlertsForRepo200Response": [Function],
  "getCodeScanningListAlertsForRepo403Response": [Function],
  "getCodeScanningListAlertsForRepo404Response": [Function],
  "getCodeScanningListAlertsForRepo503Response": [Function],
  "getCodeScanningListRecentAnalyses200Response": [Function],
  "getCodeScanningListRecentAnalyses403Response": [Function],
  "getCodeScanningListRecentAnalyses404Response": [Function],
  "getCodeScanningListRecentAnalyses503Response": [Function],
  "getCodeScanningUpdateAlert200Response": [Function],
  "getCodeScanningUpdateAlert403Response": [Function],
  "getCodeScanningUpdateAlert404Response": [Function],
  "getCodeScanningUpdateAlert503Response": [Function],
  "getCodeScanningUploadSarif202Response": [Function],
  "getCodeScanningUploadSarif403Response": [Function],
  "getCodeScanningUploadSarif404Response": [Function],
  "getCodeScanningUploadSarif503Response": [Function],
  "getCodesOfConductGetAllCodesOfConduct200Response": [Function],
  "getCodesOfConductGetConductCode200Response": [Function],
  "getCodesOfConductGetConductCode404Response": [Function],
  "getEmojisGet200Response": [Function],
  "getEnterpriseAdminAddAuthorizedSshKey201Response": [Function],
  "getEnterpriseAdminCreateGlobalWebhook201Response": [Function],
  "getEnterpriseAdminCreateImpersonationOAuthToken201Response": [Function],
  "getEnterpriseAdminCreateOrg201Response": [Function],
  "getEnterpriseAdminCreatePreReceiveEnvironment201Response": [Function],
  "getEnterpriseAdminCreatePreReceiveHook201Response": [Function],
  "getEnterpriseAdminCreateRegistrationTokenForEnterprise201Response": [Function],
  "getEnterpriseAdminCreateRemoveTokenForEnterprise201Response": [Function],
  "getEnterpriseAdminCreateSelfHostedRunnerGroupForEnterprise201Response": [Function],
  "getEnterpriseAdminCreateUser201Response": [Function],
  "getEnterpriseAdminDeletePreReceiveEnvironment422Response": [Function],
  "getEnterpriseAdminEnableOrDisableMaintenanceMode200Response": [Function],
  "getEnterpriseAdminGetAllAuthorizedSshKeys200Response": [Function],
  "getEnterpriseAdminGetAllStats200Response": [Function],
  "getEnterpriseAdminGetAllowedActionsEnterprise200Response": [Function],
  "getEnterpriseAdminGetAnnouncement200Response": [Function],
  "getEnterpriseAdminGetAuditLog200Response": [Function],
  "getEnterpriseAdminGetCommentStats200Response": [Function],
  "getEnterpriseAdminGetConfigurationStatus200Response": [Function],
  "getEnterpriseAdminGetDownloadStatusForPreReceiveEnvironment200Response": [Function],
  "getEnterpriseAdminGetGistStats200Response": [Function],
  "getEnterpriseAdminGetGithubActionsPermissionsEnterprise200Response": [Function],
  "getEnterpriseAdminGetGlobalWebhook200Response": [Function],
  "getEnterpriseAdminGetHooksStats200Response": [Function],
  "getEnterpriseAdminGetIssueStats200Response": [Function],
  "getEnterpriseAdminGetLicenseInformation200Response": [Function],
  "getEnterpriseAdminGetMaintenanceStatus200Response": [Function],
  "getEnterpriseAdminGetMilestoneStats200Response": [Function],
  "getEnterpriseAdminGetOrgStats200Response": [Function],
  "getEnterpriseAdminGetPagesStats200Response": [Function],
  "getEnterpriseAdminGetPreReceiveEnvironment200Response": [Function],
  "getEnterpriseAdminGetPreReceiveHook200Response": [Function],
  "getEnterpriseAdminGetPreReceiveHookForOrg200Response": [Function],
  "getEnterpriseAdminGetPreReceiveHookForRepo200Response": [Function],
  "getEnterpriseAdminGetPullRequestStats200Response": [Function],
  "getEnterpriseAdminGetRepoStats200Response": [Function],
  "getEnterpriseAdminGetSelfHostedRunnerForEnterprise200Response": [Function],
  "getEnterpriseAdminGetSelfHostedRunnerGroupForEnterprise200Response": [Function],
  "getEnterpriseAdminGetSettings200Response": [Function],
  "getEnterpriseAdminGetUserStats200Response": [Function],
  "getEnterpriseAdminListGlobalWebhooks200Response": [Function],
  "getEnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise200Response": [Function],
  "getEnterpriseAdminListPersonalAccessTokens200Response": [Function],
  "getEnterpriseAdminListPreReceiveEnvironments200Response": [Function],
  "getEnterpriseAdminListPreReceiveHooks200Response": [Function],
  "getEnterpriseAdminListPreReceiveHooksForOrg200Response": [Function],
  "getEnterpriseAdminListPreReceiveHooksForRepo200Response": [Function],
  "getEnterpriseAdminListPublicKeys200Response": [Function],
  "getEnterpriseAdminListRunnerApplicationsForEnterprise200Response": [Function],
  "getEnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise200Response": [Function],
  "getEnterpriseAdminListSelfHostedRunnerGroupsForEnterprise200Response": [Function],
  "getEnterpriseAdminListSelfHostedRunnersForEnterprise200Response": [Function],
  "getEnterpriseAdminListSelfHostedRunnersInGroupForEnterprise200Response": [Function],
  "getEnterpriseAdminRemoveAuthorizedSshKey200Response": [Function],
  "getEnterpriseAdminRemovePreReceiveHookEnforcementForOrg200Response": [Function],
  "getEnterpriseAdminRemovePreReceiveHookEnforcementForRepo200Response": [Function],
  "getEnterpriseAdminSetAnnouncement200Response": [Function],
  "getEnterpriseAdminStartPreReceiveEnvironmentDownload202Response": [Function],
  "getEnterpriseAdminStartPreReceiveEnvironmentDownload422Response": [Function],
  "getEnterpriseAdminSyncLdapMappingForTeam201Response": [Function],
  "getEnterpriseAdminSyncLdapMappingForUser201Response": [Function],
  "getEnterpriseAdminUpdateGlobalWebhook200Response": [Function],
  "getEnterpriseAdminUpdateLdapMappingForTeam200Response": [Function],
  "getEnterpriseAdminUpdateLdapMappingForUser200Response": [Function],
  "getEnterpriseAdminUpdateOrgName202Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveEnvironment200Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveEnvironment422Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveHook200Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveHookEnforcementForOrg200Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveHookEnforcementForRepo200Response": [Function],
  "getEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterprise200Response": [Function],
  "getEnterpriseAdminUpdateUsernameForUser202Response": [Function],
  "getGistsCheckIsStarred403Response": [Function],
  "getGistsCheckIsStarred404Response": [Function],
  "getGistsCreate201Response": [Function],
  "getGistsCreate403Response": [Function],
  "getGistsCreate404Response": [Function],
  "getGistsCreate422Response": [Function],
  "getGistsCreateComment201Response": [Function],
  "getGistsCreateComment403Response": [Function],
  "getGistsCreateComment404Response": [Function],
  "getGistsDelete403Response": [Function],
  "getGistsDelete404Response": [Function],
  "getGistsDeleteComment403Response": [Function],
  "getGistsDeleteComment404Response": [Function],
  "getGistsFork201Response": [Function],
  "getGistsFork403Response": [Function],
  "getGistsFork404Response": [Function],
  "getGistsFork422Response": [Function],
  "getGistsGet200Response": [Function],
  "getGistsGet403Response": [Function],
  "getGistsGet404Response": [Function],
  "getGistsGetComment200Response": [Function],
  "getGistsGetComment403Response": [Function],
  "getGistsGetComment404Response": [Function],
  "getGistsGetRevision200Response": [Function],
  "getGistsGetRevision403Response": [Function],
  "getGistsGetRevision404Response": [Function],
  "getGistsGetRevision422Response": [Function],
  "getGistsList200Response": [Function],
  "getGistsList403Response": [Function],
  "getGistsListComments200Response": [Function],
  "getGistsListComments403Response": [Function],
  "getGistsListComments404Response": [Function],
  "getGistsListCommits200Response": [Function],
  "getGistsListCommits403Response": [Function],
  "getGistsListCommits404Response": [Function],
  "getGistsListForUser200Response": [Function],
  "getGistsListForUser422Response": [Function],
  "getGistsListForks200Response": [Function],
  "getGistsListForks403Response": [Function],
  "getGistsListForks404Response": [Function],
  "getGistsListPublic200Response": [Function],
  "getGistsListPublic403Response": [Function],
  "getGistsListPublic422Response": [Function],
  "getGistsListStarred200Response": [Function],
  "getGistsListStarred401Response": [Function],
  "getGistsListStarred403Response": [Function],
  "getGistsStar403Response": [Function],
  "getGistsStar404Response": [Function],
  "getGistsUnstar403Response": [Function],
  "getGistsUnstar404Response": [Function],
  "getGistsUpdate200Response": [Function],
  "getGistsUpdate404Response": [Function],
  "getGistsUpdate422Response": [Function],
  "getGistsUpdateComment200Response": [Function],
  "getGistsUpdateComment404Response": [Function],
  "getGitCreateBlob201Response": [Function],
  "getGitCreateBlob403Response": [Function],
  "getGitCreateBlob404Response": [Function],
  "getGitCreateBlob409Response": [Function],
  "getGitCreateBlob422Response": [Function],
  "getGitCreateCommit201Response": [Function],
  "getGitCreateCommit404Response": [Function],
  "getGitCreateCommit422Response": [Function],
  "getGitCreateRef201Response": [Function],
  "getGitCreateRef422Response": [Function],
  "getGitCreateTag201Response": [Function],
  "getGitCreateTag422Response": [Function],
  "getGitCreateTree201Response": [Function],
  "getGitCreateTree403Response": [Function],
  "getGitCreateTree404Response": [Function],
  "getGitCreateTree422Response": [Function],
  "getGitDeleteRef422Response": [Function],
  "getGitGetBlob200Response": [Function],
  "getGitGetBlob403Response": [Function],
  "getGitGetBlob404Response": [Function],
  "getGitGetBlob422Response": [Function],
  "getGitGetCommit200Response": [Function],
  "getGitGetCommit404Response": [Function],
  "getGitGetRef200Response": [Function],
  "getGitGetRef404Response": [Function],
  "getGitGetTag200Response": [Function],
  "getGitGetTag404Response": [Function],
  "getGitGetTree200Response": [Function],
  "getGitGetTree404Response": [Function],
  "getGitGetTree422Response": [Function],
  "getGitListMatchingRefs200Response": [Function],
  "getGitUpdateRef200Response": [Function],
  "getGitUpdateRef422Response": [Function],
  "getGitignoreGetAllTemplates200Response": [Function],
  "getGitignoreGetTemplate200Response": [Function],
  "getIssuesAddAssignees201Response": [Function],
  "getIssuesAddLabels200Response": [Function],
  "getIssuesAddLabels410Response": [Function],
  "getIssuesAddLabels422Response": [Function],
  "getIssuesCheckUserCanBeAssigned404Response": [Function],
  "getIssuesCreate201Response": [Function],
  "getIssuesCreate403Response": [Function],
  "getIssuesCreate404Response": [Function],
  "getIssuesCreate410Response": [Function],
  "getIssuesCreate422Response": [Function],
  "getIssuesCreate503Response": [Function],
  "getIssuesCreateComment201Response": [Function],
  "getIssuesCreateComment403Response": [Function],
  "getIssuesCreateComment404Response": [Function],
  "getIssuesCreateComment410Response": [Function],
  "getIssuesCreateComment422Response": [Function],
  "getIssuesCreateLabel201Response": [Function],
  "getIssuesCreateLabel404Response": [Function],
  "getIssuesCreateLabel422Response": [Function],
  "getIssuesCreateMilestone201Response": [Function],
  "getIssuesCreateMilestone404Response": [Function],
  "getIssuesCreateMilestone422Response": [Function],
  "getIssuesDeleteMilestone404Response": [Function],
  "getIssuesGet200Response": [Function],
  "getIssuesGet301Response": [Function],
  "getIssuesGet404Response": [Function],
  "getIssuesGet410Response": [Function],
  "getIssuesGetComment200Response": [Function],
  "getIssuesGetComment404Response": [Function],
  "getIssuesGetEvent200Response": [Function],
  "getIssuesGetEvent403Response": [Function],
  "getIssuesGetEvent404Response": [Function],
  "getIssuesGetEvent410Response": [Function],
  "getIssuesGetLabel200Response": [Function],
  "getIssuesGetLabel404Response": [Function],
  "getIssuesGetMilestone200Response": [Function],
  "getIssuesGetMilestone404Response": [Function],
  "getIssuesList200Response": [Function],
  "getIssuesList404Response": [Function],
  "getIssuesList422Response": [Function],
  "getIssuesListAssignees200Response": [Function],
  "getIssuesListAssignees404Response": [Function],
  "getIssuesListComments200Response": [Function],
  "getIssuesListComments404Response": [Function],
  "getIssuesListComments410Response": [Function],
  "getIssuesListCommentsForRepo200Response": [Function],
  "getIssuesListCommentsForRepo404Response": [Function],
  "getIssuesListCommentsForRepo422Response": [Function],
  "getIssuesListEvents200Response": [Function],
  "getIssuesListEvents410Response": [Function],
  "getIssuesListEventsForRepo200Response": [Function],
  "getIssuesListEventsForRepo422Response": [Function],
  "getIssuesListEventsForTimeline200Response": [Function],
  "getIssuesListEventsForTimeline404Response": [Function],
  "getIssuesListEventsForTimeline410Response": [Function],
  "getIssuesListForAuthenticatedUser200Response": [Function],
  "getIssuesListForAuthenticatedUser404Response": [Function],
  "getIssuesListForOrg200Response": [Function],
  "getIssuesListForOrg404Response": [Function],
  "getIssuesListForRepo200Response": [Function],
  "getIssuesListForRepo301Response": [Function],
  "getIssuesListForRepo404Response": [Function],
  "getIssuesListForRepo422Response": [Function],
  "getIssuesListLabelsForMilestone200Response": [Function],
  "getIssuesListLabelsForRepo200Response": [Function],
  "getIssuesListLabelsForRepo404Response": [Function],
  "getIssuesListLabelsOnIssue200Response": [Function],
  "getIssuesListLabelsOnIssue410Response": [Function],
  "getIssuesListMilestones200Response": [Function],
  "getIssuesListMilestones404Response": [Function],
  "getIssuesLock403Response": [Function],
  "getIssuesLock404Response": [Function],
  "getIssuesLock410Response": [Function],
  "getIssuesLock422Response": [Function],
  "getIssuesRemoveAllLabels410Response": [Function],
  "getIssuesRemoveAssignees200Response": [Function],
  "getIssuesRemoveLabel200Response": [Function],
  "getIssuesRemoveLabel404Response": [Function],
  "getIssuesRemoveLabel410Response": [Function],
  "getIssuesSetLabels200Response": [Function],
  "getIssuesSetLabels410Response": [Function],
  "getIssuesSetLabels422Response": [Function],
  "getIssuesUnlock403Response": [Function],
  "getIssuesUnlock404Response": [Function],
  "getIssuesUpdate200Response": [Function],
  "getIssuesUpdate301Response": [Function],
  "getIssuesUpdate403Response": [Function],
  "getIssuesUpdate404Response": [Function],
  "getIssuesUpdate410Response": [Function],
  "getIssuesUpdate422Response": [Function],
  "getIssuesUpdate503Response": [Function],
  "getIssuesUpdateComment200Response": [Function],
  "getIssuesUpdateComment422Response": [Function],
  "getIssuesUpdateLabel200Response": [Function],
  "getIssuesUpdateMilestone200Response": [Function],
  "getLicensesGet200Response": [Function],
  "getLicensesGet403Response": [Function],
  "getLicensesGet404Response": [Function],
  "getLicensesGetAllCommonlyUsed200Response": [Function],
  "getLicensesGetForRepo200Response": [Function],
  "getMarkdownRender200Response": [Function],
  "getMarkdownRenderRaw200Response": [Function],
  "getMetaGet200Response": [Function],
  "getMetaGetOctocat200Response": [Function],
  "getMetaGetZen200Response": [Function],
  "getMetaRoot200Response": [Function],
  "getOauthAuthorizationsCreateAuthorization201Response": [Function],
  "getOauthAuthorizationsCreateAuthorization401Response": [Function],
  "getOauthAuthorizationsCreateAuthorization403Response": [Function],
  "getOauthAuthorizationsCreateAuthorization410Response": [Function],
  "getOauthAuthorizationsCreateAuthorization422Response": [Function],
  "getOauthAuthorizationsDeleteAuthorization401Response": [Function],
  "getOauthAuthorizationsDeleteAuthorization403Response": [Function],
  "getOauthAuthorizationsDeleteGrant401Response": [Function],
  "getOauthAuthorizationsDeleteGrant403Response": [Function],
  "getOauthAuthorizationsGetAuthorization200Response": [Function],
  "getOauthAuthorizationsGetAuthorization401Response": [Function],
  "getOauthAuthorizationsGetAuthorization403Response": [Function],
  "getOauthAuthorizationsGetGrant200Response": [Function],
  "getOauthAuthorizationsGetGrant401Response": [Function],
  "getOauthAuthorizationsGetGrant403Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp200Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp201Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp401Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp403Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp422Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprint200Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprint201Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprint422Response": [Function],
  "getOauthAuthorizationsListAuthorizations200Response": [Function],
  "getOauthAuthorizationsListAuthorizations401Response": [Function],
  "getOauthAuthorizationsListAuthorizations403Response": [Function],
  "getOauthAuthorizationsListAuthorizations404Response": [Function],
  "getOauthAuthorizationsListGrants200Response": [Function],
  "getOauthAuthorizationsListGrants401Response": [Function],
  "getOauthAuthorizationsListGrants403Response": [Function],
  "getOauthAuthorizationsListGrants404Response": [Function],
  "getOauthAuthorizationsUpdateAuthorization200Response": [Function],
  "getOauthAuthorizationsUpdateAuthorization422Response": [Function],
  "getOrgsConvertMemberToOutsideCollaborator202Response": [Function],
  "getOrgsConvertMemberToOutsideCollaborator404Response": [Function],
  "getOrgsCreateWebhook201Response": [Function],
  "getOrgsCreateWebhook404Response": [Function],
  "getOrgsCreateWebhook422Response": [Function],
  "getOrgsDeleteWebhook404Response": [Function],
  "getOrgsGet200Response": [Function],
  "getOrgsGet404Response": [Function],
  "getOrgsGetAuditLog200Response": [Function],
  "getOrgsGetMembershipForAuthenticatedUser200Response": [Function],
  "getOrgsGetMembershipForAuthenticatedUser403Response": [Function],
  "getOrgsGetMembershipForAuthenticatedUser404Response": [Function],
  "getOrgsGetMembershipForUser200Response": [Function],
  "getOrgsGetMembershipForUser403Response": [Function],
  "getOrgsGetMembershipForUser404Response": [Function],
  "getOrgsGetWebhook200Response": [Function],
  "getOrgsGetWebhook404Response": [Function],
  "getOrgsGetWebhookConfigForOrg200Response": [Function],
  "getOrgsGetWebhookDelivery200Response": [Function],
  "getOrgsGetWebhookDelivery400Response": [Function],
  "getOrgsGetWebhookDelivery422Response": [Function],
  "getOrgsList200Response": [Function],
  "getOrgsListAppInstallations200Response": [Function],
  "getOrgsListForAuthenticatedUser200Response": [Function],
  "getOrgsListForAuthenticatedUser401Response": [Function],
  "getOrgsListForAuthenticatedUser403Response": [Function],
  "getOrgsListForUser200Response": [Function],
  "getOrgsListMembers200Response": [Function],
  "getOrgsListMembers422Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser200Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser401Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser403Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser422Response": [Function],
  "getOrgsListOutsideCollaborators200Response": [Function],
  "getOrgsListPublicMembers200Response": [Function],
  "getOrgsListWebhookDeliveries200Response": [Function],
  "getOrgsListWebhookDeliveries400Response": [Function],
  "getOrgsListWebhookDeliveries422Response": [Function],
  "getOrgsListWebhooks200Response": [Function],
  "getOrgsListWebhooks404Response": [Function],
  "getOrgsPingWebhook404Response": [Function],
  "getOrgsRedeliverWebhookDelivery202Response": [Function],
  "getOrgsRedeliverWebhookDelivery400Response": [Function],
  "getOrgsRedeliverWebhookDelivery422Response": [Function],
  "getOrgsRemoveMember403Response": [Function],
  "getOrgsRemoveMembershipForUser403Response": [Function],
  "getOrgsRemoveMembershipForUser404Response": [Function],
  "getOrgsRemoveOutsideCollaborator422Response": [Function],
  "getOrgsSetMembershipForUser200Response": [Function],
  "getOrgsSetMembershipForUser403Response": [Function],
  "getOrgsSetMembershipForUser422Response": [Function],
  "getOrgsSetPublicMembershipForAuthenticatedUser403Response": [Function],
  "getOrgsUpdate200Response": [Function],
  "getOrgsUpdate409Response": [Function],
  "getOrgsUpdate422Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser200Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser403Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser404Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser422Response": [Function],
  "getOrgsUpdateWebhook200Response": [Function],
  "getOrgsUpdateWebhook404Response": [Function],
  "getOrgsUpdateWebhook422Response": [Function],
  "getOrgsUpdateWebhookConfigForOrg200Response": [Function],
  "getProjectsAddCollaborator401Response": [Function],
  "getProjectsAddCollaborator403Response": [Function],
  "getProjectsAddCollaborator404Response": [Function],
  "getProjectsAddCollaborator422Response": [Function],
  "getProjectsCreateCard201Response": [Function],
  "getProjectsCreateCard401Response": [Function],
  "getProjectsCreateCard403Response": [Function],
  "getProjectsCreateCard422Response": [Function],
  "getProjectsCreateCard503Response": [Function],
  "getProjectsCreateColumn201Response": [Function],
  "getProjectsCreateColumn401Response": [Function],
  "getProjectsCreateColumn403Response": [Function],
  "getProjectsCreateColumn422Response": [Function],
  "getProjectsCreateForAuthenticatedUser201Response": [Function],
  "getProjectsCreateForAuthenticatedUser401Response": [Function],
  "getProjectsCreateForAuthenticatedUser403Response": [Function],
  "getProjectsCreateForAuthenticatedUser415Response": [Function],
  "getProjectsCreateForAuthenticatedUser422Response": [Function],
  "getProjectsCreateForOrg201Response": [Function],
  "getProjectsCreateForOrg401Response": [Function],
  "getProjectsCreateForOrg403Response": [Function],
  "getProjectsCreateForOrg404Response": [Function],
  "getProjectsCreateForOrg410Response": [Function],
  "getProjectsCreateForOrg422Response": [Function],
  "getProjectsCreateForRepo201Response": [Function],
  "getProjectsCreateForRepo401Response": [Function],
  "getProjectsCreateForRepo403Response": [Function],
  "getProjectsCreateForRepo404Response": [Function],
  "getProjectsCreateForRepo410Response": [Function],
  "getProjectsCreateForRepo422Response": [Function],
  "getProjectsDelete401Response": [Function],
  "getProjectsDelete403Response": [Function],
  "getProjectsDelete404Response": [Function],
  "getProjectsDelete410Response": [Function],
  "getProjectsDeleteCard401Response": [Function],
  "getProjectsDeleteCard403Response": [Function],
  "getProjectsDeleteCard404Response": [Function],
  "getProjectsDeleteColumn401Response": [Function],
  "getProjectsDeleteColumn403Response": [Function],
  "getProjectsGet200Response": [Function],
  "getProjectsGet401Response": [Function],
  "getProjectsGet403Response": [Function],
  "getProjectsGetCard200Response": [Function],
  "getProjectsGetCard401Response": [Function],
  "getProjectsGetCard403Response": [Function],
  "getProjectsGetCard404Response": [Function],
  "getProjectsGetColumn200Response": [Function],
  "getProjectsGetColumn401Response": [Function],
  "getProjectsGetColumn403Response": [Function],
  "getProjectsGetColumn404Response": [Function],
  "getProjectsGetPermissionForUser200Response": [Function],
  "getProjectsGetPermissionForUser401Response": [Function],
  "getProjectsGetPermissionForUser403Response": [Function],
  "getProjectsGetPermissionForUser404Response": [Function],
  "getProjectsGetPermissionForUser422Response": [Function],
  "getProjectsListCards200Response": [Function],
  "getProjectsListCards401Response": [Function],
  "getProjectsListCards403Response": [Function],
  "getProjectsListCollaborators200Response": [Function],
  "getProjectsListCollaborators401Response": [Function],
  "getProjectsListCollaborators403Response": [Function],
  "getProjectsListCollaborators404Response": [Function],
  "getProjectsListCollaborators422Response": [Function],
  "getProjectsListColumns200Response": [Function],
  "getProjectsListColumns401Response": [Function],
  "getProjectsListColumns403Response": [Function],
  "getProjectsListForOrg200Response": [Function],
  "getProjectsListForOrg422Response": [Function],
  "getProjectsListForRepo200Response": [Function],
  "getProjectsListForRepo401Response": [Function],
  "getProjectsListForRepo403Response": [Function],
  "getProjectsListForRepo404Response": [Function],
  "getProjectsListForRepo410Response": [Function],
  "getProjectsListForRepo422Response": [Function],
  "getProjectsListForUser200Response": [Function],
  "getProjectsListForUser422Response": [Function],
  "getProjectsMoveCard201Response": [Function],
  "getProjectsMoveCard401Response": [Function],
  "getProjectsMoveCard403Response": [Function],
  "getProjectsMoveCard422Response": [Function],
  "getProjectsMoveCard503Response": [Function],
  "getProjectsMoveColumn201Response": [Function],
  "getProjectsMoveColumn401Response": [Function],
  "getProjectsMoveColumn403Response": [Function],
  "getProjectsMoveColumn422Response": [Function],
  "getProjectsRemoveCollaborator401Response": [Function],
  "getProjectsRemoveCollaborator403Response": [Function],
  "getProjectsRemoveCollaborator404Response": [Function],
  "getProjectsRemoveCollaborator422Response": [Function],
  "getProjectsUpdate200Response": [Function],
  "getProjectsUpdate401Response": [Function],
  "getProjectsUpdate403Response": [Function],
  "getProjectsUpdate410Response": [Function],
  "getProjectsUpdate422Response": [Function],
  "getProjectsUpdateCard200Response": [Function],
  "getProjectsUpdateCard401Response": [Function],
  "getProjectsUpdateCard403Response": [Function],
  "getProjectsUpdateCard404Response": [Function],
  "getProjectsUpdateCard422Response": [Function],
  "getProjectsUpdateColumn200Response": [Function],
  "getProjectsUpdateColumn401Response": [Function],
  "getProjectsUpdateColumn403Response": [Function],
  "getPullsCreate201Response": [Function],
  "getPullsCreate403Response": [Function],
  "getPullsCreate422Response": [Function],
  "getPullsCreateReplyForReviewComment201Response": [Function],
  "getPullsCreateReplyForReviewComment404Response": [Function],
  "getPullsCreateReview200Response": [Function],
  "getPullsCreateReview403Response": [Function],
  "getPullsCreateReview422Response": [Function],
  "getPullsCreateReviewComment201Response": [Function],
  "getPullsCreateReviewComment403Response": [Function],
  "getPullsCreateReviewComment422Response": [Function],
  "getPullsDeletePendingReview200Response": [Function],
  "getPullsDeletePendingReview404Response": [Function],
  "getPullsDeletePendingReview422Response": [Function],
  "getPullsDeleteReviewComment404Response": [Function],
  "getPullsDismissReview200Response": [Function],
  "getPullsDismissReview404Response": [Function],
  "getPullsDismissReview422Response": [Function],
  "getPullsGet200Response": [Function],
  "getPullsGet404Response": [Function],
  "getPullsGet500Response": [Function],
  "getPullsGetReview200Response": [Function],
  "getPullsGetReview404Response": [Function],
  "getPullsGetReviewComment200Response": [Function],
  "getPullsGetReviewComment404Response": [Function],
  "getPullsList200Response": [Function],
  "getPullsList422Response": [Function],
  "getPullsListCommentsForReview200Response": [Function],
  "getPullsListCommentsForReview404Response": [Function],
  "getPullsListCommits200Response": [Function],
  "getPullsListFiles200Response": [Function],
  "getPullsListFiles422Response": [Function],
  "getPullsListFiles500Response": [Function],
  "getPullsListRequestedReviewers200Response": [Function],
  "getPullsListReviewComments200Response": [Function],
  "getPullsListReviewCommentsForRepo200Response": [Function],
  "getPullsListReviews200Response": [Function],
  "getPullsMerge200Response": [Function],
  "getPullsMerge403Response": [Function],
  "getPullsMerge404Response": [Function],
  "getPullsMerge405Response": [Function],
  "getPullsMerge409Response": [Function],
  "getPullsMerge422Response": [Function],
  "getPullsRemoveRequestedReviewers200Response": [Function],
  "getPullsRemoveRequestedReviewers422Response": [Function],
  "getPullsRequestReviewers201Response": [Function],
  "getPullsRequestReviewers403Response": [Function],
  "getPullsSubmitReview200Response": [Function],
  "getPullsSubmitReview403Response": [Function],
  "getPullsSubmitReview404Response": [Function],
  "getPullsSubmitReview422Response": [Function],
  "getPullsUpdate200Response": [Function],
  "getPullsUpdate403Response": [Function],
  "getPullsUpdate422Response": [Function],
  "getPullsUpdateBranch202Response": [Function],
  "getPullsUpdateBranch403Response": [Function],
  "getPullsUpdateBranch422Response": [Function],
  "getPullsUpdateReview200Response": [Function],
  "getPullsUpdateReview422Response": [Function],
  "getPullsUpdateReviewComment200Response": [Function],
  "getRateLimitGet200Response": [Function],
  "getRateLimitGet404Response": [Function],
  "getReactionsCreateForCommitComment200Response": [Function],
  "getReactionsCreateForCommitComment201Response": [Function],
  "getReactionsCreateForCommitComment415Response": [Function],
  "getReactionsCreateForCommitComment422Response": [Function],
  "getReactionsCreateForIssue200Response": [Function],
  "getReactionsCreateForIssue201Response": [Function],
  "getReactionsCreateForIssue422Response": [Function],
  "getReactionsCreateForIssueComment200Response": [Function],
  "getReactionsCreateForIssueComment201Response": [Function],
  "getReactionsCreateForIssueComment422Response": [Function],
  "getReactionsCreateForPullRequestReviewComment200Response": [Function],
  "getReactionsCreateForPullRequestReviewComment201Response": [Function],
  "getReactionsCreateForPullRequestReviewComment422Response": [Function],
  "getReactionsCreateForRelease200Response": [Function],
  "getReactionsCreateForRelease201Response": [Function],
  "getReactionsCreateForRelease422Response": [Function],
  "getReactionsCreateForTeamDiscussionCommentInOrg200Response": [Function],
  "getReactionsCreateForTeamDiscussionCommentInOrg201Response": [Function],
  "getReactionsCreateForTeamDiscussionCommentLegacy201Response": [Function],
  "getReactionsCreateForTeamDiscussionInOrg200Response": [Function],
  "getReactionsCreateForTeamDiscussionInOrg201Response": [Function],
  "getReactionsCreateForTeamDiscussionLegacy201Response": [Function],
  "getReactionsDeleteLegacy401Response": [Function],
  "getReactionsDeleteLegacy403Response": [Function],
  "getReactionsDeleteLegacy410Response": [Function],
  "getReactionsListForCommitComment200Response": [Function],
  "getReactionsListForCommitComment404Response": [Function],
  "getReactionsListForIssue200Response": [Function],
  "getReactionsListForIssue404Response": [Function],
  "getReactionsListForIssue410Response": [Function],
  "getReactionsListForIssueComment200Response": [Function],
  "getReactionsListForIssueComment404Response": [Function],
  "getReactionsListForPullRequestReviewComment200Response": [Function],
  "getReactionsListForPullRequestReviewComment404Response": [Function],
  "getReactionsListForTeamDiscussionCommentInOrg200Response": [Function],
  "getReactionsListForTeamDiscussionCommentLegacy200Response": [Function],
  "getReactionsListForTeamDiscussionInOrg200Response": [Function],
  "getReactionsListForTeamDiscussionLegacy200Response": [Function],
  "getReposAcceptInvitationForAuthenticatedUser403Response": [Function],
  "getReposAcceptInvitationForAuthenticatedUser404Response": [Function],
  "getReposAcceptInvitationForAuthenticatedUser409Response": [Function],
  "getReposAddAppAccessRestrictions200Response": [Function],
  "getReposAddAppAccessRestrictions422Response": [Function],
  "getReposAddCollaborator201Response": [Function],
  "getReposAddCollaborator403Response": [Function],
  "getReposAddCollaborator422Response": [Function],
  "getReposAddStatusCheckContexts200Response": [Function],
  "getReposAddStatusCheckContexts403Response": [Function],
  "getReposAddStatusCheckContexts404Response": [Function],
  "getReposAddStatusCheckContexts422Response": [Function],
  "getReposAddTeamAccessRestrictions200Response": [Function],
  "getReposAddTeamAccessRestrictions422Response": [Function],
  "getReposAddUserAccessRestrictions200Response": [Function],
  "getReposAddUserAccessRestrictions422Response": [Function],
  "getReposCompareCommits200Response": [Function],
  "getReposCompareCommits404Response": [Function],
  "getReposCompareCommits500Response": [Function],
  "getReposCreateAutolink201Response": [Function],
  "getReposCreateAutolink422Response": [Function],
  "getReposCreateCommitComment201Response": [Function],
  "getReposCreateCommitComment403Response": [Function],
  "getReposCreateCommitComment422Response": [Function],
  "getReposCreateCommitSignatureProtection200Response": [Function],
  "getReposCreateCommitSignatureProtection404Response": [Function],
  "getReposCreateCommitStatus201Response": [Function],
  "getReposCreateDeployKey201Response": [Function],
  "getReposCreateDeployKey422Response": [Function],
  "getReposCreateDeployment201Response": [Function],
  "getReposCreateDeployment202Response": [Function],
  "getReposCreateDeployment422Response": [Function],
  "getReposCreateDeploymentStatus201Response": [Function],
  "getReposCreateDeploymentStatus422Response": [Function],
  "getReposCreateDispatchEvent422Response": [Function],
  "getReposCreateForAuthenticatedUser201Response": [Function],
  "getReposCreateForAuthenticatedUser400Response": [Function],
  "getReposCreateForAuthenticatedUser401Response": [Function],
  "getReposCreateForAuthenticatedUser403Response": [Function],
  "getReposCreateForAuthenticatedUser404Response": [Function],
  "getReposCreateForAuthenticatedUser422Response": [Function],
  "getReposCreateFork202Response": [Function],
  "getReposCreateFork400Response": [Function],
  "getReposCreateFork403Response": [Function],
  "getReposCreateFork404Response": [Function],
  "getReposCreateFork422Response": [Function],
  "getReposCreateInOrg201Response": [Function],
  "getReposCreateInOrg403Response": [Function],
  "getReposCreateInOrg422Response": [Function],
  "getReposCreateOrUpdateEnvironment200Response": [Function],
  "getReposCreateOrUpdateEnvironment422Response": [Function],
  "getReposCreateOrUpdateFileContents200Response": [Function],
  "getReposCreateOrUpdateFileContents201Response": [Function],
  "getReposCreateOrUpdateFileContents404Response": [Function],
  "getReposCreateOrUpdateFileContents409Response": [Function],
  "getReposCreateOrUpdateFileContents422Response": [Function],
  "getReposCreatePagesSite201Response": [Function],
  "getReposCreatePagesSite409Response": [Function],
  "getReposCreatePagesSite422Response": [Function],
  "getReposCreateRelease201Response": [Function],
  "getReposCreateRelease422Response": [Function],
  "getReposCreateUsingTemplate201Response": [Function],
  "getReposCreateWebhook201Response": [Function],
  "getReposCreateWebhook403Response": [Function],
  "getReposCreateWebhook404Response": [Function],
  "getReposCreateWebhook422Response": [Function],
  "getReposDeclineInvitationForAuthenticatedUser403Response": [Function],
  "getReposDeclineInvitationForAuthenticatedUser404Response": [Function],
  "getReposDeclineInvitationForAuthenticatedUser409Response": [Function],
  "getReposDelete307Response": [Function],
  "getReposDelete403Response": [Function],
  "getReposDelete404Response": [Function],
  "getReposDeleteAdminBranchProtection404Response": [Function],
  "getReposDeleteAutolink404Response": [Function],
  "getReposDeleteBranchProtection403Response": [Function],
  "getReposDeleteCommitComment404Response": [Function],
  "getReposDeleteCommitSignatureProtection404Response": [Function],
  "getReposDeleteDeployment404Response": [Function],
  "getReposDeleteDeployment422Response": [Function],
  "getReposDeleteFile200Response": [Function],
  "getReposDeleteFile404Response": [Function],
  "getReposDeleteFile409Response": [Function],
  "getReposDeleteFile422Response": [Function],
  "getReposDeleteFile503Response": [Function],
  "getReposDeletePagesSite404Response": [Function],
  "getReposDeletePagesSite422Response": [Function],
  "getReposDeletePullRequestReviewProtection404Response": [Function],
  "getReposDeleteWebhook404Response": [Function],
  "getReposEnableLfsForRepo202Response": [Function],
  "getReposGenerateReleaseNotes200Response": [Function],
  "getReposGenerateReleaseNotes404Response": [Function],
  "getReposGet200Response": [Function],
  "getReposGet301Response": [Function],
  "getReposGet403Response": [Function],
  "getReposGet404Response": [Function],
  "getReposGetAccessRestrictions200Response": [Function],
  "getReposGetAccessRestrictions404Response": [Function],
  "getReposGetAdminBranchProtection200Response": [Function],
  "getReposGetAllEnvironments200Response": [Function],
  "getReposGetAllStatusCheckContexts200Response": [Function],
  "getReposGetAllStatusCheckContexts404Response": [Function],
  "getReposGetAllTopics200Response": [Function],
  "getReposGetAllTopics404Response": [Function],
  "getReposGetAppsWithAccessToProtectedBranch200Response": [Function],
  "getReposGetAppsWithAccessToProtectedBranch404Response": [Function],
  "getReposGetAutolink200Response": [Function],
  "getReposGetAutolink404Response": [Function],
  "getReposGetBranch200Response": [Function],
  "getReposGetBranch301Response": [Function],
  "getReposGetBranch404Response": [Function],
  "getReposGetBranch415Response": [Function],
  "getReposGetBranchProtection200Response": [Function],
  "getReposGetBranchProtection404Response": [Function],
  "getReposGetCodeFrequencyStats200Response": [Function],
  "getReposGetCodeFrequencyStats202Response": [Function],
  "getReposGetCollaboratorPermissionLevel200Response": [Function],
  "getReposGetCollaboratorPermissionLevel404Response": [Function],
  "getReposGetCombinedStatusForRef200Response": [Function],
  "getReposGetCombinedStatusForRef404Response": [Function],
  "getReposGetCommit200Response": [Function],
  "getReposGetCommit404Response": [Function],
  "getReposGetCommit422Response": [Function],
  "getReposGetCommit500Response": [Function],
  "getReposGetCommitActivityStats200Response": [Function],
  "getReposGetCommitActivityStats202Response": [Function],
  "getReposGetCommitComment200Response": [Function],
  "getReposGetCommitComment404Response": [Function],
  "getReposGetCommitSignatureProtection200Response": [Function],
  "getReposGetCommitSignatureProtection404Response": [Function],
  "getReposGetContent200Response": [Function],
  "getReposGetContent403Response": [Function],
  "getReposGetContent404Response": [Function],
  "getReposGetContributorsStats200Response": [Function],
  "getReposGetContributorsStats202Response": [Function],
  "getReposGetDeployKey200Response": [Function],
  "getReposGetDeployKey404Response": [Function],
  "getReposGetDeployment200Response": [Function],
  "getReposGetDeployment404Response": [Function],
  "getReposGetDeploymentStatus200Response": [Function],
  "getReposGetDeploymentStatus404Response": [Function],
  "getReposGetEnvironment200Response": [Function],
  "getReposGetLatestPagesBuild200Response": [Function],
  "getReposGetLatestRelease200Response": [Function],
  "getReposGetPages200Response": [Function],
  "getReposGetPages404Response": [Function],
  "getReposGetPagesBuild200Response": [Function],
  "getReposGetParticipationStats200Response": [Function],
  "getReposGetParticipationStats404Response": [Function],
  "getReposGetPullRequestReviewProtection200Response": [Function],
  "getReposGetPunchCardStats200Response": [Function],
  "getReposGetReadme200Response": [Function],
  "getReposGetReadme404Response": [Function],
  "getReposGetReadme422Response": [Function],
  "getReposGetReadmeInDirectory200Response": [Function],
  "getReposGetReadmeInDirectory404Response": [Function],
  "getReposGetReadmeInDirectory422Response": [Function],
  "getReposGetRelease200Response": [Function],
  "getReposGetRelease404Response": [Function],
  "getReposGetReleaseAsset200Response": [Function],
  "getReposGetReleaseAsset404Response": [Function],
  "getReposGetReleaseAsset415Response": [Function],
  "getReposGetReleaseByTag200Response": [Function],
  "getReposGetReleaseByTag404Response": [Function],
  "getReposGetStatusChecksProtection200Response": [Function],
  "getReposGetStatusChecksProtection404Response": [Function],
  "getReposGetTeamsWithAccessToProtectedBranch200Response": [Function],
  "getReposGetTeamsWithAccessToProtectedBranch404Response": [Function],
  "getReposGetUsersWithAccessToProtectedBranch200Response": [Function],
  "getReposGetUsersWithAccessToProtectedBranch404Response": [Function],
  "getReposGetWebhook200Response": [Function],
  "getReposGetWebhook404Response": [Function],
  "getReposGetWebhookConfigForRepo200Response": [Function],
  "getReposGetWebhookDelivery200Response": [Function],
  "getReposGetWebhookDelivery400Response": [Function],
  "getReposGetWebhookDelivery422Response": [Function],
  "getReposListAutolinks200Response": [Function],
  "getReposListBranches200Response": [Function],
  "getReposListBranches404Response": [Function],
  "getReposListBranchesForHeadCommit200Response": [Function],
  "getReposListBranchesForHeadCommit422Response": [Function],
  "getReposListCollaborators200Response": [Function],
  "getReposListCollaborators404Response": [Function],
  "getReposListCommentsForCommit200Response": [Function],
  "getReposListCommitCommentsForRepo200Response": [Function],
  "getReposListCommitStatusesForRef200Response": [Function],
  "getReposListCommitStatusesForRef301Response": [Function],
  "getReposListCommits200Response": [Function],
  "getReposListCommits400Response": [Function],
  "getReposListCommits404Response": [Function],
  "getReposListCommits409Response": [Function],
  "getReposListCommits500Response": [Function],
  "getReposListContributors200Response": [Function],
  "getReposListContributors403Response": [Function],
  "getReposListContributors404Response": [Function],
  "getReposListDeployKeys200Response": [Function],
  "getReposListDeploymentStatuses200Response": [Function],
  "getReposListDeploymentStatuses404Response": [Function],
  "getReposListDeployments200Response": [Function],
  "getReposListForAuthenticatedUser200Response": [Function],
  "getReposListForAuthenticatedUser401Response": [Function],
  "getReposListForAuthenticatedUser403Response": [Function],
  "getReposListForAuthenticatedUser422Response": [Function],
  "getReposListForOrg200Response": [Function],
  "getReposListForUser200Response": [Function],
  "getReposListForks200Response": [Function],
  "getReposListForks400Response": [Function],
  "getReposListInvitations200Response": [Function],
  "getReposListInvitationsForAuthenticatedUser200Response": [Function],
  "getReposListInvitationsForAuthenticatedUser401Response": [Function],
  "getReposListInvitationsForAuthenticatedUser403Response": [Function],
  "getReposListInvitationsForAuthenticatedUser404Response": [Function],
  "getReposListLanguages200Response": [Function],
  "getReposListPagesBuilds200Response": [Function],
  "getReposListPublic200Response": [Function],
  "getReposListPublic422Response": [Function],
  "getReposListPullRequestsAssociatedWithCommit200Response": [Function],
  "getReposListReleaseAssets200Response": [Function],
  "getReposListReleases200Response": [Function],
  "getReposListReleases404Response": [Function],
  "getReposListTags200Response": [Function],
  "getReposListTeams200Response": [Function],
  "getReposListWebhookDeliveries200Response": [Function],
  "getReposListWebhookDeliveries400Response": [Function],
  "getReposListWebhookDeliveries422Response": [Function],
  "getReposListWebhooks200Response": [Function],
  "getReposListWebhooks404Response": [Function],
  "getReposMerge201Response": [Function],
  "getReposMerge403Response": [Function],
  "getReposMerge422Response": [Function],
  "getReposMergeUpstream200Response": [Function],
  "getReposPingWebhook404Response": [Function],
  "getReposRedeliverWebhookDelivery202Response": [Function],
  "getReposRedeliverWebhookDelivery400Response": [Function],
  "getReposRedeliverWebhookDelivery422Response": [Function],
  "getReposRemoveAppAccessRestrictions200Response": [Function],
  "getReposRemoveAppAccessRestrictions422Response": [Function],
  "getReposRemoveStatusCheckContexts200Response": [Function],
  "getReposRemoveStatusCheckContexts404Response": [Function],
  "getReposRemoveStatusCheckContexts422Response": [Function],
  "getReposRemoveTeamAccessRestrictions200Response": [Function],
  "getReposRemoveTeamAccessRestrictions422Response": [Function],
  "getReposRemoveUserAccessRestrictions200Response": [Function],
  "getReposRemoveUserAccessRestrictions422Response": [Function],
  "getReposRenameBranch201Response": [Function],
  "getReposRenameBranch403Response": [Function],
  "getReposRenameBranch404Response": [Function],
  "getReposRenameBranch422Response": [Function],
  "getReposReplaceAllTopics200Response": [Function],
  "getReposReplaceAllTopics404Response": [Function],
  "getReposReplaceAllTopics422Response": [Function],
  "getReposRequestPagesBuild201Response": [Function],
  "getReposSetAdminBranchProtection200Response": [Function],
  "getReposSetAppAccessRestrictions200Response": [Function],
  "getReposSetAppAccessRestrictions422Response": [Function],
  "getReposSetStatusCheckContexts200Response": [Function],
  "getReposSetStatusCheckContexts404Response": [Function],
  "getReposSetStatusCheckContexts422Response": [Function],
  "getReposSetTeamAccessRestrictions200Response": [Function],
  "getReposSetTeamAccessRestrictions422Response": [Function],
  "getReposSetUserAccessRestrictions200Response": [Function],
  "getReposSetUserAccessRestrictions422Response": [Function],
  "getReposTestPushWebhook404Response": [Function],
  "getReposTransfer202Response": [Function],
  "getReposUpdate200Response": [Function],
  "getReposUpdate307Response": [Function],
  "getReposUpdate403Response": [Function],
  "getReposUpdate404Response": [Function],
  "getReposUpdate422Response": [Function],
  "getReposUpdateBranchProtection200Response": [Function],
  "getReposUpdateBranchProtection403Response": [Function],
  "getReposUpdateBranchProtection404Response": [Function],
  "getReposUpdateBranchProtection422Response": [Function],
  "getReposUpdateCommitComment200Response": [Function],
  "getReposUpdateCommitComment404Response": [Function],
  "getReposUpdateInformationAboutPagesSite400Response": [Function],
  "getReposUpdateInformationAboutPagesSite422Response": [Function],
  "getReposUpdateInvitation200Response": [Function],
  "getReposUpdatePullRequestReviewProtection200Response": [Function],
  "getReposUpdatePullRequestReviewProtection422Response": [Function],
  "getReposUpdateRelease200Response": [Function],
  "getReposUpdateReleaseAsset200Response": [Function],
  "getReposUpdateStatusCheckProtection200Response": [Function],
  "getReposUpdateStatusCheckProtection404Response": [Function],
  "getReposUpdateStatusCheckProtection422Response": [Function],
  "getReposUpdateWebhook200Response": [Function],
  "getReposUpdateWebhook404Response": [Function],
  "getReposUpdateWebhook422Response": [Function],
  "getReposUpdateWebhookConfigForRepo200Response": [Function],
  "getReposUploadReleaseAsset201Response": [Function],
  "getSearchCode200Response": [Function],
  "getSearchCode403Response": [Function],
  "getSearchCode422Response": [Function],
  "getSearchCode503Response": [Function],
  "getSearchCommits200Response": [Function],
  "getSearchIssuesAndPullRequests200Response": [Function],
  "getSearchIssuesAndPullRequests403Response": [Function],
  "getSearchIssuesAndPullRequests422Response": [Function],
  "getSearchIssuesAndPullRequests503Response": [Function],
  "getSearchLabels200Response": [Function],
  "getSearchLabels403Response": [Function],
  "getSearchLabels404Response": [Function],
  "getSearchLabels422Response": [Function],
  "getSearchRepos200Response": [Function],
  "getSearchRepos422Response": [Function],
  "getSearchRepos503Response": [Function],
  "getSearchTopics200Response": [Function],
  "getSearchUsers200Response": [Function],
  "getSearchUsers422Response": [Function],
  "getSearchUsers503Response": [Function],
  "getSecretScanningGetAlert200Response": [Function],
  "getSecretScanningGetAlert503Response": [Function],
  "getSecretScanningListAlertsForOrg200Response": [Function],
  "getSecretScanningListAlertsForOrg404Response": [Function],
  "getSecretScanningListAlertsForOrg503Response": [Function],
  "getSecretScanningListAlertsForRepo200Response": [Function],
  "getSecretScanningListAlertsForRepo503Response": [Function],
  "getSecretScanningListLocationsForAlert200Response": [Function],
  "getSecretScanningListLocationsForAlert503Response": [Function],
  "getSecretScanningUpdateAlert200Response": [Function],
  "getSecretScanningUpdateAlert503Response": [Function],
  "getTeamsAddMemberLegacy403Response": [Function],
  "getTeamsAddOrUpdateMembershipForUserInOrg200Response": [Function],
  "getTeamsAddOrUpdateMembershipForUserLegacy200Response": [Function],
  "getTeamsAddOrUpdateMembershipForUserLegacy404Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsInOrg403Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsLegacy403Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsLegacy404Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsLegacy422Response": [Function],
  "getTeamsAddOrUpdateRepoPermissionsLegacy403Response": [Function],
  "getTeamsAddOrUpdateRepoPermissionsLegacy422Response": [Function],
  "getTeamsCheckPermissionsForProjectInOrg200Response": [Function],
  "getTeamsCheckPermissionsForProjectLegacy200Response": [Function],
  "getTeamsCheckPermissionsForRepoInOrg200Response": [Function],
  "getTeamsCheckPermissionsForRepoLegacy200Response": [Function],
  "getTeamsCreate201Response": [Function],
  "getTeamsCreate403Response": [Function],
  "getTeamsCreate422Response": [Function],
  "getTeamsCreateDiscussionCommentInOrg201Response": [Function],
  "getTeamsCreateDiscussionCommentLegacy201Response": [Function],
  "getTeamsCreateDiscussionInOrg201Response": [Function],
  "getTeamsCreateDiscussionLegacy201Response": [Function],
  "getTeamsDeleteLegacy404Response": [Function],
  "getTeamsDeleteLegacy422Response": [Function],
  "getTeamsGetByName200Response": [Function],
  "getTeamsGetByName404Response": [Function],
  "getTeamsGetDiscussionCommentInOrg200Response": [Function],
  "getTeamsGetDiscussionCommentLegacy200Response": [Function],
  "getTeamsGetDiscussionInOrg200Response": [Function],
  "getTeamsGetDiscussionLegacy200Response": [Function],
  "getTeamsGetLegacy200Response": [Function],
  "getTeamsGetLegacy404Response": [Function],
  "getTeamsGetMembershipForUserInOrg200Response": [Function],
  "getTeamsGetMembershipForUserLegacy200Response": [Function],
  "getTeamsGetMembershipForUserLegacy404Response": [Function],
  "getTeamsList200Response": [Function],
  "getTeamsList403Response": [Function],
  "getTeamsListChildInOrg200Response": [Function],
  "getTeamsListChildLegacy200Response": [Function],
  "getTeamsListChildLegacy403Response": [Function],
  "getTeamsListChildLegacy404Response": [Function],
  "getTeamsListChildLegacy422Response": [Function],
  "getTeamsListDiscussionCommentsInOrg200Response": [Function],
  "getTeamsListDiscussionCommentsLegacy200Response": [Function],
  "getTeamsListDiscussionsInOrg200Response": [Function],
  "getTeamsListDiscussionsLegacy200Response": [Function],
  "getTeamsListForAuthenticatedUser200Response": [Function],
  "getTeamsListForAuthenticatedUser403Response": [Function],
  "getTeamsListForAuthenticatedUser404Response": [Function],
  "getTeamsListMembersInOrg200Response": [Function],
  "getTeamsListMembersLegacy200Response": [Function],
  "getTeamsListMembersLegacy404Response": [Function],
  "getTeamsListProjectsInOrg200Response": [Function],
  "getTeamsListProjectsLegacy200Response": [Function],
  "getTeamsListProjectsLegacy404Response": [Function],
  "getTeamsListReposInOrg200Response": [Function],
  "getTeamsListReposLegacy200Response": [Function],
  "getTeamsListReposLegacy404Response": [Function],
  "getTeamsRemoveProjectLegacy404Response": [Function],
  "getTeamsRemoveProjectLegacy415Response": [Function],
  "getTeamsRemoveProjectLegacy422Response": [Function],
  "getTeamsUpdateDiscussionCommentInOrg200Response": [Function],
  "getTeamsUpdateDiscussionCommentLegacy200Response": [Function],
  "getTeamsUpdateDiscussionInOrg200Response": [Function],
  "getTeamsUpdateDiscussionLegacy200Response": [Function],
  "getTeamsUpdateInOrg201Response": [Function],
  "getTeamsUpdateLegacy200Response": [Function],
  "getTeamsUpdateLegacy201Response": [Function],
  "getTeamsUpdateLegacy403Response": [Function],
  "getTeamsUpdateLegacy404Response": [Function],
  "getTeamsUpdateLegacy422Response": [Function],
  "getUsersAddEmailForAuthenticatedUser201Response": [Function],
  "getUsersAddEmailForAuthenticatedUser401Response": [Function],
  "getUsersAddEmailForAuthenticatedUser403Response": [Function],
  "getUsersAddEmailForAuthenticatedUser404Response": [Function],
  "getUsersAddEmailForAuthenticatedUser422Response": [Function],
  "getUsersCheckPersonIsFollowedByAuthenticated401Response": [Function],
  "getUsersCheckPersonIsFollowedByAuthenticated403Response": [Function],
  "getUsersCheckPersonIsFollowedByAuthenticated404Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser201Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser401Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser403Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser404Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser422Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser201Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser401Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser403Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser404Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser422Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser401Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser403Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser404Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser422Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser401Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser403Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser404Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser422Response": [Function],
  "getUsersDeletePublicSshKeyForAuthenticatedUser401Response": [Function],
  "getUsersDeletePublicSshKeyForAuthenticatedUser403Response": [Function],
  "getUsersDeletePublicSshKeyForAuthenticatedUser404Response": [Function],
  "getUsersFollow401Response": [Function],
  "getUsersFollow403Response": [Function],
  "getUsersFollow404Response": [Function],
  "getUsersGetAuthenticated200Response": [Function],
  "getUsersGetAuthenticated401Response": [Function],
  "getUsersGetAuthenticated403Response": [Function],
  "getUsersGetByUsername200Response": [Function],
  "getUsersGetByUsername404Response": [Function],
  "getUsersGetContextForUser200Response": [Function],
  "getUsersGetContextForUser404Response": [Function],
  "getUsersGetContextForUser422Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser200Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser401Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser403Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser404Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser200Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser401Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser403Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser404Response": [Function],
  "getUsersList200Response": [Function],
  "getUsersListEmailsForAuthenticatedUser200Response": [Function],
  "getUsersListEmailsForAuthenticatedUser401Response": [Function],
  "getUsersListEmailsForAuthenticatedUser403Response": [Function],
  "getUsersListEmailsForAuthenticatedUser404Response": [Function],
  "getUsersListFollowedByAuthenticatedUser200Response": [Function],
  "getUsersListFollowedByAuthenticatedUser401Response": [Function],
  "getUsersListFollowedByAuthenticatedUser403Response": [Function],
  "getUsersListFollowersForAuthenticatedUser200Response": [Function],
  "getUsersListFollowersForAuthenticatedUser401Response": [Function],
  "getUsersListFollowersForAuthenticatedUser403Response": [Function],
  "getUsersListFollowersForUser200Response": [Function],
  "getUsersListFollowingForUser200Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser200Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser401Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser403Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser404Response": [Function],
  "getUsersListGpgKeysForUser200Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser200Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser401Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser403Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser404Response": [Function],
  "getUsersListPublicKeysForUser200Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser200Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser401Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser403Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser404Response": [Function],
  "getUsersUnfollow401Response": [Function],
  "getUsersUnfollow403Response": [Function],
  "getUsersUnfollow404Response": [Function],
  "getUsersUpdateAuthenticated200Response": [Function],
  "getUsersUpdateAuthenticated401Response": [Function],
  "getUsersUpdateAuthenticated403Response": [Function],
  "getUsersUpdateAuthenticated404Response": [Function],
  "getUsersUpdateAuthenticated422Response": [Function],
  "handlers": [
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:28:30",
        "header": "GET /",
        "method": "GET",
        "path": "/",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:33:30",
        "header": "GET /admin/hooks",
        "method": "GET",
        "path": "/admin/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:38:30",
        "header": "POST /admin/hooks",
        "method": "POST",
        "path": "/admin/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:43:30",
        "header": "GET /admin/hooks/:hookId",
        "method": "GET",
        "path": "/admin/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:48:30",
        "header": "PATCH /admin/hooks/:hookId",
        "method": "PATCH",
        "path": "/admin/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:53:36",
        "header": "DELETE /admin/hooks/:hookId",
        "method": "DELETE",
        "path": "/admin/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:58:30",
        "header": "POST /admin/hooks/:hookId/pings",
        "method": "POST",
        "path": "/admin/hooks/:hookId/pings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:63:30",
        "header": "GET /admin/keys",
        "method": "GET",
        "path": "/admin/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:68:36",
        "header": "DELETE /admin/keys/:keyIds",
        "method": "DELETE",
        "path": "/admin/keys/:keyIds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:73:30",
        "header": "PATCH /admin/ldap/teams/:teamId/mapping",
        "method": "PATCH",
        "path": "/admin/ldap/teams/:teamId/mapping",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:78:30",
        "header": "POST /admin/ldap/teams/:teamId/sync",
        "method": "POST",
        "path": "/admin/ldap/teams/:teamId/sync",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:83:30",
        "header": "PATCH /admin/ldap/users/:username/mapping",
        "method": "PATCH",
        "path": "/admin/ldap/users/:username/mapping",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:88:30",
        "header": "POST /admin/ldap/users/:username/sync",
        "method": "POST",
        "path": "/admin/ldap/users/:username/sync",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:93:30",
        "header": "POST /admin/organizations",
        "method": "POST",
        "path": "/admin/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:98:30",
        "header": "PATCH /admin/organizations/:org",
        "method": "PATCH",
        "path": "/admin/organizations/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:103:30",
        "header": "GET /admin/pre-receive-environments",
        "method": "GET",
        "path": "/admin/pre-receive-environments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:108:30",
        "header": "POST /admin/pre-receive-environments",
        "method": "POST",
        "path": "/admin/pre-receive-environments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:113:30",
        "header": "GET /admin/pre-receive-environments/:preReceiveEnvironmentId",
        "method": "GET",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:118:30",
        "header": "PATCH /admin/pre-receive-environments/:preReceiveEnvironmentId",
        "method": "PATCH",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:126:36",
        "header": "DELETE /admin/pre-receive-environments/:preReceiveEnvironmentId",
        "method": "DELETE",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:134:30",
        "header": "POST /admin/pre-receive-environments/:preReceiveEnvironmentId/downloads",
        "method": "POST",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:142:30",
        "header": "GET /admin/pre-receive-environments/:preReceiveEnvironmentId/downloads/latest",
        "method": "GET",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId/downloads/latest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:147:30",
        "header": "GET /admin/pre-receive-hooks",
        "method": "GET",
        "path": "/admin/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:152:30",
        "header": "POST /admin/pre-receive-hooks",
        "method": "POST",
        "path": "/admin/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:157:30",
        "header": "GET /admin/pre-receive-hooks/:preReceiveHookId",
        "method": "GET",
        "path": "/admin/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:162:30",
        "header": "PATCH /admin/pre-receive-hooks/:preReceiveHookId",
        "method": "PATCH",
        "path": "/admin/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:167:36",
        "header": "DELETE /admin/pre-receive-hooks/:preReceiveHookId",
        "method": "DELETE",
        "path": "/admin/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:172:30",
        "header": "GET /admin/tokens",
        "method": "GET",
        "path": "/admin/tokens",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:177:36",
        "header": "DELETE /admin/tokens/:tokenId",
        "method": "DELETE",
        "path": "/admin/tokens/:tokenId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:182:30",
        "header": "POST /admin/users",
        "method": "POST",
        "path": "/admin/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:187:30",
        "header": "PATCH /admin/users/:username",
        "method": "PATCH",
        "path": "/admin/users/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:192:36",
        "header": "DELETE /admin/users/:username",
        "method": "DELETE",
        "path": "/admin/users/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:197:30",
        "header": "POST /admin/users/:username/authorizations",
        "method": "POST",
        "path": "/admin/users/:username/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:202:36",
        "header": "DELETE /admin/users/:username/authorizations",
        "method": "DELETE",
        "path": "/admin/users/:username/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:207:30",
        "header": "GET /app",
        "method": "GET",
        "path": "/app",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:212:30",
        "header": "POST /app-manifests/:code/conversions",
        "method": "POST",
        "path": "/app-manifests/:code/conversions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:221:30",
        "header": "GET /app/hook/config",
        "method": "GET",
        "path": "/app/hook/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:226:30",
        "header": "PATCH /app/hook/config",
        "method": "PATCH",
        "path": "/app/hook/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:231:30",
        "header": "GET /app/hook/deliveries",
        "method": "GET",
        "path": "/app/hook/deliveries",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:240:30",
        "header": "GET /app/hook/deliveries/:deliveryId",
        "method": "GET",
        "path": "/app/hook/deliveries/:deliveryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:249:30",
        "header": "POST /app/hook/deliveries/:deliveryId/attempts",
        "method": "POST",
        "path": "/app/hook/deliveries/:deliveryId/attempts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:258:30",
        "header": "GET /app/installations",
        "method": "GET",
        "path": "/app/installations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:263:30",
        "header": "GET /app/installations/:installationId",
        "method": "GET",
        "path": "/app/installations/:installationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:272:36",
        "header": "DELETE /app/installations/:installationId",
        "method": "DELETE",
        "path": "/app/installations/:installationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:280:30",
        "header": "POST /app/installations/:installationId/access_tokens",
        "method": "POST",
        "path": "/app/installations/:installationId/access_tokens",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:292:30",
        "header": "PUT /app/installations/:installationId/suspended",
        "method": "PUT",
        "path": "/app/installations/:installationId/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:300:36",
        "header": "DELETE /app/installations/:installationId/suspended",
        "method": "DELETE",
        "path": "/app/installations/:installationId/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:308:30",
        "header": "GET /applications/grants",
        "method": "GET",
        "path": "/applications/grants",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:319:30",
        "header": "GET /applications/grants/:grantId",
        "method": "GET",
        "path": "/applications/grants/:grantId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:329:36",
        "header": "DELETE /applications/grants/:grantId",
        "method": "DELETE",
        "path": "/applications/grants/:grantId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:339:36",
        "header": "DELETE /applications/:clientId/grant",
        "method": "DELETE",
        "path": "/applications/:clientId/grant",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:347:36",
        "header": "DELETE /applications/:clientId/grants/:accessToken",
        "method": "DELETE",
        "path": "/applications/:clientId/grants/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:352:30",
        "header": "POST /applications/:clientId/token",
        "method": "POST",
        "path": "/applications/:clientId/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:361:30",
        "header": "PATCH /applications/:clientId/token",
        "method": "PATCH",
        "path": "/applications/:clientId/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:369:36",
        "header": "DELETE /applications/:clientId/token",
        "method": "DELETE",
        "path": "/applications/:clientId/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:377:30",
        "header": "POST /applications/:clientId/token/scoped",
        "method": "POST",
        "path": "/applications/:clientId/token/scoped",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:388:30",
        "header": "GET /applications/:clientId/tokens/:accessToken",
        "method": "GET",
        "path": "/applications/:clientId/tokens/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:396:30",
        "header": "POST /applications/:clientId/tokens/:accessToken",
        "method": "POST",
        "path": "/applications/:clientId/tokens/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:401:36",
        "header": "DELETE /applications/:clientId/tokens/:accessToken",
        "method": "DELETE",
        "path": "/applications/:clientId/tokens/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:406:30",
        "header": "GET /apps/:appSlug",
        "method": "GET",
        "path": "/apps/:appSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:416:30",
        "header": "GET /authorizations",
        "method": "GET",
        "path": "/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:427:30",
        "header": "POST /authorizations",
        "method": "POST",
        "path": "/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:439:30",
        "header": "PUT /authorizations/clients/:clientId",
        "method": "PUT",
        "path": "/authorizations/clients/:clientId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:451:30",
        "header": "PUT /authorizations/clients/:clientId/:fingerprint",
        "method": "PUT",
        "path": "/authorizations/clients/:clientId/:fingerprint",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:460:30",
        "header": "GET /authorizations/:authorizationId",
        "method": "GET",
        "path": "/authorizations/:authorizationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:470:30",
        "header": "PATCH /authorizations/:authorizationId",
        "method": "PATCH",
        "path": "/authorizations/:authorizationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:478:36",
        "header": "DELETE /authorizations/:authorizationId",
        "method": "DELETE",
        "path": "/authorizations/:authorizationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:488:30",
        "header": "GET /codes_of_conduct",
        "method": "GET",
        "path": "/codes_of_conduct",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:496:30",
        "header": "GET /codes_of_conduct/:key",
        "method": "GET",
        "path": "/codes_of_conduct/:key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:505:30",
        "header": "GET /emojis",
        "method": "GET",
        "path": "/emojis",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:513:30",
        "header": "GET /enterprise/announcement",
        "method": "GET",
        "path": "/enterprise/announcement",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:518:30",
        "header": "PATCH /enterprise/announcement",
        "method": "PATCH",
        "path": "/enterprise/announcement",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:523:36",
        "header": "DELETE /enterprise/announcement",
        "method": "DELETE",
        "path": "/enterprise/announcement",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:528:30",
        "header": "GET /enterprise/settings/license",
        "method": "GET",
        "path": "/enterprise/settings/license",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:533:30",
        "header": "GET /enterprise/stats/all",
        "method": "GET",
        "path": "/enterprise/stats/all",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:538:30",
        "header": "GET /enterprise/stats/comments",
        "method": "GET",
        "path": "/enterprise/stats/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:543:30",
        "header": "GET /enterprise/stats/gists",
        "method": "GET",
        "path": "/enterprise/stats/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:548:30",
        "header": "GET /enterprise/stats/hooks",
        "method": "GET",
        "path": "/enterprise/stats/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:553:30",
        "header": "GET /enterprise/stats/issues",
        "method": "GET",
        "path": "/enterprise/stats/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:558:30",
        "header": "GET /enterprise/stats/milestones",
        "method": "GET",
        "path": "/enterprise/stats/milestones",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:563:30",
        "header": "GET /enterprise/stats/orgs",
        "method": "GET",
        "path": "/enterprise/stats/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:568:30",
        "header": "GET /enterprise/stats/pages",
        "method": "GET",
        "path": "/enterprise/stats/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:573:30",
        "header": "GET /enterprise/stats/pulls",
        "method": "GET",
        "path": "/enterprise/stats/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:578:30",
        "header": "GET /enterprise/stats/repos",
        "method": "GET",
        "path": "/enterprise/stats/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:583:30",
        "header": "GET /enterprise/stats/users",
        "method": "GET",
        "path": "/enterprise/stats/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:588:30",
        "header": "GET /enterprises/:enterprise/actions/permissions",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:593:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:598:30",
        "header": "GET /enterprises/:enterprise/actions/permissions/organizations",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/permissions/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:605:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions/organizations",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:610:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions/organizations/:orgId",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:615:36",
        "header": "DELETE /enterprises/:enterprise/actions/permissions/organizations/:orgId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/permissions/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:620:30",
        "header": "GET /enterprises/:enterprise/actions/permissions/selected-actions",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:625:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions/selected-actions",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:630:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:635:30",
        "header": "POST /enterprises/:enterprise/actions/runner-groups",
        "method": "POST",
        "path": "/enterprises/:enterprise/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:640:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:645:30",
        "header": "PATCH /enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
        "method": "PATCH",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:650:36",
        "header": "DELETE /enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:655:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:662:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:667:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:672:36",
        "header": "DELETE /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:677:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:682:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:687:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:692:36",
        "header": "DELETE /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:697:30",
        "header": "GET /enterprises/:enterprise/actions/runners",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:702:30",
        "header": "GET /enterprises/:enterprise/actions/runners/downloads",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runners/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:707:30",
        "header": "POST /enterprises/:enterprise/actions/runners/registration-token",
        "method": "POST",
        "path": "/enterprises/:enterprise/actions/runners/registration-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:712:30",
        "header": "POST /enterprises/:enterprise/actions/runners/remove-token",
        "method": "POST",
        "path": "/enterprises/:enterprise/actions/runners/remove-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:717:30",
        "header": "GET /enterprises/:enterprise/actions/runners/:runnerId",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:722:36",
        "header": "DELETE /enterprises/:enterprise/actions/runners/:runnerId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:727:30",
        "header": "GET /enterprises/:enterprise/audit-log",
        "method": "GET",
        "path": "/enterprises/:enterprise/audit-log",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:732:30",
        "header": "GET /events",
        "method": "GET",
        "path": "/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:742:30",
        "header": "GET /feeds",
        "method": "GET",
        "path": "/feeds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:747:30",
        "header": "GET /gists",
        "method": "GET",
        "path": "/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:756:30",
        "header": "POST /gists",
        "method": "POST",
        "path": "/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:767:30",
        "header": "GET /gists/public",
        "method": "GET",
        "path": "/gists/public",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:777:30",
        "header": "GET /gists/starred",
        "method": "GET",
        "path": "/gists/starred",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:787:30",
        "header": "GET /gists/:gistId",
        "method": "GET",
        "path": "/gists/:gistId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:797:30",
        "header": "PATCH /gists/:gistId",
        "method": "PATCH",
        "path": "/gists/:gistId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:806:36",
        "header": "DELETE /gists/:gistId",
        "method": "DELETE",
        "path": "/gists/:gistId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:816:30",
        "header": "GET /gists/:gistId/comments",
        "method": "GET",
        "path": "/gists/:gistId/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:826:30",
        "header": "POST /gists/:gistId/comments",
        "method": "POST",
        "path": "/gists/:gistId/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:836:30",
        "header": "GET /gists/:gistId/comments/:commentId",
        "method": "GET",
        "path": "/gists/:gistId/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:846:30",
        "header": "PATCH /gists/:gistId/comments/:commentId",
        "method": "PATCH",
        "path": "/gists/:gistId/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:854:36",
        "header": "DELETE /gists/:gistId/comments/:commentId",
        "method": "DELETE",
        "path": "/gists/:gistId/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:864:30",
        "header": "GET /gists/:gistId/commits",
        "method": "GET",
        "path": "/gists/:gistId/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:874:30",
        "header": "GET /gists/:gistId/forks",
        "method": "GET",
        "path": "/gists/:gistId/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:884:30",
        "header": "POST /gists/:gistId/forks",
        "method": "POST",
        "path": "/gists/:gistId/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:895:30",
        "header": "GET /gists/:gistId/star",
        "method": "GET",
        "path": "/gists/:gistId/star",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:905:30",
        "header": "PUT /gists/:gistId/star",
        "method": "PUT",
        "path": "/gists/:gistId/star",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:915:36",
        "header": "DELETE /gists/:gistId/star",
        "method": "DELETE",
        "path": "/gists/:gistId/star",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:925:30",
        "header": "GET /gists/:gistId/:sha",
        "method": "GET",
        "path": "/gists/:gistId/:sha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:935:30",
        "header": "GET /gitignore/templates",
        "method": "GET",
        "path": "/gitignore/templates",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:943:30",
        "header": "GET /gitignore/templates/:name",
        "method": "GET",
        "path": "/gitignore/templates/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:951:30",
        "header": "GET /installation/repositories",
        "method": "GET",
        "path": "/installation/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:961:36",
        "header": "DELETE /installation/token",
        "method": "DELETE",
        "path": "/installation/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:966:30",
        "header": "GET /issues",
        "method": "GET",
        "path": "/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:976:30",
        "header": "GET /licenses",
        "method": "GET",
        "path": "/licenses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:984:30",
        "header": "GET /licenses/:license",
        "method": "GET",
        "path": "/licenses/:license",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:994:30",
        "header": "POST /markdown",
        "method": "POST",
        "path": "/markdown",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1002:30",
        "header": "POST /markdown/raw",
        "method": "POST",
        "path": "/markdown/raw",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1010:30",
        "header": "GET /meta",
        "method": "GET",
        "path": "/meta",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1018:30",
        "header": "GET /networks/:owner/:repo/events",
        "method": "GET",
        "path": "/networks/:owner/:repo/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1029:30",
        "header": "GET /notifications",
        "method": "GET",
        "path": "/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1040:30",
        "header": "PUT /notifications",
        "method": "PUT",
        "path": "/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1051:30",
        "header": "GET /notifications/threads/:threadId",
        "method": "GET",
        "path": "/notifications/threads/:threadId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1061:30",
        "header": "PATCH /notifications/threads/:threadId",
        "method": "PATCH",
        "path": "/notifications/threads/:threadId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1070:30",
        "header": "GET /notifications/threads/:threadId/subscription",
        "method": "GET",
        "path": "/notifications/threads/:threadId/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1080:30",
        "header": "PUT /notifications/threads/:threadId/subscription",
        "method": "PUT",
        "path": "/notifications/threads/:threadId/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1090:36",
        "header": "DELETE /notifications/threads/:threadId/subscription",
        "method": "DELETE",
        "path": "/notifications/threads/:threadId/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1100:30",
        "header": "GET /octocat",
        "method": "GET",
        "path": "/octocat",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1105:30",
        "header": "GET /organizations",
        "method": "GET",
        "path": "/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1113:30",
        "header": "GET /orgs/:org",
        "method": "GET",
        "path": "/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1121:30",
        "header": "PATCH /orgs/:org",
        "method": "PATCH",
        "path": "/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1130:30",
        "header": "GET /orgs/:org/actions/permissions",
        "method": "GET",
        "path": "/orgs/:org/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1135:30",
        "header": "PUT /orgs/:org/actions/permissions",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1140:30",
        "header": "GET /orgs/:org/actions/permissions/repositories",
        "method": "GET",
        "path": "/orgs/:org/actions/permissions/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1147:30",
        "header": "PUT /orgs/:org/actions/permissions/repositories",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1152:30",
        "header": "PUT /orgs/:org/actions/permissions/repositories/:repositoryId",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1157:36",
        "header": "DELETE /orgs/:org/actions/permissions/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/permissions/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1162:30",
        "header": "GET /orgs/:org/actions/permissions/selected-actions",
        "method": "GET",
        "path": "/orgs/:org/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1167:30",
        "header": "PUT /orgs/:org/actions/permissions/selected-actions",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1172:30",
        "header": "GET /orgs/:org/actions/runner-groups",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1177:30",
        "header": "POST /orgs/:org/actions/runner-groups",
        "method": "POST",
        "path": "/orgs/:org/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1182:30",
        "header": "GET /orgs/:org/actions/runner-groups/:runnerGroupId",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1187:30",
        "header": "PATCH /orgs/:org/actions/runner-groups/:runnerGroupId",
        "method": "PATCH",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1192:36",
        "header": "DELETE /orgs/:org/actions/runner-groups/:runnerGroupId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1197:30",
        "header": "GET /orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1202:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1207:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1212:36",
        "header": "DELETE /orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1217:30",
        "header": "GET /orgs/:org/actions/runner-groups/:runnerGroupId/runners",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1222:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/runners",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1227:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1232:36",
        "header": "DELETE /orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1237:30",
        "header": "GET /orgs/:org/actions/runners",
        "method": "GET",
        "path": "/orgs/:org/actions/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1242:30",
        "header": "GET /orgs/:org/actions/runners/downloads",
        "method": "GET",
        "path": "/orgs/:org/actions/runners/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1247:30",
        "header": "POST /orgs/:org/actions/runners/registration-token",
        "method": "POST",
        "path": "/orgs/:org/actions/runners/registration-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1252:30",
        "header": "POST /orgs/:org/actions/runners/remove-token",
        "method": "POST",
        "path": "/orgs/:org/actions/runners/remove-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1257:30",
        "header": "GET /orgs/:org/actions/runners/:runnerId",
        "method": "GET",
        "path": "/orgs/:org/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1262:36",
        "header": "DELETE /orgs/:org/actions/runners/:runnerId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1267:30",
        "header": "GET /orgs/:org/actions/secrets",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1272:30",
        "header": "GET /orgs/:org/actions/secrets/public-key",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets/public-key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1277:30",
        "header": "GET /orgs/:org/actions/secrets/:secretName",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1282:30",
        "header": "PUT /orgs/:org/actions/secrets/:secretName",
        "method": "PUT",
        "path": "/orgs/:org/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1290:36",
        "header": "DELETE /orgs/:org/actions/secrets/:secretName",
        "method": "DELETE",
        "path": "/orgs/:org/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1295:30",
        "header": "GET /orgs/:org/actions/secrets/:secretName/repositories",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1300:30",
        "header": "PUT /orgs/:org/actions/secrets/:secretName/repositories",
        "method": "PUT",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1305:30",
        "header": "PUT /orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
        "method": "PUT",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1313:36",
        "header": "DELETE /orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1321:30",
        "header": "GET /orgs/:org/audit-log",
        "method": "GET",
        "path": "/orgs/:org/audit-log",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1326:30",
        "header": "GET /orgs/:org/events",
        "method": "GET",
        "path": "/orgs/:org/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1331:30",
        "header": "GET /orgs/:org/hooks",
        "method": "GET",
        "path": "/orgs/:org/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1339:30",
        "header": "POST /orgs/:org/hooks",
        "method": "POST",
        "path": "/orgs/:org/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1348:30",
        "header": "GET /orgs/:org/hooks/:hookId",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1356:30",
        "header": "PATCH /orgs/:org/hooks/:hookId",
        "method": "PATCH",
        "path": "/orgs/:org/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1365:36",
        "header": "DELETE /orgs/:org/hooks/:hookId",
        "method": "DELETE",
        "path": "/orgs/:org/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1373:30",
        "header": "GET /orgs/:org/hooks/:hookId/config",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1378:30",
        "header": "PATCH /orgs/:org/hooks/:hookId/config",
        "method": "PATCH",
        "path": "/orgs/:org/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1383:30",
        "header": "GET /orgs/:org/hooks/:hookId/deliveries",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId/deliveries",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1392:30",
        "header": "GET /orgs/:org/hooks/:hookId/deliveries/:deliveryId",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId/deliveries/:deliveryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1401:30",
        "header": "POST /orgs/:org/hooks/:hookId/deliveries/:deliveryId/attempts",
        "method": "POST",
        "path": "/orgs/:org/hooks/:hookId/deliveries/:deliveryId/attempts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1410:30",
        "header": "POST /orgs/:org/hooks/:hookId/pings",
        "method": "POST",
        "path": "/orgs/:org/hooks/:hookId/pings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1418:30",
        "header": "GET /orgs/:org/installation",
        "method": "GET",
        "path": "/orgs/:org/installation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1423:30",
        "header": "GET /orgs/:org/installations",
        "method": "GET",
        "path": "/orgs/:org/installations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1428:30",
        "header": "GET /orgs/:org/issues",
        "method": "GET",
        "path": "/orgs/:org/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1436:30",
        "header": "GET /orgs/:org/members",
        "method": "GET",
        "path": "/orgs/:org/members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1445:30",
        "header": "GET /orgs/:org/members/:username",
        "method": "GET",
        "path": "/orgs/:org/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1454:36",
        "header": "DELETE /orgs/:org/members/:username",
        "method": "DELETE",
        "path": "/orgs/:org/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1462:30",
        "header": "GET /orgs/:org/memberships/:username",
        "method": "GET",
        "path": "/orgs/:org/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1471:30",
        "header": "PUT /orgs/:org/memberships/:username",
        "method": "PUT",
        "path": "/orgs/:org/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1480:36",
        "header": "DELETE /orgs/:org/memberships/:username",
        "method": "DELETE",
        "path": "/orgs/:org/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1489:30",
        "header": "GET /orgs/:org/outside_collaborators",
        "method": "GET",
        "path": "/orgs/:org/outside_collaborators",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1494:30",
        "header": "PUT /orgs/:org/outside_collaborators/:username",
        "method": "PUT",
        "path": "/orgs/:org/outside_collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1504:36",
        "header": "DELETE /orgs/:org/outside_collaborators/:username",
        "method": "DELETE",
        "path": "/orgs/:org/outside_collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1512:30",
        "header": "GET /orgs/:org/pre-receive-hooks",
        "method": "GET",
        "path": "/orgs/:org/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1517:30",
        "header": "GET /orgs/:org/pre-receive-hooks/:preReceiveHookId",
        "method": "GET",
        "path": "/orgs/:org/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1522:30",
        "header": "PATCH /orgs/:org/pre-receive-hooks/:preReceiveHookId",
        "method": "PATCH",
        "path": "/orgs/:org/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1527:36",
        "header": "DELETE /orgs/:org/pre-receive-hooks/:preReceiveHookId",
        "method": "DELETE",
        "path": "/orgs/:org/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1532:30",
        "header": "GET /orgs/:org/projects",
        "method": "GET",
        "path": "/orgs/:org/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1540:30",
        "header": "POST /orgs/:org/projects",
        "method": "POST",
        "path": "/orgs/:org/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1552:30",
        "header": "GET /orgs/:org/public_members",
        "method": "GET",
        "path": "/orgs/:org/public_members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1557:30",
        "header": "GET /orgs/:org/public_members/:username",
        "method": "GET",
        "path": "/orgs/:org/public_members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1565:30",
        "header": "PUT /orgs/:org/public_members/:username",
        "method": "PUT",
        "path": "/orgs/:org/public_members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1573:36",
        "header": "DELETE /orgs/:org/public_members/:username",
        "method": "DELETE",
        "path": "/orgs/:org/public_members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1578:30",
        "header": "GET /orgs/:org/repos",
        "method": "GET",
        "path": "/orgs/:org/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1583:30",
        "header": "POST /orgs/:org/repos",
        "method": "POST",
        "path": "/orgs/:org/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1592:30",
        "header": "GET /orgs/:org/secret-scanning/alerts",
        "method": "GET",
        "path": "/orgs/:org/secret-scanning/alerts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1601:30",
        "header": "GET /orgs/:org/teams",
        "method": "GET",
        "path": "/orgs/:org/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1609:30",
        "header": "POST /orgs/:org/teams",
        "method": "POST",
        "path": "/orgs/:org/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1618:30",
        "header": "GET /orgs/:org/teams/:teamSlug",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1626:30",
        "header": "PATCH /orgs/:org/teams/:teamSlug",
        "method": "PATCH",
        "path": "/orgs/:org/teams/:teamSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1631:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1636:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1641:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1646:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1651:30",
        "header": "PATCH /orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
        "method": "PATCH",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1656:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1661:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1666:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1671:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1676:30",
        "header": "PATCH /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
        "method": "PATCH",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1681:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1686:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1694:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1705:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions/:reactionId",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1713:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1718:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1726:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions/:reactionId",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1731:30",
        "header": "GET /orgs/:org/teams/:teamSlug/members",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1736:30",
        "header": "GET /orgs/:org/teams/:teamSlug/memberships/:username",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1744:30",
        "header": "PUT /orgs/:org/teams/:teamSlug/memberships/:username",
        "method": "PUT",
        "path": "/orgs/:org/teams/:teamSlug/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1753:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/memberships/:username",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1761:30",
        "header": "GET /orgs/:org/teams/:teamSlug/projects",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1766:30",
        "header": "GET /orgs/:org/teams/:teamSlug/projects/:projectId",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1774:30",
        "header": "PUT /orgs/:org/teams/:teamSlug/projects/:projectId",
        "method": "PUT",
        "path": "/orgs/:org/teams/:teamSlug/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1782:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/projects/:projectId",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1787:30",
        "header": "GET /orgs/:org/teams/:teamSlug/repos",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1792:30",
        "header": "GET /orgs/:org/teams/:teamSlug/repos/:owner/:repo",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1801:30",
        "header": "PUT /orgs/:org/teams/:teamSlug/repos/:owner/:repo",
        "method": "PUT",
        "path": "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1806:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/repos/:owner/:repo",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1811:30",
        "header": "GET /orgs/:org/teams/:teamSlug/teams",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1816:30",
        "header": "GET /projects/columns/cards/:cardId",
        "method": "GET",
        "path": "/projects/columns/cards/:cardId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1827:30",
        "header": "PATCH /projects/columns/cards/:cardId",
        "method": "PATCH",
        "path": "/projects/columns/cards/:cardId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1839:36",
        "header": "DELETE /projects/columns/cards/:cardId",
        "method": "DELETE",
        "path": "/projects/columns/cards/:cardId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1850:30",
        "header": "POST /projects/columns/cards/:cardId/moves",
        "method": "POST",
        "path": "/projects/columns/cards/:cardId/moves",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1862:30",
        "header": "GET /projects/columns/:columnId",
        "method": "GET",
        "path": "/projects/columns/:columnId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1873:30",
        "header": "PATCH /projects/columns/:columnId",
        "method": "PATCH",
        "path": "/projects/columns/:columnId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1883:36",
        "header": "DELETE /projects/columns/:columnId",
        "method": "DELETE",
        "path": "/projects/columns/:columnId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1893:30",
        "header": "GET /projects/columns/:columnId/cards",
        "method": "GET",
        "path": "/projects/columns/:columnId/cards",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1903:30",
        "header": "POST /projects/columns/:columnId/cards",
        "method": "POST",
        "path": "/projects/columns/:columnId/cards",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1915:30",
        "header": "POST /projects/columns/:columnId/moves",
        "method": "POST",
        "path": "/projects/columns/:columnId/moves",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1926:30",
        "header": "GET /projects/:projectId",
        "method": "GET",
        "path": "/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1936:30",
        "header": "PATCH /projects/:projectId",
        "method": "PATCH",
        "path": "/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1949:36",
        "header": "DELETE /projects/:projectId",
        "method": "DELETE",
        "path": "/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1961:30",
        "header": "GET /projects/:projectId/collaborators",
        "method": "GET",
        "path": "/projects/:projectId/collaborators",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1973:30",
        "header": "PUT /projects/:projectId/collaborators/:username",
        "method": "PUT",
        "path": "/projects/:projectId/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1985:36",
        "header": "DELETE /projects/:projectId/collaborators/:username",
        "method": "DELETE",
        "path": "/projects/:projectId/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:1997:30",
        "header": "GET /projects/:projectId/collaborators/:username/permission",
        "method": "GET",
        "path": "/projects/:projectId/collaborators/:username/permission",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2009:30",
        "header": "GET /projects/:projectId/columns",
        "method": "GET",
        "path": "/projects/:projectId/columns",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2019:30",
        "header": "POST /projects/:projectId/columns",
        "method": "POST",
        "path": "/projects/:projectId/columns",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2030:30",
        "header": "GET /rate_limit",
        "method": "GET",
        "path": "/rate_limit",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2039:36",
        "header": "DELETE /reactions/:reactionId",
        "method": "DELETE",
        "path": "/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2050:30",
        "header": "GET /repos/:owner/:repo",
        "method": "GET",
        "path": "/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2060:30",
        "header": "PATCH /repos/:owner/:repo",
        "method": "PATCH",
        "path": "/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2071:36",
        "header": "DELETE /repos/:owner/:repo",
        "method": "DELETE",
        "path": "/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2081:30",
        "header": "GET /repos/:owner/:repo/actions/artifacts",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/artifacts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2086:30",
        "header": "GET /repos/:owner/:repo/actions/artifacts/:artifactId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/artifacts/:artifactId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2091:36",
        "header": "DELETE /repos/:owner/:repo/actions/artifacts/:artifactId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/artifacts/:artifactId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2096:30",
        "header": "GET /repos/:owner/:repo/actions/artifacts/:artifactId/:archiveFormat",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/artifacts/:artifactId/:archiveFormat",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2101:30",
        "header": "GET /repos/:owner/:repo/actions/jobs/:jobId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/jobs/:jobId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2106:30",
        "header": "GET /repos/:owner/:repo/actions/jobs/:jobId/logs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/jobs/:jobId/logs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2111:30",
        "header": "GET /repos/:owner/:repo/actions/permissions",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2116:30",
        "header": "PUT /repos/:owner/:repo/actions/permissions",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2121:30",
        "header": "GET /repos/:owner/:repo/actions/permissions/selected-actions",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2126:30",
        "header": "PUT /repos/:owner/:repo/actions/permissions/selected-actions",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2131:30",
        "header": "GET /repos/:owner/:repo/actions/runners",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2136:30",
        "header": "GET /repos/:owner/:repo/actions/runners/downloads",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runners/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2141:30",
        "header": "POST /repos/:owner/:repo/actions/runners/registration-token",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runners/registration-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2146:30",
        "header": "POST /repos/:owner/:repo/actions/runners/remove-token",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runners/remove-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2151:30",
        "header": "GET /repos/:owner/:repo/actions/runners/:runnerId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2156:36",
        "header": "DELETE /repos/:owner/:repo/actions/runners/:runnerId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2161:30",
        "header": "GET /repos/:owner/:repo/actions/runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2166:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2171:36",
        "header": "DELETE /repos/:owner/:repo/actions/runs/:runId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/runs/:runId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2176:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/approvals",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/approvals",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2181:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/artifacts",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/artifacts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2186:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2191:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber/jobs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber/jobs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2199:30",
        "header": "POST /repos/:owner/:repo/actions/runs/:runId/cancel",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runs/:runId/cancel",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2204:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/jobs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/jobs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2209:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/logs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/logs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2214:36",
        "header": "DELETE /repos/:owner/:repo/actions/runs/:runId/logs",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/runs/:runId/logs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2219:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/pending_deployments",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/pending_deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2224:30",
        "header": "POST /repos/:owner/:repo/actions/runs/:runId/pending_deployments",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runs/:runId/pending_deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2229:30",
        "header": "POST /repos/:owner/:repo/actions/runs/:runId/rerun",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runs/:runId/rerun",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2234:30",
        "header": "GET /repos/:owner/:repo/actions/secrets",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/secrets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2239:30",
        "header": "GET /repos/:owner/:repo/actions/secrets/public-key",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/secrets/public-key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2244:30",
        "header": "GET /repos/:owner/:repo/actions/secrets/:secretName",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2249:30",
        "header": "PUT /repos/:owner/:repo/actions/secrets/:secretName",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2257:36",
        "header": "DELETE /repos/:owner/:repo/actions/secrets/:secretName",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2262:30",
        "header": "GET /repos/:owner/:repo/actions/workflows",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/workflows",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2267:30",
        "header": "GET /repos/:owner/:repo/actions/workflows/:workflowId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2272:30",
        "header": "PUT /repos/:owner/:repo/actions/workflows/:workflowId/disable",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/disable",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2277:30",
        "header": "POST /repos/:owner/:repo/actions/workflows/:workflowId/dispatches",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/dispatches",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2282:30",
        "header": "PUT /repos/:owner/:repo/actions/workflows/:workflowId/enable",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/enable",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2287:30",
        "header": "GET /repos/:owner/:repo/actions/workflows/:workflowId/runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2292:30",
        "header": "GET /repos/:owner/:repo/assignees",
        "method": "GET",
        "path": "/repos/:owner/:repo/assignees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2300:30",
        "header": "GET /repos/:owner/:repo/assignees/:assignee",
        "method": "GET",
        "path": "/repos/:owner/:repo/assignees/:assignee",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2308:30",
        "header": "GET /repos/:owner/:repo/autolinks",
        "method": "GET",
        "path": "/repos/:owner/:repo/autolinks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2313:30",
        "header": "POST /repos/:owner/:repo/autolinks",
        "method": "POST",
        "path": "/repos/:owner/:repo/autolinks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2321:30",
        "header": "GET /repos/:owner/:repo/autolinks/:autolinkId",
        "method": "GET",
        "path": "/repos/:owner/:repo/autolinks/:autolinkId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2329:36",
        "header": "DELETE /repos/:owner/:repo/autolinks/:autolinkId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/autolinks/:autolinkId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2337:30",
        "header": "GET /repos/:owner/:repo/branches",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2345:30",
        "header": "GET /repos/:owner/:repo/branches/:branch",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2355:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2363:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2373:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2381:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2386:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2391:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2399:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2404:30",
        "header": "PATCH /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2412:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2420:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2428:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2436:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2444:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2452:30",
        "header": "PATCH /repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2461:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2466:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2474:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2484:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2493:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2502:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2510:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2515:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2523:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2531:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2539:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2547:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2555:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2563:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2571:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2579:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2587:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2595:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2603:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2611:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/rename",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/rename",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2621:30",
        "header": "POST /repos/:owner/:repo/check-runs",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2626:30",
        "header": "GET /repos/:owner/:repo/check-runs/:checkRunId",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2631:30",
        "header": "PATCH /repos/:owner/:repo/check-runs/:checkRunId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2636:30",
        "header": "GET /repos/:owner/:repo/check-runs/:checkRunId/annotations",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId/annotations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2641:30",
        "header": "POST /repos/:owner/:repo/check-runs/:checkRunId/rerequest",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId/rerequest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2651:30",
        "header": "POST /repos/:owner/:repo/check-suites",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-suites",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2659:30",
        "header": "PATCH /repos/:owner/:repo/check-suites/preferences",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/check-suites/preferences",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2664:30",
        "header": "GET /repos/:owner/:repo/check-suites/:checkSuiteId",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-suites/:checkSuiteId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2669:30",
        "header": "GET /repos/:owner/:repo/check-suites/:checkSuiteId/check-runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-suites/:checkSuiteId/check-runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2674:30",
        "header": "POST /repos/:owner/:repo/check-suites/:checkSuiteId/rerequest",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-suites/:checkSuiteId/rerequest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2679:30",
        "header": "GET /repos/:owner/:repo/code-scanning/alerts",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/alerts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2689:30",
        "header": "GET /repos/:owner/:repo/code-scanning/alerts/:alertNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2699:30",
        "header": "PATCH /repos/:owner/:repo/code-scanning/alerts/:alertNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/code-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2709:30",
        "header": "GET /repos/:owner/:repo/code-scanning/alerts/:alertNumber/instances",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/alerts/:alertNumber/instances",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2719:30",
        "header": "GET /repos/:owner/:repo/code-scanning/analyses",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/analyses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2729:30",
        "header": "GET /repos/:owner/:repo/code-scanning/analyses/:analysisId",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/analyses/:analysisId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2739:36",
        "header": "DELETE /repos/:owner/:repo/code-scanning/analyses/:analysisId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/code-scanning/analyses/:analysisId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2750:30",
        "header": "POST /repos/:owner/:repo/code-scanning/sarifs",
        "method": "POST",
        "path": "/repos/:owner/:repo/code-scanning/sarifs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2762:30",
        "header": "GET /repos/:owner/:repo/code-scanning/sarifs/:sarifId",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/sarifs/:sarifId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2772:30",
        "header": "GET /repos/:owner/:repo/collaborators",
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2780:30",
        "header": "GET /repos/:owner/:repo/collaborators/:username",
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2788:30",
        "header": "PUT /repos/:owner/:repo/collaborators/:username",
        "method": "PUT",
        "path": "/repos/:owner/:repo/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2798:36",
        "header": "DELETE /repos/:owner/:repo/collaborators/:username",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2803:30",
        "header": "GET /repos/:owner/:repo/collaborators/:username/permission",
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators/:username/permission",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2811:30",
        "header": "GET /repos/:owner/:repo/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2816:30",
        "header": "GET /repos/:owner/:repo/comments/:commentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2824:30",
        "header": "PATCH /repos/:owner/:repo/comments/:commentId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2832:36",
        "header": "DELETE /repos/:owner/:repo/comments/:commentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2840:30",
        "header": "GET /repos/:owner/:repo/comments/:commentId/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2848:30",
        "header": "POST /repos/:owner/:repo/comments/:commentId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2858:36",
        "header": "DELETE /repos/:owner/:repo/comments/:commentId/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/comments/:commentId/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2863:30",
        "header": "GET /repos/:owner/:repo/commits",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2874:30",
        "header": "GET /repos/:owner/:repo/commits/:commitSha/branches-where-head",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commitSha/branches-where-head",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2882:30",
        "header": "GET /repos/:owner/:repo/commits/:commitSha/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commitSha/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2887:30",
        "header": "POST /repos/:owner/:repo/commits/:commitSha/comments",
        "method": "POST",
        "path": "/repos/:owner/:repo/commits/:commitSha/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2896:30",
        "header": "GET /repos/:owner/:repo/commits/:commitSha/pulls",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commitSha/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2901:30",
        "header": "GET /repos/:owner/:repo/commits/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2911:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/check-runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/check-runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2916:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/check-suites",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/check-suites",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2921:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/status",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/status",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2929:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/statuses",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/statuses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2937:30",
        "header": "GET /repos/:owner/:repo/compare/:basehead",
        "method": "GET",
        "path": "/repos/:owner/:repo/compare/:basehead",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2946:30",
        "header": "POST /repos/:owner/:repo/content_references/:contentReferenceId/attachments",
        "method": "POST",
        "path": "/repos/:owner/:repo/content_references/:contentReferenceId/attachments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2959:30",
        "header": "GET /repos/:owner/:repo/contents/:path",
        "method": "GET",
        "path": "/repos/:owner/:repo/contents/:path",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2969:30",
        "header": "PUT /repos/:owner/:repo/contents/:path",
        "method": "PUT",
        "path": "/repos/:owner/:repo/contents/:path",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2980:36",
        "header": "DELETE /repos/:owner/:repo/contents/:path",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/contents/:path",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:2991:30",
        "header": "GET /repos/:owner/:repo/contributors",
        "method": "GET",
        "path": "/repos/:owner/:repo/contributors",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3001:30",
        "header": "GET /repos/:owner/:repo/deployments",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3006:30",
        "header": "POST /repos/:owner/:repo/deployments",
        "method": "POST",
        "path": "/repos/:owner/:repo/deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3016:30",
        "header": "GET /repos/:owner/:repo/deployments/:deploymentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deploymentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3024:36",
        "header": "DELETE /repos/:owner/:repo/deployments/:deploymentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/deployments/:deploymentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3033:30",
        "header": "GET /repos/:owner/:repo/deployments/:deploymentId/statuses",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deploymentId/statuses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3041:30",
        "header": "POST /repos/:owner/:repo/deployments/:deploymentId/statuses",
        "method": "POST",
        "path": "/repos/:owner/:repo/deployments/:deploymentId/statuses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3049:30",
        "header": "GET /repos/:owner/:repo/deployments/:deploymentId/statuses/:statusId",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deploymentId/statuses/:statusId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3057:30",
        "header": "POST /repos/:owner/:repo/dispatches",
        "method": "POST",
        "path": "/repos/:owner/:repo/dispatches",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3065:30",
        "header": "GET /repos/:owner/:repo/environments",
        "method": "GET",
        "path": "/repos/:owner/:repo/environments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3070:30",
        "header": "GET /repos/:owner/:repo/environments/:environmentName",
        "method": "GET",
        "path": "/repos/:owner/:repo/environments/:environmentName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3075:30",
        "header": "PUT /repos/:owner/:repo/environments/:environmentName",
        "method": "PUT",
        "path": "/repos/:owner/:repo/environments/:environmentName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3083:36",
        "header": "DELETE /repos/:owner/:repo/environments/:environmentName",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/environments/:environmentName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3088:30",
        "header": "GET /repos/:owner/:repo/events",
        "method": "GET",
        "path": "/repos/:owner/:repo/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3093:30",
        "header": "GET /repos/:owner/:repo/forks",
        "method": "GET",
        "path": "/repos/:owner/:repo/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3101:30",
        "header": "POST /repos/:owner/:repo/forks",
        "method": "POST",
        "path": "/repos/:owner/:repo/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3112:30",
        "header": "POST /repos/:owner/:repo/git/blobs",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/blobs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3123:30",
        "header": "GET /repos/:owner/:repo/git/blobs/:fileSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/blobs/:fileSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3133:30",
        "header": "POST /repos/:owner/:repo/git/commits",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3142:30",
        "header": "GET /repos/:owner/:repo/git/commits/:commitSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/commits/:commitSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3150:30",
        "header": "GET /repos/:owner/:repo/git/matching-refs/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/matching-refs/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3155:30",
        "header": "GET /repos/:owner/:repo/git/ref/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/ref/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3163:30",
        "header": "POST /repos/:owner/:repo/git/refs",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/refs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3171:30",
        "header": "PATCH /repos/:owner/:repo/git/refs/:ref",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/git/refs/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3179:36",
        "header": "DELETE /repos/:owner/:repo/git/refs/:ref",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/git/refs/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3187:30",
        "header": "POST /repos/:owner/:repo/git/tags",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/tags",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3195:30",
        "header": "GET /repos/:owner/:repo/git/tags/:tagSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/tags/:tagSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3203:30",
        "header": "POST /repos/:owner/:repo/git/trees",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/trees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3213:30",
        "header": "GET /repos/:owner/:repo/git/trees/:treeSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/trees/:treeSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3222:30",
        "header": "GET /repos/:owner/:repo/hooks",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3230:30",
        "header": "POST /repos/:owner/:repo/hooks",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3240:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3248:30",
        "header": "PATCH /repos/:owner/:repo/hooks/:hookId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3257:36",
        "header": "DELETE /repos/:owner/:repo/hooks/:hookId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3265:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId/config",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3270:30",
        "header": "PATCH /repos/:owner/:repo/hooks/:hookId/config",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3275:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId/deliveries",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId/deliveries",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3284:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3293:30",
        "header": "POST /repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId/attempts",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId/attempts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3302:30",
        "header": "POST /repos/:owner/:repo/hooks/:hookId/pings",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hookId/pings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3310:30",
        "header": "POST /repos/:owner/:repo/hooks/:hookId/tests",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hookId/tests",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3318:30",
        "header": "GET /repos/:owner/:repo/installation",
        "method": "GET",
        "path": "/repos/:owner/:repo/installation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3327:30",
        "header": "GET /repos/:owner/:repo/invitations",
        "method": "GET",
        "path": "/repos/:owner/:repo/invitations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3332:30",
        "header": "PATCH /repos/:owner/:repo/invitations/:invitationId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3337:36",
        "header": "DELETE /repos/:owner/:repo/invitations/:invitationId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3342:30",
        "header": "GET /repos/:owner/:repo/issues",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3352:30",
        "header": "POST /repos/:owner/:repo/issues",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3364:30",
        "header": "GET /repos/:owner/:repo/issues/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3373:30",
        "header": "GET /repos/:owner/:repo/issues/comments/:commentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3381:30",
        "header": "PATCH /repos/:owner/:repo/issues/comments/:commentId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/issues/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3389:36",
        "header": "DELETE /repos/:owner/:repo/issues/comments/:commentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3394:30",
        "header": "GET /repos/:owner/:repo/issues/comments/:commentId/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3402:30",
        "header": "POST /repos/:owner/:repo/issues/comments/:commentId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3411:36",
        "header": "DELETE /repos/:owner/:repo/issues/comments/:commentId/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/comments/:commentId/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3416:30",
        "header": "GET /repos/:owner/:repo/issues/events",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3424:30",
        "header": "GET /repos/:owner/:repo/issues/events/:eventId",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/events/:eventId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3434:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3445:30",
        "header": "PATCH /repos/:owner/:repo/issues/:issueNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/issues/:issueNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3458:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/assignees",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/assignees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3463:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/assignees",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/assignees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3468:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3477:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/comments",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3488:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/events",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3496:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3504:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3513:30",
        "header": "PUT /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "PUT",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3522:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3530:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/labels/:name",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3539:30",
        "header": "PUT /repos/:owner/:repo/issues/:issueNumber/lock",
        "method": "PUT",
        "path": "/repos/:owner/:repo/issues/:issueNumber/lock",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3550:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/lock",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/lock",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3559:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3568:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3577:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3582:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/timeline",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/timeline",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3591:30",
        "header": "GET /repos/:owner/:repo/keys",
        "method": "GET",
        "path": "/repos/:owner/:repo/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3596:30",
        "header": "POST /repos/:owner/:repo/keys",
        "method": "POST",
        "path": "/repos/:owner/:repo/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3604:30",
        "header": "GET /repos/:owner/:repo/keys/:keyId",
        "method": "GET",
        "path": "/repos/:owner/:repo/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3612:36",
        "header": "DELETE /repos/:owner/:repo/keys/:keyId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3617:30",
        "header": "GET /repos/:owner/:repo/labels",
        "method": "GET",
        "path": "/repos/:owner/:repo/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3625:30",
        "header": "POST /repos/:owner/:repo/labels",
        "method": "POST",
        "path": "/repos/:owner/:repo/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3634:30",
        "header": "GET /repos/:owner/:repo/labels/:name",
        "method": "GET",
        "path": "/repos/:owner/:repo/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3642:30",
        "header": "PATCH /repos/:owner/:repo/labels/:name",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3647:36",
        "header": "DELETE /repos/:owner/:repo/labels/:name",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3652:30",
        "header": "GET /repos/:owner/:repo/languages",
        "method": "GET",
        "path": "/repos/:owner/:repo/languages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3657:30",
        "header": "PUT /repos/:owner/:repo/lfs",
        "method": "PUT",
        "path": "/repos/:owner/:repo/lfs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3665:36",
        "header": "DELETE /repos/:owner/:repo/lfs",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/lfs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3670:30",
        "header": "GET /repos/:owner/:repo/license",
        "method": "GET",
        "path": "/repos/:owner/:repo/license",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3675:30",
        "header": "POST /repos/:owner/:repo/merge-upstream",
        "method": "POST",
        "path": "/repos/:owner/:repo/merge-upstream",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3684:30",
        "header": "POST /repos/:owner/:repo/merges",
        "method": "POST",
        "path": "/repos/:owner/:repo/merges",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3696:30",
        "header": "GET /repos/:owner/:repo/milestones",
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3704:30",
        "header": "POST /repos/:owner/:repo/milestones",
        "method": "POST",
        "path": "/repos/:owner/:repo/milestones",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3713:30",
        "header": "GET /repos/:owner/:repo/milestones/:milestoneNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3721:30",
        "header": "PATCH /repos/:owner/:repo/milestones/:milestoneNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3726:36",
        "header": "DELETE /repos/:owner/:repo/milestones/:milestoneNumber",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3734:30",
        "header": "GET /repos/:owner/:repo/milestones/:milestoneNumber/labels",
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3739:30",
        "header": "GET /repos/:owner/:repo/notifications",
        "method": "GET",
        "path": "/repos/:owner/:repo/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3744:30",
        "header": "PUT /repos/:owner/:repo/notifications",
        "method": "PUT",
        "path": "/repos/:owner/:repo/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3752:30",
        "header": "GET /repos/:owner/:repo/pages",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3760:30",
        "header": "POST /repos/:owner/:repo/pages",
        "method": "POST",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3769:30",
        "header": "PUT /repos/:owner/:repo/pages",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3778:36",
        "header": "DELETE /repos/:owner/:repo/pages",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3787:30",
        "header": "GET /repos/:owner/:repo/pages/builds",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3792:30",
        "header": "POST /repos/:owner/:repo/pages/builds",
        "method": "POST",
        "path": "/repos/:owner/:repo/pages/builds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3797:30",
        "header": "GET /repos/:owner/:repo/pages/builds/latest",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds/latest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3802:30",
        "header": "GET /repos/:owner/:repo/pages/builds/:buildId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds/:buildId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3807:30",
        "header": "GET /repos/:owner/:repo/pre-receive-hooks",
        "method": "GET",
        "path": "/repos/:owner/:repo/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3812:30",
        "header": "GET /repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3817:30",
        "header": "PATCH /repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3822:36",
        "header": "DELETE /repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3827:30",
        "header": "GET /repos/:owner/:repo/projects",
        "method": "GET",
        "path": "/repos/:owner/:repo/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3839:30",
        "header": "POST /repos/:owner/:repo/projects",
        "method": "POST",
        "path": "/repos/:owner/:repo/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3851:30",
        "header": "GET /repos/:owner/:repo/pulls",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3860:30",
        "header": "POST /repos/:owner/:repo/pulls",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3869:30",
        "header": "GET /repos/:owner/:repo/pulls/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3874:30",
        "header": "GET /repos/:owner/:repo/pulls/comments/:commentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3882:30",
        "header": "PATCH /repos/:owner/:repo/pulls/comments/:commentId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3887:36",
        "header": "DELETE /repos/:owner/:repo/pulls/comments/:commentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3895:30",
        "header": "GET /repos/:owner/:repo/pulls/comments/:commentId/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3903:30",
        "header": "POST /repos/:owner/:repo/pulls/comments/:commentId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3912:36",
        "header": "DELETE /repos/:owner/:repo/pulls/comments/:commentId/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3917:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3927:30",
        "header": "PATCH /repos/:owner/:repo/pulls/:pullNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pulls/:pullNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3936:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3941:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/comments",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3950:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/comments/:commentId/replies",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/comments/:commentId/replies",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3958:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/commits",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3963:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/files",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/files",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3972:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/merge",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/merge",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3980:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/merge",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/merge",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3992:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:3997:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4006:36",
        "header": "DELETE /repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4014:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/reviews",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4019:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/reviews",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4028:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4036:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4044:36",
        "header": "DELETE /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4053:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4061:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/dismissals",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/dismissals",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4070:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/events",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4080:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/update-branch",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/update-branch",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4089:30",
        "header": "GET /repos/:owner/:repo/readme",
        "method": "GET",
        "path": "/repos/:owner/:repo/readme",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4098:30",
        "header": "GET /repos/:owner/:repo/readme/:dir",
        "method": "GET",
        "path": "/repos/:owner/:repo/readme/:dir",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4107:30",
        "header": "GET /repos/:owner/:repo/releases",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4115:30",
        "header": "POST /repos/:owner/:repo/releases",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4123:30",
        "header": "GET /repos/:owner/:repo/releases/assets/:assetId",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/assets/:assetId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4133:30",
        "header": "PATCH /repos/:owner/:repo/releases/assets/:assetId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/releases/assets/:assetId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4138:36",
        "header": "DELETE /repos/:owner/:repo/releases/assets/:assetId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/releases/assets/:assetId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4143:30",
        "header": "POST /repos/:owner/:repo/releases/generate-notes",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases/generate-notes",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4151:30",
        "header": "GET /repos/:owner/:repo/releases/latest",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/latest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4156:30",
        "header": "GET /repos/:owner/:repo/releases/tags/:tag",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/tags/:tag",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4164:30",
        "header": "GET /repos/:owner/:repo/releases/:releaseId",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/:releaseId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4172:30",
        "header": "PATCH /repos/:owner/:repo/releases/:releaseId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/releases/:releaseId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4177:36",
        "header": "DELETE /repos/:owner/:repo/releases/:releaseId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/releases/:releaseId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4182:30",
        "header": "GET /repos/:owner/:repo/releases/:releaseId/assets",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/:releaseId/assets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4187:30",
        "header": "POST /repos/:owner/:repo/releases/:releaseId/assets",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases/:releaseId/assets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4195:30",
        "header": "POST /repos/:owner/:repo/releases/:releaseId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases/:releaseId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4204:30",
        "header": "GET /repos/:owner/:repo/secret-scanning/alerts",
        "method": "GET",
        "path": "/repos/:owner/:repo/secret-scanning/alerts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4213:30",
        "header": "GET /repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4223:30",
        "header": "PATCH /repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4233:30",
        "header": "GET /repos/:owner/:repo/secret-scanning/alerts/:alertNumber/locations",
        "method": "GET",
        "path": "/repos/:owner/:repo/secret-scanning/alerts/:alertNumber/locations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4242:30",
        "header": "GET /repos/:owner/:repo/stargazers",
        "method": "GET",
        "path": "/repos/:owner/:repo/stargazers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4250:30",
        "header": "GET /repos/:owner/:repo/stats/code_frequency",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/code_frequency",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4259:30",
        "header": "GET /repos/:owner/:repo/stats/commit_activity",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/commit_activity",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4268:30",
        "header": "GET /repos/:owner/:repo/stats/contributors",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/contributors",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4277:30",
        "header": "GET /repos/:owner/:repo/stats/participation",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/participation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4285:30",
        "header": "GET /repos/:owner/:repo/stats/punch_card",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/punch_card",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4293:30",
        "header": "POST /repos/:owner/:repo/statuses/:sha",
        "method": "POST",
        "path": "/repos/:owner/:repo/statuses/:sha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4298:30",
        "header": "GET /repos/:owner/:repo/subscribers",
        "method": "GET",
        "path": "/repos/:owner/:repo/subscribers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4303:30",
        "header": "GET /repos/:owner/:repo/subscription",
        "method": "GET",
        "path": "/repos/:owner/:repo/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4312:30",
        "header": "PUT /repos/:owner/:repo/subscription",
        "method": "PUT",
        "path": "/repos/:owner/:repo/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4317:36",
        "header": "DELETE /repos/:owner/:repo/subscription",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4322:30",
        "header": "GET /repos/:owner/:repo/tags",
        "method": "GET",
        "path": "/repos/:owner/:repo/tags",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4327:30",
        "header": "GET /repos/:owner/:repo/tarball/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/tarball/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4332:30",
        "header": "GET /repos/:owner/:repo/teams",
        "method": "GET",
        "path": "/repos/:owner/:repo/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4337:30",
        "header": "GET /repos/:owner/:repo/topics",
        "method": "GET",
        "path": "/repos/:owner/:repo/topics",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4345:30",
        "header": "PUT /repos/:owner/:repo/topics",
        "method": "PUT",
        "path": "/repos/:owner/:repo/topics",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4354:30",
        "header": "POST /repos/:owner/:repo/transfer",
        "method": "POST",
        "path": "/repos/:owner/:repo/transfer",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4359:30",
        "header": "GET /repos/:owner/:repo/zipball/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/zipball/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4364:30",
        "header": "POST /repos/:templateOwner/:templateRepo/generate",
        "method": "POST",
        "path": "/repos/:templateOwner/:templateRepo/generate",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4369:30",
        "header": "GET /repositories",
        "method": "GET",
        "path": "/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4378:30",
        "header": "GET /repositories/:repositoryId/environments/:environmentName/secrets",
        "method": "GET",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4383:30",
        "header": "GET /repositories/:repositoryId/environments/:environmentName/secrets/public-key",
        "method": "GET",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/public-key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4388:30",
        "header": "GET /repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
        "method": "GET",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4393:30",
        "header": "PUT /repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
        "method": "PUT",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4401:36",
        "header": "DELETE /repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
        "method": "DELETE",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4406:30",
        "header": "GET /search/code",
        "method": "GET",
        "path": "/search/code",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4417:30",
        "header": "GET /search/commits",
        "method": "GET",
        "path": "/search/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4425:30",
        "header": "GET /search/issues",
        "method": "GET",
        "path": "/search/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4436:30",
        "header": "GET /search/labels",
        "method": "GET",
        "path": "/search/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4447:30",
        "header": "GET /search/repositories",
        "method": "GET",
        "path": "/search/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4457:30",
        "header": "GET /search/topics",
        "method": "GET",
        "path": "/search/topics",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4465:30",
        "header": "GET /search/users",
        "method": "GET",
        "path": "/search/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4475:30",
        "header": "GET /setup/api/configcheck",
        "method": "GET",
        "path": "/setup/api/configcheck",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4480:30",
        "header": "POST /setup/api/configure",
        "method": "POST",
        "path": "/setup/api/configure",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4485:30",
        "header": "GET /setup/api/maintenance",
        "method": "GET",
        "path": "/setup/api/maintenance",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4490:30",
        "header": "POST /setup/api/maintenance",
        "method": "POST",
        "path": "/setup/api/maintenance",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4495:30",
        "header": "GET /setup/api/settings",
        "method": "GET",
        "path": "/setup/api/settings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4500:30",
        "header": "PUT /setup/api/settings",
        "method": "PUT",
        "path": "/setup/api/settings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4505:30",
        "header": "GET /setup/api/settings/authorized-keys",
        "method": "GET",
        "path": "/setup/api/settings/authorized-keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4510:30",
        "header": "POST /setup/api/settings/authorized-keys",
        "method": "POST",
        "path": "/setup/api/settings/authorized-keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4515:36",
        "header": "DELETE /setup/api/settings/authorized-keys",
        "method": "DELETE",
        "path": "/setup/api/settings/authorized-keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4520:30",
        "header": "POST /setup/api/start",
        "method": "POST",
        "path": "/setup/api/start",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4525:30",
        "header": "POST /setup/api/upgrade",
        "method": "POST",
        "path": "/setup/api/upgrade",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4530:30",
        "header": "GET /teams/:teamId",
        "method": "GET",
        "path": "/teams/:teamId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4538:30",
        "header": "PATCH /teams/:teamId",
        "method": "PATCH",
        "path": "/teams/:teamId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4549:36",
        "header": "DELETE /teams/:teamId",
        "method": "DELETE",
        "path": "/teams/:teamId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4558:30",
        "header": "GET /teams/:teamId/discussions",
        "method": "GET",
        "path": "/teams/:teamId/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4563:30",
        "header": "POST /teams/:teamId/discussions",
        "method": "POST",
        "path": "/teams/:teamId/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4568:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4573:30",
        "header": "PATCH /teams/:teamId/discussions/:discussionNumber",
        "method": "PATCH",
        "path": "/teams/:teamId/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4578:36",
        "header": "DELETE /teams/:teamId/discussions/:discussionNumber",
        "method": "DELETE",
        "path": "/teams/:teamId/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4583:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/comments",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4588:30",
        "header": "POST /teams/:teamId/discussions/:discussionNumber/comments",
        "method": "POST",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4593:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4598:30",
        "header": "PATCH /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
        "method": "PATCH",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4603:36",
        "header": "DELETE /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
        "method": "DELETE",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4608:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4613:30",
        "header": "POST /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "POST",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4618:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/reactions",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4623:30",
        "header": "POST /teams/:teamId/discussions/:discussionNumber/reactions",
        "method": "POST",
        "path": "/teams/:teamId/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4628:30",
        "header": "GET /teams/:teamId/members",
        "method": "GET",
        "path": "/teams/:teamId/members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4636:30",
        "header": "GET /teams/:teamId/members/:username",
        "method": "GET",
        "path": "/teams/:teamId/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4644:30",
        "header": "PUT /teams/:teamId/members/:username",
        "method": "PUT",
        "path": "/teams/:teamId/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4654:36",
        "header": "DELETE /teams/:teamId/members/:username",
        "method": "DELETE",
        "path": "/teams/:teamId/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4662:30",
        "header": "GET /teams/:teamId/memberships/:username",
        "method": "GET",
        "path": "/teams/:teamId/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4670:30",
        "header": "PUT /teams/:teamId/memberships/:username",
        "method": "PUT",
        "path": "/teams/:teamId/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4680:36",
        "header": "DELETE /teams/:teamId/memberships/:username",
        "method": "DELETE",
        "path": "/teams/:teamId/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4688:30",
        "header": "GET /teams/:teamId/projects",
        "method": "GET",
        "path": "/teams/:teamId/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4696:30",
        "header": "GET /teams/:teamId/projects/:projectId",
        "method": "GET",
        "path": "/teams/:teamId/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4704:30",
        "header": "PUT /teams/:teamId/projects/:projectId",
        "method": "PUT",
        "path": "/teams/:teamId/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4714:36",
        "header": "DELETE /teams/:teamId/projects/:projectId",
        "method": "DELETE",
        "path": "/teams/:teamId/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4724:30",
        "header": "GET /teams/:teamId/repos",
        "method": "GET",
        "path": "/teams/:teamId/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4732:30",
        "header": "GET /teams/:teamId/repos/:owner/:repo",
        "method": "GET",
        "path": "/teams/:teamId/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4741:30",
        "header": "PUT /teams/:teamId/repos/:owner/:repo",
        "method": "PUT",
        "path": "/teams/:teamId/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4750:36",
        "header": "DELETE /teams/:teamId/repos/:owner/:repo",
        "method": "DELETE",
        "path": "/teams/:teamId/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4755:30",
        "header": "GET /teams/:teamId/teams",
        "method": "GET",
        "path": "/teams/:teamId/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4765:30",
        "header": "GET /user",
        "method": "GET",
        "path": "/user",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4775:30",
        "header": "PATCH /user",
        "method": "PATCH",
        "path": "/user",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4787:30",
        "header": "GET /user/emails",
        "method": "GET",
        "path": "/user/emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4798:30",
        "header": "POST /user/emails",
        "method": "POST",
        "path": "/user/emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4810:36",
        "header": "DELETE /user/emails",
        "method": "DELETE",
        "path": "/user/emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4822:30",
        "header": "GET /user/followers",
        "method": "GET",
        "path": "/user/followers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4832:30",
        "header": "GET /user/following",
        "method": "GET",
        "path": "/user/following",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4842:30",
        "header": "GET /user/following/:username",
        "method": "GET",
        "path": "/user/following/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4853:30",
        "header": "PUT /user/following/:username",
        "method": "PUT",
        "path": "/user/following/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4864:36",
        "header": "DELETE /user/following/:username",
        "method": "DELETE",
        "path": "/user/following/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4875:30",
        "header": "GET /user/gpg_keys",
        "method": "GET",
        "path": "/user/gpg_keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4886:30",
        "header": "POST /user/gpg_keys",
        "method": "POST",
        "path": "/user/gpg_keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4898:30",
        "header": "GET /user/gpg_keys/:gpgKeyId",
        "method": "GET",
        "path": "/user/gpg_keys/:gpgKeyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4909:36",
        "header": "DELETE /user/gpg_keys/:gpgKeyId",
        "method": "DELETE",
        "path": "/user/gpg_keys/:gpgKeyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4921:30",
        "header": "GET /user/installations",
        "method": "GET",
        "path": "/user/installations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4932:30",
        "header": "GET /user/installations/:installationId/repositories",
        "method": "GET",
        "path": "/user/installations/:installationId/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4942:30",
        "header": "PUT /user/installations/:installationId/repositories/:repositoryId",
        "method": "PUT",
        "path": "/user/installations/:installationId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4952:36",
        "header": "DELETE /user/installations/:installationId/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/user/installations/:installationId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4962:30",
        "header": "GET /user/issues",
        "method": "GET",
        "path": "/user/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4971:30",
        "header": "GET /user/keys",
        "method": "GET",
        "path": "/user/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4982:30",
        "header": "POST /user/keys",
        "method": "POST",
        "path": "/user/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:4994:30",
        "header": "GET /user/keys/:keyId",
        "method": "GET",
        "path": "/user/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5005:36",
        "header": "DELETE /user/keys/:keyId",
        "method": "DELETE",
        "path": "/user/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5016:30",
        "header": "GET /user/memberships/orgs",
        "method": "GET",
        "path": "/user/memberships/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5027:30",
        "header": "GET /user/memberships/orgs/:org",
        "method": "GET",
        "path": "/user/memberships/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5036:30",
        "header": "PATCH /user/memberships/orgs/:org",
        "method": "PATCH",
        "path": "/user/memberships/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5046:30",
        "header": "GET /user/orgs",
        "method": "GET",
        "path": "/user/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5056:30",
        "header": "POST /user/projects",
        "method": "POST",
        "path": "/user/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5068:30",
        "header": "GET /user/public_emails",
        "method": "GET",
        "path": "/user/public_emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5079:30",
        "header": "GET /user/repos",
        "method": "GET",
        "path": "/user/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5090:30",
        "header": "POST /user/repos",
        "method": "POST",
        "path": "/user/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5103:30",
        "header": "GET /user/repository_invitations",
        "method": "GET",
        "path": "/user/repository_invitations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5114:30",
        "header": "PATCH /user/repository_invitations/:invitationId",
        "method": "PATCH",
        "path": "/user/repository_invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5125:36",
        "header": "DELETE /user/repository_invitations/:invitationId",
        "method": "DELETE",
        "path": "/user/repository_invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5136:30",
        "header": "GET /user/starred",
        "method": "GET",
        "path": "/user/starred",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5146:30",
        "header": "GET /user/starred/:owner/:repo",
        "method": "GET",
        "path": "/user/starred/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5157:30",
        "header": "PUT /user/starred/:owner/:repo",
        "method": "PUT",
        "path": "/user/starred/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5168:36",
        "header": "DELETE /user/starred/:owner/:repo",
        "method": "DELETE",
        "path": "/user/starred/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5179:30",
        "header": "GET /user/subscriptions",
        "method": "GET",
        "path": "/user/subscriptions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5189:30",
        "header": "GET /user/teams",
        "method": "GET",
        "path": "/user/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5199:30",
        "header": "GET /users",
        "method": "GET",
        "path": "/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5207:30",
        "header": "GET /users/:username",
        "method": "GET",
        "path": "/users/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5215:30",
        "header": "GET /users/:username/events",
        "method": "GET",
        "path": "/users/:username/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5220:30",
        "header": "GET /users/:username/events/orgs/:org",
        "method": "GET",
        "path": "/users/:username/events/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5225:30",
        "header": "GET /users/:username/events/public",
        "method": "GET",
        "path": "/users/:username/events/public",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5230:30",
        "header": "GET /users/:username/followers",
        "method": "GET",
        "path": "/users/:username/followers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5235:30",
        "header": "GET /users/:username/following",
        "method": "GET",
        "path": "/users/:username/following",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5240:30",
        "header": "GET /users/:username/following/:targetUser",
        "method": "GET",
        "path": "/users/:username/following/:targetUser",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5248:30",
        "header": "GET /users/:username/gists",
        "method": "GET",
        "path": "/users/:username/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5256:30",
        "header": "GET /users/:username/gpg_keys",
        "method": "GET",
        "path": "/users/:username/gpg_keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5261:30",
        "header": "GET /users/:username/hovercard",
        "method": "GET",
        "path": "/users/:username/hovercard",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5270:30",
        "header": "GET /users/:username/installation",
        "method": "GET",
        "path": "/users/:username/installation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5275:30",
        "header": "GET /users/:username/keys",
        "method": "GET",
        "path": "/users/:username/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5280:30",
        "header": "GET /users/:username/orgs",
        "method": "GET",
        "path": "/users/:username/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5285:30",
        "header": "GET /users/:username/projects",
        "method": "GET",
        "path": "/users/:username/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5293:30",
        "header": "GET /users/:username/received_events",
        "method": "GET",
        "path": "/users/:username/received_events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5298:30",
        "header": "GET /users/:username/received_events/public",
        "method": "GET",
        "path": "/users/:username/received_events/public",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5303:30",
        "header": "GET /users/:username/repos",
        "method": "GET",
        "path": "/users/:username/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5308:30",
        "header": "PUT /users/:username/site_admin",
        "method": "PUT",
        "path": "/users/:username/site_admin",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5313:36",
        "header": "DELETE /users/:username/site_admin",
        "method": "DELETE",
        "path": "/users/:username/site_admin",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5318:30",
        "header": "GET /users/:username/starred",
        "method": "GET",
        "path": "/users/:username/starred",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5323:30",
        "header": "GET /users/:username/subscriptions",
        "method": "GET",
        "path": "/users/:username/subscriptions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5328:30",
        "header": "PUT /users/:username/suspended",
        "method": "PUT",
        "path": "/users/:username/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5333:36",
        "header": "DELETE /users/:username/suspended",
        "method": "DELETE",
        "path": "/users/:username/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--react-native.js:5338:30",
        "header": "GET /zen",
        "method": "GET",
        "path": "/zen",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
  ],
  "startWorker": [Function],
}
`;

exports[`try generate with fixture > generated result should match snapshot 3`] = `
{
  "getActionsCancelWorkflowRun202Response": [Function],
  "getActionsCreateOrUpdateEnvironmentSecret201Response": [Function],
  "getActionsCreateOrUpdateOrgSecret201Response": [Function],
  "getActionsCreateOrUpdateRepoSecret201Response": [Function],
  "getActionsCreateRegistrationTokenForOrg201Response": [Function],
  "getActionsCreateRegistrationTokenForRepo201Response": [Function],
  "getActionsCreateRemoveTokenForOrg201Response": [Function],
  "getActionsCreateRemoveTokenForRepo201Response": [Function],
  "getActionsCreateSelfHostedRunnerGroupForOrg201Response": [Function],
  "getActionsGetAllowedActionsOrganization200Response": [Function],
  "getActionsGetAllowedActionsRepository200Response": [Function],
  "getActionsGetArtifact200Response": [Function],
  "getActionsGetEnvironmentPublicKey200Response": [Function],
  "getActionsGetEnvironmentSecret200Response": [Function],
  "getActionsGetGithubActionsPermissionsOrganization200Response": [Function],
  "getActionsGetGithubActionsPermissionsRepository200Response": [Function],
  "getActionsGetJobForWorkflowRun200Response": [Function],
  "getActionsGetOrgPublicKey200Response": [Function],
  "getActionsGetOrgSecret200Response": [Function],
  "getActionsGetPendingDeploymentsForRun200Response": [Function],
  "getActionsGetRepoPublicKey200Response": [Function],
  "getActionsGetRepoSecret200Response": [Function],
  "getActionsGetReviewsForRun200Response": [Function],
  "getActionsGetSelfHostedRunnerForOrg200Response": [Function],
  "getActionsGetSelfHostedRunnerForRepo200Response": [Function],
  "getActionsGetSelfHostedRunnerGroupForOrg200Response": [Function],
  "getActionsGetWorkflow200Response": [Function],
  "getActionsGetWorkflowRun200Response": [Function],
  "getActionsGetWorkflowRunAttempt200Response": [Function],
  "getActionsListArtifactsForRepo200Response": [Function],
  "getActionsListEnvironmentSecrets200Response": [Function],
  "getActionsListJobsForWorkflowRun200Response": [Function],
  "getActionsListJobsForWorkflowRunAttempt200Response": [Function],
  "getActionsListJobsForWorkflowRunAttempt404Response": [Function],
  "getActionsListOrgSecrets200Response": [Function],
  "getActionsListRepoAccessToSelfHostedRunnerGroupInOrg200Response": [Function],
  "getActionsListRepoSecrets200Response": [Function],
  "getActionsListRepoWorkflows200Response": [Function],
  "getActionsListRunnerApplicationsForOrg200Response": [Function],
  "getActionsListRunnerApplicationsForRepo200Response": [Function],
  "getActionsListSelectedReposForOrgSecret200Response": [Function],
  "getActionsListSelectedRepositoriesEnabledGithubActionsOrganization200Response": [Function],
  "getActionsListSelfHostedRunnerGroupsForOrg200Response": [Function],
  "getActionsListSelfHostedRunnersForOrg200Response": [Function],
  "getActionsListSelfHostedRunnersForRepo200Response": [Function],
  "getActionsListSelfHostedRunnersInGroupForOrg200Response": [Function],
  "getActionsListWorkflowRunArtifacts200Response": [Function],
  "getActionsListWorkflowRuns200Response": [Function],
  "getActionsListWorkflowRunsForRepo200Response": [Function],
  "getActionsReRunWorkflow201Response": [Function],
  "getActionsReviewPendingDeploymentsForRun200Response": [Function],
  "getActionsUpdateSelfHostedRunnerGroupForOrg200Response": [Function],
  "getActivityCheckRepoIsStarredByAuthenticatedUser401Response": [Function],
  "getActivityCheckRepoIsStarredByAuthenticatedUser403Response": [Function],
  "getActivityCheckRepoIsStarredByAuthenticatedUser404Response": [Function],
  "getActivityDeleteThreadSubscription401Response": [Function],
  "getActivityDeleteThreadSubscription403Response": [Function],
  "getActivityGetFeeds200Response": [Function],
  "getActivityGetRepoSubscription200Response": [Function],
  "getActivityGetRepoSubscription403Response": [Function],
  "getActivityGetThread200Response": [Function],
  "getActivityGetThread401Response": [Function],
  "getActivityGetThread403Response": [Function],
  "getActivityGetThreadSubscriptionForAuthenticatedUser200Response": [Function],
  "getActivityGetThreadSubscriptionForAuthenticatedUser401Response": [Function],
  "getActivityGetThreadSubscriptionForAuthenticatedUser403Response": [Function],
  "getActivityListEventsForAuthenticatedUser200Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser200Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser401Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser403Response": [Function],
  "getActivityListNotificationsForAuthenticatedUser422Response": [Function],
  "getActivityListOrgEventsForAuthenticatedUser200Response": [Function],
  "getActivityListPublicEvents200Response": [Function],
  "getActivityListPublicEvents403Response": [Function],
  "getActivityListPublicEvents503Response": [Function],
  "getActivityListPublicEventsForRepoNetwork200Response": [Function],
  "getActivityListPublicEventsForRepoNetwork301Response": [Function],
  "getActivityListPublicEventsForRepoNetwork403Response": [Function],
  "getActivityListPublicEventsForRepoNetwork404Response": [Function],
  "getActivityListPublicEventsForUser200Response": [Function],
  "getActivityListPublicOrgEvents200Response": [Function],
  "getActivityListReceivedEventsForUser200Response": [Function],
  "getActivityListReceivedPublicEventsForUser200Response": [Function],
  "getActivityListRepoEvents200Response": [Function],
  "getActivityListRepoNotificationsForAuthenticatedUser200Response": [Function],
  "getActivityListReposStarredByAuthenticatedUser200Response": [Function],
  "getActivityListReposStarredByAuthenticatedUser401Response": [Function],
  "getActivityListReposStarredByAuthenticatedUser403Response": [Function],
  "getActivityListReposStarredByUser200Response": [Function],
  "getActivityListReposWatchedByUser200Response": [Function],
  "getActivityListStargazersForRepo200Response": [Function],
  "getActivityListStargazersForRepo422Response": [Function],
  "getActivityListWatchedReposForAuthenticatedUser200Response": [Function],
  "getActivityListWatchedReposForAuthenticatedUser401Response": [Function],
  "getActivityListWatchedReposForAuthenticatedUser403Response": [Function],
  "getActivityListWatchersForRepo200Response": [Function],
  "getActivityMarkNotificationsAsRead202Response": [Function],
  "getActivityMarkNotificationsAsRead401Response": [Function],
  "getActivityMarkNotificationsAsRead403Response": [Function],
  "getActivityMarkRepoNotificationsAsRead202Response": [Function],
  "getActivityMarkThreadAsRead403Response": [Function],
  "getActivitySetRepoSubscription200Response": [Function],
  "getActivitySetThreadSubscription200Response": [Function],
  "getActivitySetThreadSubscription401Response": [Function],
  "getActivitySetThreadSubscription403Response": [Function],
  "getActivityStarRepoForAuthenticatedUser401Response": [Function],
  "getActivityStarRepoForAuthenticatedUser403Response": [Function],
  "getActivityStarRepoForAuthenticatedUser404Response": [Function],
  "getActivityUnstarRepoForAuthenticatedUser401Response": [Function],
  "getActivityUnstarRepoForAuthenticatedUser403Response": [Function],
  "getActivityUnstarRepoForAuthenticatedUser404Response": [Function],
  "getAppsAddRepoToInstallationForAuthenticatedUser403Response": [Function],
  "getAppsAddRepoToInstallationForAuthenticatedUser404Response": [Function],
  "getAppsCheckAuthorization200Response": [Function],
  "getAppsCheckAuthorization404Response": [Function],
  "getAppsCheckToken200Response": [Function],
  "getAppsCheckToken404Response": [Function],
  "getAppsCheckToken422Response": [Function],
  "getAppsCreateContentAttachment200Response": [Function],
  "getAppsCreateContentAttachment403Response": [Function],
  "getAppsCreateContentAttachment404Response": [Function],
  "getAppsCreateContentAttachment410Response": [Function],
  "getAppsCreateContentAttachment415Response": [Function],
  "getAppsCreateContentAttachment422Response": [Function],
  "getAppsCreateFromManifest201Response": [Function],
  "getAppsCreateFromManifest404Response": [Function],
  "getAppsCreateFromManifest422Response": [Function],
  "getAppsCreateInstallationAccessToken201Response": [Function],
  "getAppsCreateInstallationAccessToken401Response": [Function],
  "getAppsCreateInstallationAccessToken403Response": [Function],
  "getAppsCreateInstallationAccessToken404Response": [Function],
  "getAppsCreateInstallationAccessToken415Response": [Function],
  "getAppsCreateInstallationAccessToken422Response": [Function],
  "getAppsDeleteAuthorization422Response": [Function],
  "getAppsDeleteInstallation404Response": [Function],
  "getAppsDeleteToken422Response": [Function],
  "getAppsGetAuthenticated200Response": [Function],
  "getAppsGetBySlug200Response": [Function],
  "getAppsGetBySlug403Response": [Function],
  "getAppsGetBySlug404Response": [Function],
  "getAppsGetBySlug415Response": [Function],
  "getAppsGetInstallation200Response": [Function],
  "getAppsGetInstallation404Response": [Function],
  "getAppsGetInstallation415Response": [Function],
  "getAppsGetOrgInstallation200Response": [Function],
  "getAppsGetRepoInstallation200Response": [Function],
  "getAppsGetRepoInstallation301Response": [Function],
  "getAppsGetRepoInstallation404Response": [Function],
  "getAppsGetUserInstallation200Response": [Function],
  "getAppsGetWebhookConfigForApp200Response": [Function],
  "getAppsGetWebhookDelivery200Response": [Function],
  "getAppsGetWebhookDelivery400Response": [Function],
  "getAppsGetWebhookDelivery422Response": [Function],
  "getAppsListInstallationReposForAuthenticatedUser200Response": [Function],
  "getAppsListInstallationReposForAuthenticatedUser403Response": [Function],
  "getAppsListInstallationReposForAuthenticatedUser404Response": [Function],
  "getAppsListInstallations200Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser200Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser401Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser403Response": [Function],
  "getAppsListInstallationsForAuthenticatedUser415Response": [Function],
  "getAppsListReposAccessibleToInstallation200Response": [Function],
  "getAppsListReposAccessibleToInstallation401Response": [Function],
  "getAppsListReposAccessibleToInstallation403Response": [Function],
  "getAppsListWebhookDeliveries200Response": [Function],
  "getAppsListWebhookDeliveries400Response": [Function],
  "getAppsListWebhookDeliveries422Response": [Function],
  "getAppsRedeliverWebhookDelivery202Response": [Function],
  "getAppsRedeliverWebhookDelivery400Response": [Function],
  "getAppsRedeliverWebhookDelivery422Response": [Function],
  "getAppsRemoveRepoFromInstallationForAuthenticatedUser403Response": [Function],
  "getAppsRemoveRepoFromInstallationForAuthenticatedUser404Response": [Function],
  "getAppsResetAuthorization200Response": [Function],
  "getAppsResetToken200Response": [Function],
  "getAppsResetToken422Response": [Function],
  "getAppsScopeToken200Response": [Function],
  "getAppsScopeToken401Response": [Function],
  "getAppsScopeToken403Response": [Function],
  "getAppsScopeToken404Response": [Function],
  "getAppsScopeToken422Response": [Function],
  "getAppsSuspendInstallation404Response": [Function],
  "getAppsUnsuspendInstallation404Response": [Function],
  "getAppsUpdateWebhookConfigForApp200Response": [Function],
  "getChecksCreate201Response": [Function],
  "getChecksCreateSuite200Response": [Function],
  "getChecksCreateSuite201Response": [Function],
  "getChecksGet200Response": [Function],
  "getChecksGetSuite200Response": [Function],
  "getChecksListAnnotations200Response": [Function],
  "getChecksListForRef200Response": [Function],
  "getChecksListForSuite200Response": [Function],
  "getChecksListSuitesForRef200Response": [Function],
  "getChecksRerequestRun201Response": [Function],
  "getChecksRerequestRun403Response": [Function],
  "getChecksRerequestRun404Response": [Function],
  "getChecksRerequestRun422Response": [Function],
  "getChecksRerequestSuite201Response": [Function],
  "getChecksSetSuitesPreferences200Response": [Function],
  "getChecksUpdate200Response": [Function],
  "getCodeScanningDeleteAnalysis200Response": [Function],
  "getCodeScanningDeleteAnalysis400Response": [Function],
  "getCodeScanningDeleteAnalysis403Response": [Function],
  "getCodeScanningDeleteAnalysis404Response": [Function],
  "getCodeScanningDeleteAnalysis503Response": [Function],
  "getCodeScanningGetAlert200Response": [Function],
  "getCodeScanningGetAlert403Response": [Function],
  "getCodeScanningGetAlert404Response": [Function],
  "getCodeScanningGetAlert503Response": [Function],
  "getCodeScanningGetAnalysis200Response": [Function],
  "getCodeScanningGetAnalysis403Response": [Function],
  "getCodeScanningGetAnalysis404Response": [Function],
  "getCodeScanningGetAnalysis503Response": [Function],
  "getCodeScanningGetSarif200Response": [Function],
  "getCodeScanningGetSarif403Response": [Function],
  "getCodeScanningGetSarif503Response": [Function],
  "getCodeScanningListAlertInstances200Response": [Function],
  "getCodeScanningListAlertInstances403Response": [Function],
  "getCodeScanningListAlertInstances404Response": [Function],
  "getCodeScanningListAlertInstances503Response": [Function],
  "getCodeScanningListAlertsForRepo200Response": [Function],
  "getCodeScanningListAlertsForRepo403Response": [Function],
  "getCodeScanningListAlertsForRepo404Response": [Function],
  "getCodeScanningListAlertsForRepo503Response": [Function],
  "getCodeScanningListRecentAnalyses200Response": [Function],
  "getCodeScanningListRecentAnalyses403Response": [Function],
  "getCodeScanningListRecentAnalyses404Response": [Function],
  "getCodeScanningListRecentAnalyses503Response": [Function],
  "getCodeScanningUpdateAlert200Response": [Function],
  "getCodeScanningUpdateAlert403Response": [Function],
  "getCodeScanningUpdateAlert404Response": [Function],
  "getCodeScanningUpdateAlert503Response": [Function],
  "getCodeScanningUploadSarif202Response": [Function],
  "getCodeScanningUploadSarif403Response": [Function],
  "getCodeScanningUploadSarif404Response": [Function],
  "getCodeScanningUploadSarif503Response": [Function],
  "getCodesOfConductGetAllCodesOfConduct200Response": [Function],
  "getCodesOfConductGetConductCode200Response": [Function],
  "getCodesOfConductGetConductCode404Response": [Function],
  "getEmojisGet200Response": [Function],
  "getEnterpriseAdminAddAuthorizedSshKey201Response": [Function],
  "getEnterpriseAdminCreateGlobalWebhook201Response": [Function],
  "getEnterpriseAdminCreateImpersonationOAuthToken201Response": [Function],
  "getEnterpriseAdminCreateOrg201Response": [Function],
  "getEnterpriseAdminCreatePreReceiveEnvironment201Response": [Function],
  "getEnterpriseAdminCreatePreReceiveHook201Response": [Function],
  "getEnterpriseAdminCreateRegistrationTokenForEnterprise201Response": [Function],
  "getEnterpriseAdminCreateRemoveTokenForEnterprise201Response": [Function],
  "getEnterpriseAdminCreateSelfHostedRunnerGroupForEnterprise201Response": [Function],
  "getEnterpriseAdminCreateUser201Response": [Function],
  "getEnterpriseAdminDeletePreReceiveEnvironment422Response": [Function],
  "getEnterpriseAdminEnableOrDisableMaintenanceMode200Response": [Function],
  "getEnterpriseAdminGetAllAuthorizedSshKeys200Response": [Function],
  "getEnterpriseAdminGetAllStats200Response": [Function],
  "getEnterpriseAdminGetAllowedActionsEnterprise200Response": [Function],
  "getEnterpriseAdminGetAnnouncement200Response": [Function],
  "getEnterpriseAdminGetAuditLog200Response": [Function],
  "getEnterpriseAdminGetCommentStats200Response": [Function],
  "getEnterpriseAdminGetConfigurationStatus200Response": [Function],
  "getEnterpriseAdminGetDownloadStatusForPreReceiveEnvironment200Response": [Function],
  "getEnterpriseAdminGetGistStats200Response": [Function],
  "getEnterpriseAdminGetGithubActionsPermissionsEnterprise200Response": [Function],
  "getEnterpriseAdminGetGlobalWebhook200Response": [Function],
  "getEnterpriseAdminGetHooksStats200Response": [Function],
  "getEnterpriseAdminGetIssueStats200Response": [Function],
  "getEnterpriseAdminGetLicenseInformation200Response": [Function],
  "getEnterpriseAdminGetMaintenanceStatus200Response": [Function],
  "getEnterpriseAdminGetMilestoneStats200Response": [Function],
  "getEnterpriseAdminGetOrgStats200Response": [Function],
  "getEnterpriseAdminGetPagesStats200Response": [Function],
  "getEnterpriseAdminGetPreReceiveEnvironment200Response": [Function],
  "getEnterpriseAdminGetPreReceiveHook200Response": [Function],
  "getEnterpriseAdminGetPreReceiveHookForOrg200Response": [Function],
  "getEnterpriseAdminGetPreReceiveHookForRepo200Response": [Function],
  "getEnterpriseAdminGetPullRequestStats200Response": [Function],
  "getEnterpriseAdminGetRepoStats200Response": [Function],
  "getEnterpriseAdminGetSelfHostedRunnerForEnterprise200Response": [Function],
  "getEnterpriseAdminGetSelfHostedRunnerGroupForEnterprise200Response": [Function],
  "getEnterpriseAdminGetSettings200Response": [Function],
  "getEnterpriseAdminGetUserStats200Response": [Function],
  "getEnterpriseAdminListGlobalWebhooks200Response": [Function],
  "getEnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise200Response": [Function],
  "getEnterpriseAdminListPersonalAccessTokens200Response": [Function],
  "getEnterpriseAdminListPreReceiveEnvironments200Response": [Function],
  "getEnterpriseAdminListPreReceiveHooks200Response": [Function],
  "getEnterpriseAdminListPreReceiveHooksForOrg200Response": [Function],
  "getEnterpriseAdminListPreReceiveHooksForRepo200Response": [Function],
  "getEnterpriseAdminListPublicKeys200Response": [Function],
  "getEnterpriseAdminListRunnerApplicationsForEnterprise200Response": [Function],
  "getEnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise200Response": [Function],
  "getEnterpriseAdminListSelfHostedRunnerGroupsForEnterprise200Response": [Function],
  "getEnterpriseAdminListSelfHostedRunnersForEnterprise200Response": [Function],
  "getEnterpriseAdminListSelfHostedRunnersInGroupForEnterprise200Response": [Function],
  "getEnterpriseAdminRemoveAuthorizedSshKey200Response": [Function],
  "getEnterpriseAdminRemovePreReceiveHookEnforcementForOrg200Response": [Function],
  "getEnterpriseAdminRemovePreReceiveHookEnforcementForRepo200Response": [Function],
  "getEnterpriseAdminSetAnnouncement200Response": [Function],
  "getEnterpriseAdminStartPreReceiveEnvironmentDownload202Response": [Function],
  "getEnterpriseAdminStartPreReceiveEnvironmentDownload422Response": [Function],
  "getEnterpriseAdminSyncLdapMappingForTeam201Response": [Function],
  "getEnterpriseAdminSyncLdapMappingForUser201Response": [Function],
  "getEnterpriseAdminUpdateGlobalWebhook200Response": [Function],
  "getEnterpriseAdminUpdateLdapMappingForTeam200Response": [Function],
  "getEnterpriseAdminUpdateLdapMappingForUser200Response": [Function],
  "getEnterpriseAdminUpdateOrgName202Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveEnvironment200Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveEnvironment422Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveHook200Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveHookEnforcementForOrg200Response": [Function],
  "getEnterpriseAdminUpdatePreReceiveHookEnforcementForRepo200Response": [Function],
  "getEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterprise200Response": [Function],
  "getEnterpriseAdminUpdateUsernameForUser202Response": [Function],
  "getGistsCheckIsStarred403Response": [Function],
  "getGistsCheckIsStarred404Response": [Function],
  "getGistsCreate201Response": [Function],
  "getGistsCreate403Response": [Function],
  "getGistsCreate404Response": [Function],
  "getGistsCreate422Response": [Function],
  "getGistsCreateComment201Response": [Function],
  "getGistsCreateComment403Response": [Function],
  "getGistsCreateComment404Response": [Function],
  "getGistsDelete403Response": [Function],
  "getGistsDelete404Response": [Function],
  "getGistsDeleteComment403Response": [Function],
  "getGistsDeleteComment404Response": [Function],
  "getGistsFork201Response": [Function],
  "getGistsFork403Response": [Function],
  "getGistsFork404Response": [Function],
  "getGistsFork422Response": [Function],
  "getGistsGet200Response": [Function],
  "getGistsGet403Response": [Function],
  "getGistsGet404Response": [Function],
  "getGistsGetComment200Response": [Function],
  "getGistsGetComment403Response": [Function],
  "getGistsGetComment404Response": [Function],
  "getGistsGetRevision200Response": [Function],
  "getGistsGetRevision403Response": [Function],
  "getGistsGetRevision404Response": [Function],
  "getGistsGetRevision422Response": [Function],
  "getGistsList200Response": [Function],
  "getGistsList403Response": [Function],
  "getGistsListComments200Response": [Function],
  "getGistsListComments403Response": [Function],
  "getGistsListComments404Response": [Function],
  "getGistsListCommits200Response": [Function],
  "getGistsListCommits403Response": [Function],
  "getGistsListCommits404Response": [Function],
  "getGistsListForUser200Response": [Function],
  "getGistsListForUser422Response": [Function],
  "getGistsListForks200Response": [Function],
  "getGistsListForks403Response": [Function],
  "getGistsListForks404Response": [Function],
  "getGistsListPublic200Response": [Function],
  "getGistsListPublic403Response": [Function],
  "getGistsListPublic422Response": [Function],
  "getGistsListStarred200Response": [Function],
  "getGistsListStarred401Response": [Function],
  "getGistsListStarred403Response": [Function],
  "getGistsStar403Response": [Function],
  "getGistsStar404Response": [Function],
  "getGistsUnstar403Response": [Function],
  "getGistsUnstar404Response": [Function],
  "getGistsUpdate200Response": [Function],
  "getGistsUpdate404Response": [Function],
  "getGistsUpdate422Response": [Function],
  "getGistsUpdateComment200Response": [Function],
  "getGistsUpdateComment404Response": [Function],
  "getGitCreateBlob201Response": [Function],
  "getGitCreateBlob403Response": [Function],
  "getGitCreateBlob404Response": [Function],
  "getGitCreateBlob409Response": [Function],
  "getGitCreateBlob422Response": [Function],
  "getGitCreateCommit201Response": [Function],
  "getGitCreateCommit404Response": [Function],
  "getGitCreateCommit422Response": [Function],
  "getGitCreateRef201Response": [Function],
  "getGitCreateRef422Response": [Function],
  "getGitCreateTag201Response": [Function],
  "getGitCreateTag422Response": [Function],
  "getGitCreateTree201Response": [Function],
  "getGitCreateTree403Response": [Function],
  "getGitCreateTree404Response": [Function],
  "getGitCreateTree422Response": [Function],
  "getGitDeleteRef422Response": [Function],
  "getGitGetBlob200Response": [Function],
  "getGitGetBlob403Response": [Function],
  "getGitGetBlob404Response": [Function],
  "getGitGetBlob422Response": [Function],
  "getGitGetCommit200Response": [Function],
  "getGitGetCommit404Response": [Function],
  "getGitGetRef200Response": [Function],
  "getGitGetRef404Response": [Function],
  "getGitGetTag200Response": [Function],
  "getGitGetTag404Response": [Function],
  "getGitGetTree200Response": [Function],
  "getGitGetTree404Response": [Function],
  "getGitGetTree422Response": [Function],
  "getGitListMatchingRefs200Response": [Function],
  "getGitUpdateRef200Response": [Function],
  "getGitUpdateRef422Response": [Function],
  "getGitignoreGetAllTemplates200Response": [Function],
  "getGitignoreGetTemplate200Response": [Function],
  "getIssuesAddAssignees201Response": [Function],
  "getIssuesAddLabels200Response": [Function],
  "getIssuesAddLabels410Response": [Function],
  "getIssuesAddLabels422Response": [Function],
  "getIssuesCheckUserCanBeAssigned404Response": [Function],
  "getIssuesCreate201Response": [Function],
  "getIssuesCreate403Response": [Function],
  "getIssuesCreate404Response": [Function],
  "getIssuesCreate410Response": [Function],
  "getIssuesCreate422Response": [Function],
  "getIssuesCreate503Response": [Function],
  "getIssuesCreateComment201Response": [Function],
  "getIssuesCreateComment403Response": [Function],
  "getIssuesCreateComment404Response": [Function],
  "getIssuesCreateComment410Response": [Function],
  "getIssuesCreateComment422Response": [Function],
  "getIssuesCreateLabel201Response": [Function],
  "getIssuesCreateLabel404Response": [Function],
  "getIssuesCreateLabel422Response": [Function],
  "getIssuesCreateMilestone201Response": [Function],
  "getIssuesCreateMilestone404Response": [Function],
  "getIssuesCreateMilestone422Response": [Function],
  "getIssuesDeleteMilestone404Response": [Function],
  "getIssuesGet200Response": [Function],
  "getIssuesGet301Response": [Function],
  "getIssuesGet404Response": [Function],
  "getIssuesGet410Response": [Function],
  "getIssuesGetComment200Response": [Function],
  "getIssuesGetComment404Response": [Function],
  "getIssuesGetEvent200Response": [Function],
  "getIssuesGetEvent403Response": [Function],
  "getIssuesGetEvent404Response": [Function],
  "getIssuesGetEvent410Response": [Function],
  "getIssuesGetLabel200Response": [Function],
  "getIssuesGetLabel404Response": [Function],
  "getIssuesGetMilestone200Response": [Function],
  "getIssuesGetMilestone404Response": [Function],
  "getIssuesList200Response": [Function],
  "getIssuesList404Response": [Function],
  "getIssuesList422Response": [Function],
  "getIssuesListAssignees200Response": [Function],
  "getIssuesListAssignees404Response": [Function],
  "getIssuesListComments200Response": [Function],
  "getIssuesListComments404Response": [Function],
  "getIssuesListComments410Response": [Function],
  "getIssuesListCommentsForRepo200Response": [Function],
  "getIssuesListCommentsForRepo404Response": [Function],
  "getIssuesListCommentsForRepo422Response": [Function],
  "getIssuesListEvents200Response": [Function],
  "getIssuesListEvents410Response": [Function],
  "getIssuesListEventsForRepo200Response": [Function],
  "getIssuesListEventsForRepo422Response": [Function],
  "getIssuesListEventsForTimeline200Response": [Function],
  "getIssuesListEventsForTimeline404Response": [Function],
  "getIssuesListEventsForTimeline410Response": [Function],
  "getIssuesListForAuthenticatedUser200Response": [Function],
  "getIssuesListForAuthenticatedUser404Response": [Function],
  "getIssuesListForOrg200Response": [Function],
  "getIssuesListForOrg404Response": [Function],
  "getIssuesListForRepo200Response": [Function],
  "getIssuesListForRepo301Response": [Function],
  "getIssuesListForRepo404Response": [Function],
  "getIssuesListForRepo422Response": [Function],
  "getIssuesListLabelsForMilestone200Response": [Function],
  "getIssuesListLabelsForRepo200Response": [Function],
  "getIssuesListLabelsForRepo404Response": [Function],
  "getIssuesListLabelsOnIssue200Response": [Function],
  "getIssuesListLabelsOnIssue410Response": [Function],
  "getIssuesListMilestones200Response": [Function],
  "getIssuesListMilestones404Response": [Function],
  "getIssuesLock403Response": [Function],
  "getIssuesLock404Response": [Function],
  "getIssuesLock410Response": [Function],
  "getIssuesLock422Response": [Function],
  "getIssuesRemoveAllLabels410Response": [Function],
  "getIssuesRemoveAssignees200Response": [Function],
  "getIssuesRemoveLabel200Response": [Function],
  "getIssuesRemoveLabel404Response": [Function],
  "getIssuesRemoveLabel410Response": [Function],
  "getIssuesSetLabels200Response": [Function],
  "getIssuesSetLabels410Response": [Function],
  "getIssuesSetLabels422Response": [Function],
  "getIssuesUnlock403Response": [Function],
  "getIssuesUnlock404Response": [Function],
  "getIssuesUpdate200Response": [Function],
  "getIssuesUpdate301Response": [Function],
  "getIssuesUpdate403Response": [Function],
  "getIssuesUpdate404Response": [Function],
  "getIssuesUpdate410Response": [Function],
  "getIssuesUpdate422Response": [Function],
  "getIssuesUpdate503Response": [Function],
  "getIssuesUpdateComment200Response": [Function],
  "getIssuesUpdateComment422Response": [Function],
  "getIssuesUpdateLabel200Response": [Function],
  "getIssuesUpdateMilestone200Response": [Function],
  "getLicensesGet200Response": [Function],
  "getLicensesGet403Response": [Function],
  "getLicensesGet404Response": [Function],
  "getLicensesGetAllCommonlyUsed200Response": [Function],
  "getLicensesGetForRepo200Response": [Function],
  "getMarkdownRender200Response": [Function],
  "getMarkdownRenderRaw200Response": [Function],
  "getMetaGet200Response": [Function],
  "getMetaGetOctocat200Response": [Function],
  "getMetaGetZen200Response": [Function],
  "getMetaRoot200Response": [Function],
  "getOauthAuthorizationsCreateAuthorization201Response": [Function],
  "getOauthAuthorizationsCreateAuthorization401Response": [Function],
  "getOauthAuthorizationsCreateAuthorization403Response": [Function],
  "getOauthAuthorizationsCreateAuthorization410Response": [Function],
  "getOauthAuthorizationsCreateAuthorization422Response": [Function],
  "getOauthAuthorizationsDeleteAuthorization401Response": [Function],
  "getOauthAuthorizationsDeleteAuthorization403Response": [Function],
  "getOauthAuthorizationsDeleteGrant401Response": [Function],
  "getOauthAuthorizationsDeleteGrant403Response": [Function],
  "getOauthAuthorizationsGetAuthorization200Response": [Function],
  "getOauthAuthorizationsGetAuthorization401Response": [Function],
  "getOauthAuthorizationsGetAuthorization403Response": [Function],
  "getOauthAuthorizationsGetGrant200Response": [Function],
  "getOauthAuthorizationsGetGrant401Response": [Function],
  "getOauthAuthorizationsGetGrant403Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp200Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp201Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp401Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp403Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForApp422Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprint200Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprint201Response": [Function],
  "getOauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprint422Response": [Function],
  "getOauthAuthorizationsListAuthorizations200Response": [Function],
  "getOauthAuthorizationsListAuthorizations401Response": [Function],
  "getOauthAuthorizationsListAuthorizations403Response": [Function],
  "getOauthAuthorizationsListAuthorizations404Response": [Function],
  "getOauthAuthorizationsListGrants200Response": [Function],
  "getOauthAuthorizationsListGrants401Response": [Function],
  "getOauthAuthorizationsListGrants403Response": [Function],
  "getOauthAuthorizationsListGrants404Response": [Function],
  "getOauthAuthorizationsUpdateAuthorization200Response": [Function],
  "getOauthAuthorizationsUpdateAuthorization422Response": [Function],
  "getOrgsConvertMemberToOutsideCollaborator202Response": [Function],
  "getOrgsConvertMemberToOutsideCollaborator404Response": [Function],
  "getOrgsCreateWebhook201Response": [Function],
  "getOrgsCreateWebhook404Response": [Function],
  "getOrgsCreateWebhook422Response": [Function],
  "getOrgsDeleteWebhook404Response": [Function],
  "getOrgsGet200Response": [Function],
  "getOrgsGet404Response": [Function],
  "getOrgsGetAuditLog200Response": [Function],
  "getOrgsGetMembershipForAuthenticatedUser200Response": [Function],
  "getOrgsGetMembershipForAuthenticatedUser403Response": [Function],
  "getOrgsGetMembershipForAuthenticatedUser404Response": [Function],
  "getOrgsGetMembershipForUser200Response": [Function],
  "getOrgsGetMembershipForUser403Response": [Function],
  "getOrgsGetMembershipForUser404Response": [Function],
  "getOrgsGetWebhook200Response": [Function],
  "getOrgsGetWebhook404Response": [Function],
  "getOrgsGetWebhookConfigForOrg200Response": [Function],
  "getOrgsGetWebhookDelivery200Response": [Function],
  "getOrgsGetWebhookDelivery400Response": [Function],
  "getOrgsGetWebhookDelivery422Response": [Function],
  "getOrgsList200Response": [Function],
  "getOrgsListAppInstallations200Response": [Function],
  "getOrgsListForAuthenticatedUser200Response": [Function],
  "getOrgsListForAuthenticatedUser401Response": [Function],
  "getOrgsListForAuthenticatedUser403Response": [Function],
  "getOrgsListForUser200Response": [Function],
  "getOrgsListMembers200Response": [Function],
  "getOrgsListMembers422Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser200Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser401Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser403Response": [Function],
  "getOrgsListMembershipsForAuthenticatedUser422Response": [Function],
  "getOrgsListOutsideCollaborators200Response": [Function],
  "getOrgsListPublicMembers200Response": [Function],
  "getOrgsListWebhookDeliveries200Response": [Function],
  "getOrgsListWebhookDeliveries400Response": [Function],
  "getOrgsListWebhookDeliveries422Response": [Function],
  "getOrgsListWebhooks200Response": [Function],
  "getOrgsListWebhooks404Response": [Function],
  "getOrgsPingWebhook404Response": [Function],
  "getOrgsRedeliverWebhookDelivery202Response": [Function],
  "getOrgsRedeliverWebhookDelivery400Response": [Function],
  "getOrgsRedeliverWebhookDelivery422Response": [Function],
  "getOrgsRemoveMember403Response": [Function],
  "getOrgsRemoveMembershipForUser403Response": [Function],
  "getOrgsRemoveMembershipForUser404Response": [Function],
  "getOrgsRemoveOutsideCollaborator422Response": [Function],
  "getOrgsSetMembershipForUser200Response": [Function],
  "getOrgsSetMembershipForUser403Response": [Function],
  "getOrgsSetMembershipForUser422Response": [Function],
  "getOrgsSetPublicMembershipForAuthenticatedUser403Response": [Function],
  "getOrgsUpdate200Response": [Function],
  "getOrgsUpdate409Response": [Function],
  "getOrgsUpdate422Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser200Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser403Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser404Response": [Function],
  "getOrgsUpdateMembershipForAuthenticatedUser422Response": [Function],
  "getOrgsUpdateWebhook200Response": [Function],
  "getOrgsUpdateWebhook404Response": [Function],
  "getOrgsUpdateWebhook422Response": [Function],
  "getOrgsUpdateWebhookConfigForOrg200Response": [Function],
  "getProjectsAddCollaborator401Response": [Function],
  "getProjectsAddCollaborator403Response": [Function],
  "getProjectsAddCollaborator404Response": [Function],
  "getProjectsAddCollaborator422Response": [Function],
  "getProjectsCreateCard201Response": [Function],
  "getProjectsCreateCard401Response": [Function],
  "getProjectsCreateCard403Response": [Function],
  "getProjectsCreateCard422Response": [Function],
  "getProjectsCreateCard503Response": [Function],
  "getProjectsCreateColumn201Response": [Function],
  "getProjectsCreateColumn401Response": [Function],
  "getProjectsCreateColumn403Response": [Function],
  "getProjectsCreateColumn422Response": [Function],
  "getProjectsCreateForAuthenticatedUser201Response": [Function],
  "getProjectsCreateForAuthenticatedUser401Response": [Function],
  "getProjectsCreateForAuthenticatedUser403Response": [Function],
  "getProjectsCreateForAuthenticatedUser415Response": [Function],
  "getProjectsCreateForAuthenticatedUser422Response": [Function],
  "getProjectsCreateForOrg201Response": [Function],
  "getProjectsCreateForOrg401Response": [Function],
  "getProjectsCreateForOrg403Response": [Function],
  "getProjectsCreateForOrg404Response": [Function],
  "getProjectsCreateForOrg410Response": [Function],
  "getProjectsCreateForOrg422Response": [Function],
  "getProjectsCreateForRepo201Response": [Function],
  "getProjectsCreateForRepo401Response": [Function],
  "getProjectsCreateForRepo403Response": [Function],
  "getProjectsCreateForRepo404Response": [Function],
  "getProjectsCreateForRepo410Response": [Function],
  "getProjectsCreateForRepo422Response": [Function],
  "getProjectsDelete401Response": [Function],
  "getProjectsDelete403Response": [Function],
  "getProjectsDelete404Response": [Function],
  "getProjectsDelete410Response": [Function],
  "getProjectsDeleteCard401Response": [Function],
  "getProjectsDeleteCard403Response": [Function],
  "getProjectsDeleteCard404Response": [Function],
  "getProjectsDeleteColumn401Response": [Function],
  "getProjectsDeleteColumn403Response": [Function],
  "getProjectsGet200Response": [Function],
  "getProjectsGet401Response": [Function],
  "getProjectsGet403Response": [Function],
  "getProjectsGetCard200Response": [Function],
  "getProjectsGetCard401Response": [Function],
  "getProjectsGetCard403Response": [Function],
  "getProjectsGetCard404Response": [Function],
  "getProjectsGetColumn200Response": [Function],
  "getProjectsGetColumn401Response": [Function],
  "getProjectsGetColumn403Response": [Function],
  "getProjectsGetColumn404Response": [Function],
  "getProjectsGetPermissionForUser200Response": [Function],
  "getProjectsGetPermissionForUser401Response": [Function],
  "getProjectsGetPermissionForUser403Response": [Function],
  "getProjectsGetPermissionForUser404Response": [Function],
  "getProjectsGetPermissionForUser422Response": [Function],
  "getProjectsListCards200Response": [Function],
  "getProjectsListCards401Response": [Function],
  "getProjectsListCards403Response": [Function],
  "getProjectsListCollaborators200Response": [Function],
  "getProjectsListCollaborators401Response": [Function],
  "getProjectsListCollaborators403Response": [Function],
  "getProjectsListCollaborators404Response": [Function],
  "getProjectsListCollaborators422Response": [Function],
  "getProjectsListColumns200Response": [Function],
  "getProjectsListColumns401Response": [Function],
  "getProjectsListColumns403Response": [Function],
  "getProjectsListForOrg200Response": [Function],
  "getProjectsListForOrg422Response": [Function],
  "getProjectsListForRepo200Response": [Function],
  "getProjectsListForRepo401Response": [Function],
  "getProjectsListForRepo403Response": [Function],
  "getProjectsListForRepo404Response": [Function],
  "getProjectsListForRepo410Response": [Function],
  "getProjectsListForRepo422Response": [Function],
  "getProjectsListForUser200Response": [Function],
  "getProjectsListForUser422Response": [Function],
  "getProjectsMoveCard201Response": [Function],
  "getProjectsMoveCard401Response": [Function],
  "getProjectsMoveCard403Response": [Function],
  "getProjectsMoveCard422Response": [Function],
  "getProjectsMoveCard503Response": [Function],
  "getProjectsMoveColumn201Response": [Function],
  "getProjectsMoveColumn401Response": [Function],
  "getProjectsMoveColumn403Response": [Function],
  "getProjectsMoveColumn422Response": [Function],
  "getProjectsRemoveCollaborator401Response": [Function],
  "getProjectsRemoveCollaborator403Response": [Function],
  "getProjectsRemoveCollaborator404Response": [Function],
  "getProjectsRemoveCollaborator422Response": [Function],
  "getProjectsUpdate200Response": [Function],
  "getProjectsUpdate401Response": [Function],
  "getProjectsUpdate403Response": [Function],
  "getProjectsUpdate410Response": [Function],
  "getProjectsUpdate422Response": [Function],
  "getProjectsUpdateCard200Response": [Function],
  "getProjectsUpdateCard401Response": [Function],
  "getProjectsUpdateCard403Response": [Function],
  "getProjectsUpdateCard404Response": [Function],
  "getProjectsUpdateCard422Response": [Function],
  "getProjectsUpdateColumn200Response": [Function],
  "getProjectsUpdateColumn401Response": [Function],
  "getProjectsUpdateColumn403Response": [Function],
  "getPullsCreate201Response": [Function],
  "getPullsCreate403Response": [Function],
  "getPullsCreate422Response": [Function],
  "getPullsCreateReplyForReviewComment201Response": [Function],
  "getPullsCreateReplyForReviewComment404Response": [Function],
  "getPullsCreateReview200Response": [Function],
  "getPullsCreateReview403Response": [Function],
  "getPullsCreateReview422Response": [Function],
  "getPullsCreateReviewComment201Response": [Function],
  "getPullsCreateReviewComment403Response": [Function],
  "getPullsCreateReviewComment422Response": [Function],
  "getPullsDeletePendingReview200Response": [Function],
  "getPullsDeletePendingReview404Response": [Function],
  "getPullsDeletePendingReview422Response": [Function],
  "getPullsDeleteReviewComment404Response": [Function],
  "getPullsDismissReview200Response": [Function],
  "getPullsDismissReview404Response": [Function],
  "getPullsDismissReview422Response": [Function],
  "getPullsGet200Response": [Function],
  "getPullsGet404Response": [Function],
  "getPullsGet500Response": [Function],
  "getPullsGetReview200Response": [Function],
  "getPullsGetReview404Response": [Function],
  "getPullsGetReviewComment200Response": [Function],
  "getPullsGetReviewComment404Response": [Function],
  "getPullsList200Response": [Function],
  "getPullsList422Response": [Function],
  "getPullsListCommentsForReview200Response": [Function],
  "getPullsListCommentsForReview404Response": [Function],
  "getPullsListCommits200Response": [Function],
  "getPullsListFiles200Response": [Function],
  "getPullsListFiles422Response": [Function],
  "getPullsListFiles500Response": [Function],
  "getPullsListRequestedReviewers200Response": [Function],
  "getPullsListReviewComments200Response": [Function],
  "getPullsListReviewCommentsForRepo200Response": [Function],
  "getPullsListReviews200Response": [Function],
  "getPullsMerge200Response": [Function],
  "getPullsMerge403Response": [Function],
  "getPullsMerge404Response": [Function],
  "getPullsMerge405Response": [Function],
  "getPullsMerge409Response": [Function],
  "getPullsMerge422Response": [Function],
  "getPullsRemoveRequestedReviewers200Response": [Function],
  "getPullsRemoveRequestedReviewers422Response": [Function],
  "getPullsRequestReviewers201Response": [Function],
  "getPullsRequestReviewers403Response": [Function],
  "getPullsSubmitReview200Response": [Function],
  "getPullsSubmitReview403Response": [Function],
  "getPullsSubmitReview404Response": [Function],
  "getPullsSubmitReview422Response": [Function],
  "getPullsUpdate200Response": [Function],
  "getPullsUpdate403Response": [Function],
  "getPullsUpdate422Response": [Function],
  "getPullsUpdateBranch202Response": [Function],
  "getPullsUpdateBranch403Response": [Function],
  "getPullsUpdateBranch422Response": [Function],
  "getPullsUpdateReview200Response": [Function],
  "getPullsUpdateReview422Response": [Function],
  "getPullsUpdateReviewComment200Response": [Function],
  "getRateLimitGet200Response": [Function],
  "getRateLimitGet404Response": [Function],
  "getReactionsCreateForCommitComment200Response": [Function],
  "getReactionsCreateForCommitComment201Response": [Function],
  "getReactionsCreateForCommitComment415Response": [Function],
  "getReactionsCreateForCommitComment422Response": [Function],
  "getReactionsCreateForIssue200Response": [Function],
  "getReactionsCreateForIssue201Response": [Function],
  "getReactionsCreateForIssue422Response": [Function],
  "getReactionsCreateForIssueComment200Response": [Function],
  "getReactionsCreateForIssueComment201Response": [Function],
  "getReactionsCreateForIssueComment422Response": [Function],
  "getReactionsCreateForPullRequestReviewComment200Response": [Function],
  "getReactionsCreateForPullRequestReviewComment201Response": [Function],
  "getReactionsCreateForPullRequestReviewComment422Response": [Function],
  "getReactionsCreateForRelease200Response": [Function],
  "getReactionsCreateForRelease201Response": [Function],
  "getReactionsCreateForRelease422Response": [Function],
  "getReactionsCreateForTeamDiscussionCommentInOrg200Response": [Function],
  "getReactionsCreateForTeamDiscussionCommentInOrg201Response": [Function],
  "getReactionsCreateForTeamDiscussionCommentLegacy201Response": [Function],
  "getReactionsCreateForTeamDiscussionInOrg200Response": [Function],
  "getReactionsCreateForTeamDiscussionInOrg201Response": [Function],
  "getReactionsCreateForTeamDiscussionLegacy201Response": [Function],
  "getReactionsDeleteLegacy401Response": [Function],
  "getReactionsDeleteLegacy403Response": [Function],
  "getReactionsDeleteLegacy410Response": [Function],
  "getReactionsListForCommitComment200Response": [Function],
  "getReactionsListForCommitComment404Response": [Function],
  "getReactionsListForIssue200Response": [Function],
  "getReactionsListForIssue404Response": [Function],
  "getReactionsListForIssue410Response": [Function],
  "getReactionsListForIssueComment200Response": [Function],
  "getReactionsListForIssueComment404Response": [Function],
  "getReactionsListForPullRequestReviewComment200Response": [Function],
  "getReactionsListForPullRequestReviewComment404Response": [Function],
  "getReactionsListForTeamDiscussionCommentInOrg200Response": [Function],
  "getReactionsListForTeamDiscussionCommentLegacy200Response": [Function],
  "getReactionsListForTeamDiscussionInOrg200Response": [Function],
  "getReactionsListForTeamDiscussionLegacy200Response": [Function],
  "getReposAcceptInvitationForAuthenticatedUser403Response": [Function],
  "getReposAcceptInvitationForAuthenticatedUser404Response": [Function],
  "getReposAcceptInvitationForAuthenticatedUser409Response": [Function],
  "getReposAddAppAccessRestrictions200Response": [Function],
  "getReposAddAppAccessRestrictions422Response": [Function],
  "getReposAddCollaborator201Response": [Function],
  "getReposAddCollaborator403Response": [Function],
  "getReposAddCollaborator422Response": [Function],
  "getReposAddStatusCheckContexts200Response": [Function],
  "getReposAddStatusCheckContexts403Response": [Function],
  "getReposAddStatusCheckContexts404Response": [Function],
  "getReposAddStatusCheckContexts422Response": [Function],
  "getReposAddTeamAccessRestrictions200Response": [Function],
  "getReposAddTeamAccessRestrictions422Response": [Function],
  "getReposAddUserAccessRestrictions200Response": [Function],
  "getReposAddUserAccessRestrictions422Response": [Function],
  "getReposCompareCommits200Response": [Function],
  "getReposCompareCommits404Response": [Function],
  "getReposCompareCommits500Response": [Function],
  "getReposCreateAutolink201Response": [Function],
  "getReposCreateAutolink422Response": [Function],
  "getReposCreateCommitComment201Response": [Function],
  "getReposCreateCommitComment403Response": [Function],
  "getReposCreateCommitComment422Response": [Function],
  "getReposCreateCommitSignatureProtection200Response": [Function],
  "getReposCreateCommitSignatureProtection404Response": [Function],
  "getReposCreateCommitStatus201Response": [Function],
  "getReposCreateDeployKey201Response": [Function],
  "getReposCreateDeployKey422Response": [Function],
  "getReposCreateDeployment201Response": [Function],
  "getReposCreateDeployment202Response": [Function],
  "getReposCreateDeployment422Response": [Function],
  "getReposCreateDeploymentStatus201Response": [Function],
  "getReposCreateDeploymentStatus422Response": [Function],
  "getReposCreateDispatchEvent422Response": [Function],
  "getReposCreateForAuthenticatedUser201Response": [Function],
  "getReposCreateForAuthenticatedUser400Response": [Function],
  "getReposCreateForAuthenticatedUser401Response": [Function],
  "getReposCreateForAuthenticatedUser403Response": [Function],
  "getReposCreateForAuthenticatedUser404Response": [Function],
  "getReposCreateForAuthenticatedUser422Response": [Function],
  "getReposCreateFork202Response": [Function],
  "getReposCreateFork400Response": [Function],
  "getReposCreateFork403Response": [Function],
  "getReposCreateFork404Response": [Function],
  "getReposCreateFork422Response": [Function],
  "getReposCreateInOrg201Response": [Function],
  "getReposCreateInOrg403Response": [Function],
  "getReposCreateInOrg422Response": [Function],
  "getReposCreateOrUpdateEnvironment200Response": [Function],
  "getReposCreateOrUpdateEnvironment422Response": [Function],
  "getReposCreateOrUpdateFileContents200Response": [Function],
  "getReposCreateOrUpdateFileContents201Response": [Function],
  "getReposCreateOrUpdateFileContents404Response": [Function],
  "getReposCreateOrUpdateFileContents409Response": [Function],
  "getReposCreateOrUpdateFileContents422Response": [Function],
  "getReposCreatePagesSite201Response": [Function],
  "getReposCreatePagesSite409Response": [Function],
  "getReposCreatePagesSite422Response": [Function],
  "getReposCreateRelease201Response": [Function],
  "getReposCreateRelease422Response": [Function],
  "getReposCreateUsingTemplate201Response": [Function],
  "getReposCreateWebhook201Response": [Function],
  "getReposCreateWebhook403Response": [Function],
  "getReposCreateWebhook404Response": [Function],
  "getReposCreateWebhook422Response": [Function],
  "getReposDeclineInvitationForAuthenticatedUser403Response": [Function],
  "getReposDeclineInvitationForAuthenticatedUser404Response": [Function],
  "getReposDeclineInvitationForAuthenticatedUser409Response": [Function],
  "getReposDelete307Response": [Function],
  "getReposDelete403Response": [Function],
  "getReposDelete404Response": [Function],
  "getReposDeleteAdminBranchProtection404Response": [Function],
  "getReposDeleteAutolink404Response": [Function],
  "getReposDeleteBranchProtection403Response": [Function],
  "getReposDeleteCommitComment404Response": [Function],
  "getReposDeleteCommitSignatureProtection404Response": [Function],
  "getReposDeleteDeployment404Response": [Function],
  "getReposDeleteDeployment422Response": [Function],
  "getReposDeleteFile200Response": [Function],
  "getReposDeleteFile404Response": [Function],
  "getReposDeleteFile409Response": [Function],
  "getReposDeleteFile422Response": [Function],
  "getReposDeleteFile503Response": [Function],
  "getReposDeletePagesSite404Response": [Function],
  "getReposDeletePagesSite422Response": [Function],
  "getReposDeletePullRequestReviewProtection404Response": [Function],
  "getReposDeleteWebhook404Response": [Function],
  "getReposEnableLfsForRepo202Response": [Function],
  "getReposGenerateReleaseNotes200Response": [Function],
  "getReposGenerateReleaseNotes404Response": [Function],
  "getReposGet200Response": [Function],
  "getReposGet301Response": [Function],
  "getReposGet403Response": [Function],
  "getReposGet404Response": [Function],
  "getReposGetAccessRestrictions200Response": [Function],
  "getReposGetAccessRestrictions404Response": [Function],
  "getReposGetAdminBranchProtection200Response": [Function],
  "getReposGetAllEnvironments200Response": [Function],
  "getReposGetAllStatusCheckContexts200Response": [Function],
  "getReposGetAllStatusCheckContexts404Response": [Function],
  "getReposGetAllTopics200Response": [Function],
  "getReposGetAllTopics404Response": [Function],
  "getReposGetAppsWithAccessToProtectedBranch200Response": [Function],
  "getReposGetAppsWithAccessToProtectedBranch404Response": [Function],
  "getReposGetAutolink200Response": [Function],
  "getReposGetAutolink404Response": [Function],
  "getReposGetBranch200Response": [Function],
  "getReposGetBranch301Response": [Function],
  "getReposGetBranch404Response": [Function],
  "getReposGetBranch415Response": [Function],
  "getReposGetBranchProtection200Response": [Function],
  "getReposGetBranchProtection404Response": [Function],
  "getReposGetCodeFrequencyStats200Response": [Function],
  "getReposGetCodeFrequencyStats202Response": [Function],
  "getReposGetCollaboratorPermissionLevel200Response": [Function],
  "getReposGetCollaboratorPermissionLevel404Response": [Function],
  "getReposGetCombinedStatusForRef200Response": [Function],
  "getReposGetCombinedStatusForRef404Response": [Function],
  "getReposGetCommit200Response": [Function],
  "getReposGetCommit404Response": [Function],
  "getReposGetCommit422Response": [Function],
  "getReposGetCommit500Response": [Function],
  "getReposGetCommitActivityStats200Response": [Function],
  "getReposGetCommitActivityStats202Response": [Function],
  "getReposGetCommitComment200Response": [Function],
  "getReposGetCommitComment404Response": [Function],
  "getReposGetCommitSignatureProtection200Response": [Function],
  "getReposGetCommitSignatureProtection404Response": [Function],
  "getReposGetContent200Response": [Function],
  "getReposGetContent403Response": [Function],
  "getReposGetContent404Response": [Function],
  "getReposGetContributorsStats200Response": [Function],
  "getReposGetContributorsStats202Response": [Function],
  "getReposGetDeployKey200Response": [Function],
  "getReposGetDeployKey404Response": [Function],
  "getReposGetDeployment200Response": [Function],
  "getReposGetDeployment404Response": [Function],
  "getReposGetDeploymentStatus200Response": [Function],
  "getReposGetDeploymentStatus404Response": [Function],
  "getReposGetEnvironment200Response": [Function],
  "getReposGetLatestPagesBuild200Response": [Function],
  "getReposGetLatestRelease200Response": [Function],
  "getReposGetPages200Response": [Function],
  "getReposGetPages404Response": [Function],
  "getReposGetPagesBuild200Response": [Function],
  "getReposGetParticipationStats200Response": [Function],
  "getReposGetParticipationStats404Response": [Function],
  "getReposGetPullRequestReviewProtection200Response": [Function],
  "getReposGetPunchCardStats200Response": [Function],
  "getReposGetReadme200Response": [Function],
  "getReposGetReadme404Response": [Function],
  "getReposGetReadme422Response": [Function],
  "getReposGetReadmeInDirectory200Response": [Function],
  "getReposGetReadmeInDirectory404Response": [Function],
  "getReposGetReadmeInDirectory422Response": [Function],
  "getReposGetRelease200Response": [Function],
  "getReposGetRelease404Response": [Function],
  "getReposGetReleaseAsset200Response": [Function],
  "getReposGetReleaseAsset404Response": [Function],
  "getReposGetReleaseAsset415Response": [Function],
  "getReposGetReleaseByTag200Response": [Function],
  "getReposGetReleaseByTag404Response": [Function],
  "getReposGetStatusChecksProtection200Response": [Function],
  "getReposGetStatusChecksProtection404Response": [Function],
  "getReposGetTeamsWithAccessToProtectedBranch200Response": [Function],
  "getReposGetTeamsWithAccessToProtectedBranch404Response": [Function],
  "getReposGetUsersWithAccessToProtectedBranch200Response": [Function],
  "getReposGetUsersWithAccessToProtectedBranch404Response": [Function],
  "getReposGetWebhook200Response": [Function],
  "getReposGetWebhook404Response": [Function],
  "getReposGetWebhookConfigForRepo200Response": [Function],
  "getReposGetWebhookDelivery200Response": [Function],
  "getReposGetWebhookDelivery400Response": [Function],
  "getReposGetWebhookDelivery422Response": [Function],
  "getReposListAutolinks200Response": [Function],
  "getReposListBranches200Response": [Function],
  "getReposListBranches404Response": [Function],
  "getReposListBranchesForHeadCommit200Response": [Function],
  "getReposListBranchesForHeadCommit422Response": [Function],
  "getReposListCollaborators200Response": [Function],
  "getReposListCollaborators404Response": [Function],
  "getReposListCommentsForCommit200Response": [Function],
  "getReposListCommitCommentsForRepo200Response": [Function],
  "getReposListCommitStatusesForRef200Response": [Function],
  "getReposListCommitStatusesForRef301Response": [Function],
  "getReposListCommits200Response": [Function],
  "getReposListCommits400Response": [Function],
  "getReposListCommits404Response": [Function],
  "getReposListCommits409Response": [Function],
  "getReposListCommits500Response": [Function],
  "getReposListContributors200Response": [Function],
  "getReposListContributors403Response": [Function],
  "getReposListContributors404Response": [Function],
  "getReposListDeployKeys200Response": [Function],
  "getReposListDeploymentStatuses200Response": [Function],
  "getReposListDeploymentStatuses404Response": [Function],
  "getReposListDeployments200Response": [Function],
  "getReposListForAuthenticatedUser200Response": [Function],
  "getReposListForAuthenticatedUser401Response": [Function],
  "getReposListForAuthenticatedUser403Response": [Function],
  "getReposListForAuthenticatedUser422Response": [Function],
  "getReposListForOrg200Response": [Function],
  "getReposListForUser200Response": [Function],
  "getReposListForks200Response": [Function],
  "getReposListForks400Response": [Function],
  "getReposListInvitations200Response": [Function],
  "getReposListInvitationsForAuthenticatedUser200Response": [Function],
  "getReposListInvitationsForAuthenticatedUser401Response": [Function],
  "getReposListInvitationsForAuthenticatedUser403Response": [Function],
  "getReposListInvitationsForAuthenticatedUser404Response": [Function],
  "getReposListLanguages200Response": [Function],
  "getReposListPagesBuilds200Response": [Function],
  "getReposListPublic200Response": [Function],
  "getReposListPublic422Response": [Function],
  "getReposListPullRequestsAssociatedWithCommit200Response": [Function],
  "getReposListReleaseAssets200Response": [Function],
  "getReposListReleases200Response": [Function],
  "getReposListReleases404Response": [Function],
  "getReposListTags200Response": [Function],
  "getReposListTeams200Response": [Function],
  "getReposListWebhookDeliveries200Response": [Function],
  "getReposListWebhookDeliveries400Response": [Function],
  "getReposListWebhookDeliveries422Response": [Function],
  "getReposListWebhooks200Response": [Function],
  "getReposListWebhooks404Response": [Function],
  "getReposMerge201Response": [Function],
  "getReposMerge403Response": [Function],
  "getReposMerge422Response": [Function],
  "getReposMergeUpstream200Response": [Function],
  "getReposPingWebhook404Response": [Function],
  "getReposRedeliverWebhookDelivery202Response": [Function],
  "getReposRedeliverWebhookDelivery400Response": [Function],
  "getReposRedeliverWebhookDelivery422Response": [Function],
  "getReposRemoveAppAccessRestrictions200Response": [Function],
  "getReposRemoveAppAccessRestrictions422Response": [Function],
  "getReposRemoveStatusCheckContexts200Response": [Function],
  "getReposRemoveStatusCheckContexts404Response": [Function],
  "getReposRemoveStatusCheckContexts422Response": [Function],
  "getReposRemoveTeamAccessRestrictions200Response": [Function],
  "getReposRemoveTeamAccessRestrictions422Response": [Function],
  "getReposRemoveUserAccessRestrictions200Response": [Function],
  "getReposRemoveUserAccessRestrictions422Response": [Function],
  "getReposRenameBranch201Response": [Function],
  "getReposRenameBranch403Response": [Function],
  "getReposRenameBranch404Response": [Function],
  "getReposRenameBranch422Response": [Function],
  "getReposReplaceAllTopics200Response": [Function],
  "getReposReplaceAllTopics404Response": [Function],
  "getReposReplaceAllTopics422Response": [Function],
  "getReposRequestPagesBuild201Response": [Function],
  "getReposSetAdminBranchProtection200Response": [Function],
  "getReposSetAppAccessRestrictions200Response": [Function],
  "getReposSetAppAccessRestrictions422Response": [Function],
  "getReposSetStatusCheckContexts200Response": [Function],
  "getReposSetStatusCheckContexts404Response": [Function],
  "getReposSetStatusCheckContexts422Response": [Function],
  "getReposSetTeamAccessRestrictions200Response": [Function],
  "getReposSetTeamAccessRestrictions422Response": [Function],
  "getReposSetUserAccessRestrictions200Response": [Function],
  "getReposSetUserAccessRestrictions422Response": [Function],
  "getReposTestPushWebhook404Response": [Function],
  "getReposTransfer202Response": [Function],
  "getReposUpdate200Response": [Function],
  "getReposUpdate307Response": [Function],
  "getReposUpdate403Response": [Function],
  "getReposUpdate404Response": [Function],
  "getReposUpdate422Response": [Function],
  "getReposUpdateBranchProtection200Response": [Function],
  "getReposUpdateBranchProtection403Response": [Function],
  "getReposUpdateBranchProtection404Response": [Function],
  "getReposUpdateBranchProtection422Response": [Function],
  "getReposUpdateCommitComment200Response": [Function],
  "getReposUpdateCommitComment404Response": [Function],
  "getReposUpdateInformationAboutPagesSite400Response": [Function],
  "getReposUpdateInformationAboutPagesSite422Response": [Function],
  "getReposUpdateInvitation200Response": [Function],
  "getReposUpdatePullRequestReviewProtection200Response": [Function],
  "getReposUpdatePullRequestReviewProtection422Response": [Function],
  "getReposUpdateRelease200Response": [Function],
  "getReposUpdateReleaseAsset200Response": [Function],
  "getReposUpdateStatusCheckProtection200Response": [Function],
  "getReposUpdateStatusCheckProtection404Response": [Function],
  "getReposUpdateStatusCheckProtection422Response": [Function],
  "getReposUpdateWebhook200Response": [Function],
  "getReposUpdateWebhook404Response": [Function],
  "getReposUpdateWebhook422Response": [Function],
  "getReposUpdateWebhookConfigForRepo200Response": [Function],
  "getReposUploadReleaseAsset201Response": [Function],
  "getSearchCode200Response": [Function],
  "getSearchCode403Response": [Function],
  "getSearchCode422Response": [Function],
  "getSearchCode503Response": [Function],
  "getSearchCommits200Response": [Function],
  "getSearchIssuesAndPullRequests200Response": [Function],
  "getSearchIssuesAndPullRequests403Response": [Function],
  "getSearchIssuesAndPullRequests422Response": [Function],
  "getSearchIssuesAndPullRequests503Response": [Function],
  "getSearchLabels200Response": [Function],
  "getSearchLabels403Response": [Function],
  "getSearchLabels404Response": [Function],
  "getSearchLabels422Response": [Function],
  "getSearchRepos200Response": [Function],
  "getSearchRepos422Response": [Function],
  "getSearchRepos503Response": [Function],
  "getSearchTopics200Response": [Function],
  "getSearchUsers200Response": [Function],
  "getSearchUsers422Response": [Function],
  "getSearchUsers503Response": [Function],
  "getSecretScanningGetAlert200Response": [Function],
  "getSecretScanningGetAlert503Response": [Function],
  "getSecretScanningListAlertsForOrg200Response": [Function],
  "getSecretScanningListAlertsForOrg404Response": [Function],
  "getSecretScanningListAlertsForOrg503Response": [Function],
  "getSecretScanningListAlertsForRepo200Response": [Function],
  "getSecretScanningListAlertsForRepo503Response": [Function],
  "getSecretScanningListLocationsForAlert200Response": [Function],
  "getSecretScanningListLocationsForAlert503Response": [Function],
  "getSecretScanningUpdateAlert200Response": [Function],
  "getSecretScanningUpdateAlert503Response": [Function],
  "getTeamsAddMemberLegacy403Response": [Function],
  "getTeamsAddOrUpdateMembershipForUserInOrg200Response": [Function],
  "getTeamsAddOrUpdateMembershipForUserLegacy200Response": [Function],
  "getTeamsAddOrUpdateMembershipForUserLegacy404Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsInOrg403Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsLegacy403Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsLegacy404Response": [Function],
  "getTeamsAddOrUpdateProjectPermissionsLegacy422Response": [Function],
  "getTeamsAddOrUpdateRepoPermissionsLegacy403Response": [Function],
  "getTeamsAddOrUpdateRepoPermissionsLegacy422Response": [Function],
  "getTeamsCheckPermissionsForProjectInOrg200Response": [Function],
  "getTeamsCheckPermissionsForProjectLegacy200Response": [Function],
  "getTeamsCheckPermissionsForRepoInOrg200Response": [Function],
  "getTeamsCheckPermissionsForRepoLegacy200Response": [Function],
  "getTeamsCreate201Response": [Function],
  "getTeamsCreate403Response": [Function],
  "getTeamsCreate422Response": [Function],
  "getTeamsCreateDiscussionCommentInOrg201Response": [Function],
  "getTeamsCreateDiscussionCommentLegacy201Response": [Function],
  "getTeamsCreateDiscussionInOrg201Response": [Function],
  "getTeamsCreateDiscussionLegacy201Response": [Function],
  "getTeamsDeleteLegacy404Response": [Function],
  "getTeamsDeleteLegacy422Response": [Function],
  "getTeamsGetByName200Response": [Function],
  "getTeamsGetByName404Response": [Function],
  "getTeamsGetDiscussionCommentInOrg200Response": [Function],
  "getTeamsGetDiscussionCommentLegacy200Response": [Function],
  "getTeamsGetDiscussionInOrg200Response": [Function],
  "getTeamsGetDiscussionLegacy200Response": [Function],
  "getTeamsGetLegacy200Response": [Function],
  "getTeamsGetLegacy404Response": [Function],
  "getTeamsGetMembershipForUserInOrg200Response": [Function],
  "getTeamsGetMembershipForUserLegacy200Response": [Function],
  "getTeamsGetMembershipForUserLegacy404Response": [Function],
  "getTeamsList200Response": [Function],
  "getTeamsList403Response": [Function],
  "getTeamsListChildInOrg200Response": [Function],
  "getTeamsListChildLegacy200Response": [Function],
  "getTeamsListChildLegacy403Response": [Function],
  "getTeamsListChildLegacy404Response": [Function],
  "getTeamsListChildLegacy422Response": [Function],
  "getTeamsListDiscussionCommentsInOrg200Response": [Function],
  "getTeamsListDiscussionCommentsLegacy200Response": [Function],
  "getTeamsListDiscussionsInOrg200Response": [Function],
  "getTeamsListDiscussionsLegacy200Response": [Function],
  "getTeamsListForAuthenticatedUser200Response": [Function],
  "getTeamsListForAuthenticatedUser403Response": [Function],
  "getTeamsListForAuthenticatedUser404Response": [Function],
  "getTeamsListMembersInOrg200Response": [Function],
  "getTeamsListMembersLegacy200Response": [Function],
  "getTeamsListMembersLegacy404Response": [Function],
  "getTeamsListProjectsInOrg200Response": [Function],
  "getTeamsListProjectsLegacy200Response": [Function],
  "getTeamsListProjectsLegacy404Response": [Function],
  "getTeamsListReposInOrg200Response": [Function],
  "getTeamsListReposLegacy200Response": [Function],
  "getTeamsListReposLegacy404Response": [Function],
  "getTeamsRemoveProjectLegacy404Response": [Function],
  "getTeamsRemoveProjectLegacy415Response": [Function],
  "getTeamsRemoveProjectLegacy422Response": [Function],
  "getTeamsUpdateDiscussionCommentInOrg200Response": [Function],
  "getTeamsUpdateDiscussionCommentLegacy200Response": [Function],
  "getTeamsUpdateDiscussionInOrg200Response": [Function],
  "getTeamsUpdateDiscussionLegacy200Response": [Function],
  "getTeamsUpdateInOrg201Response": [Function],
  "getTeamsUpdateLegacy200Response": [Function],
  "getTeamsUpdateLegacy201Response": [Function],
  "getTeamsUpdateLegacy403Response": [Function],
  "getTeamsUpdateLegacy404Response": [Function],
  "getTeamsUpdateLegacy422Response": [Function],
  "getUsersAddEmailForAuthenticatedUser201Response": [Function],
  "getUsersAddEmailForAuthenticatedUser401Response": [Function],
  "getUsersAddEmailForAuthenticatedUser403Response": [Function],
  "getUsersAddEmailForAuthenticatedUser404Response": [Function],
  "getUsersAddEmailForAuthenticatedUser422Response": [Function],
  "getUsersCheckPersonIsFollowedByAuthenticated401Response": [Function],
  "getUsersCheckPersonIsFollowedByAuthenticated403Response": [Function],
  "getUsersCheckPersonIsFollowedByAuthenticated404Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser201Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser401Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser403Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser404Response": [Function],
  "getUsersCreateGpgKeyForAuthenticatedUser422Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser201Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser401Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser403Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser404Response": [Function],
  "getUsersCreatePublicSshKeyForAuthenticatedUser422Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser401Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser403Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser404Response": [Function],
  "getUsersDeleteEmailForAuthenticatedUser422Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser401Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser403Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser404Response": [Function],
  "getUsersDeleteGpgKeyForAuthenticatedUser422Response": [Function],
  "getUsersDeletePublicSshKeyForAuthenticatedUser401Response": [Function],
  "getUsersDeletePublicSshKeyForAuthenticatedUser403Response": [Function],
  "getUsersDeletePublicSshKeyForAuthenticatedUser404Response": [Function],
  "getUsersFollow401Response": [Function],
  "getUsersFollow403Response": [Function],
  "getUsersFollow404Response": [Function],
  "getUsersGetAuthenticated200Response": [Function],
  "getUsersGetAuthenticated401Response": [Function],
  "getUsersGetAuthenticated403Response": [Function],
  "getUsersGetByUsername200Response": [Function],
  "getUsersGetByUsername404Response": [Function],
  "getUsersGetContextForUser200Response": [Function],
  "getUsersGetContextForUser404Response": [Function],
  "getUsersGetContextForUser422Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser200Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser401Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser403Response": [Function],
  "getUsersGetGpgKeyForAuthenticatedUser404Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser200Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser401Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser403Response": [Function],
  "getUsersGetPublicSshKeyForAuthenticatedUser404Response": [Function],
  "getUsersList200Response": [Function],
  "getUsersListEmailsForAuthenticatedUser200Response": [Function],
  "getUsersListEmailsForAuthenticatedUser401Response": [Function],
  "getUsersListEmailsForAuthenticatedUser403Response": [Function],
  "getUsersListEmailsForAuthenticatedUser404Response": [Function],
  "getUsersListFollowedByAuthenticatedUser200Response": [Function],
  "getUsersListFollowedByAuthenticatedUser401Response": [Function],
  "getUsersListFollowedByAuthenticatedUser403Response": [Function],
  "getUsersListFollowersForAuthenticatedUser200Response": [Function],
  "getUsersListFollowersForAuthenticatedUser401Response": [Function],
  "getUsersListFollowersForAuthenticatedUser403Response": [Function],
  "getUsersListFollowersForUser200Response": [Function],
  "getUsersListFollowingForUser200Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser200Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser401Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser403Response": [Function],
  "getUsersListGpgKeysForAuthenticatedUser404Response": [Function],
  "getUsersListGpgKeysForUser200Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser200Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser401Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser403Response": [Function],
  "getUsersListPublicEmailsForAuthenticatedUser404Response": [Function],
  "getUsersListPublicKeysForUser200Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser200Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser401Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser403Response": [Function],
  "getUsersListPublicSshKeysForAuthenticatedUser404Response": [Function],
  "getUsersUnfollow401Response": [Function],
  "getUsersUnfollow403Response": [Function],
  "getUsersUnfollow404Response": [Function],
  "getUsersUpdateAuthenticated200Response": [Function],
  "getUsersUpdateAuthenticated401Response": [Function],
  "getUsersUpdateAuthenticated403Response": [Function],
  "getUsersUpdateAuthenticated404Response": [Function],
  "getUsersUpdateAuthenticated422Response": [Function],
  "handlers": [
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:28:30",
        "header": "GET /",
        "method": "GET",
        "path": "/",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:33:30",
        "header": "GET /admin/hooks",
        "method": "GET",
        "path": "/admin/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:38:30",
        "header": "POST /admin/hooks",
        "method": "POST",
        "path": "/admin/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:43:30",
        "header": "GET /admin/hooks/:hookId",
        "method": "GET",
        "path": "/admin/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:48:30",
        "header": "PATCH /admin/hooks/:hookId",
        "method": "PATCH",
        "path": "/admin/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:53:36",
        "header": "DELETE /admin/hooks/:hookId",
        "method": "DELETE",
        "path": "/admin/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:58:30",
        "header": "POST /admin/hooks/:hookId/pings",
        "method": "POST",
        "path": "/admin/hooks/:hookId/pings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:63:30",
        "header": "GET /admin/keys",
        "method": "GET",
        "path": "/admin/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:68:36",
        "header": "DELETE /admin/keys/:keyIds",
        "method": "DELETE",
        "path": "/admin/keys/:keyIds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:73:30",
        "header": "PATCH /admin/ldap/teams/:teamId/mapping",
        "method": "PATCH",
        "path": "/admin/ldap/teams/:teamId/mapping",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:78:30",
        "header": "POST /admin/ldap/teams/:teamId/sync",
        "method": "POST",
        "path": "/admin/ldap/teams/:teamId/sync",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:83:30",
        "header": "PATCH /admin/ldap/users/:username/mapping",
        "method": "PATCH",
        "path": "/admin/ldap/users/:username/mapping",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:88:30",
        "header": "POST /admin/ldap/users/:username/sync",
        "method": "POST",
        "path": "/admin/ldap/users/:username/sync",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:93:30",
        "header": "POST /admin/organizations",
        "method": "POST",
        "path": "/admin/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:98:30",
        "header": "PATCH /admin/organizations/:org",
        "method": "PATCH",
        "path": "/admin/organizations/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:103:30",
        "header": "GET /admin/pre-receive-environments",
        "method": "GET",
        "path": "/admin/pre-receive-environments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:108:30",
        "header": "POST /admin/pre-receive-environments",
        "method": "POST",
        "path": "/admin/pre-receive-environments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:113:30",
        "header": "GET /admin/pre-receive-environments/:preReceiveEnvironmentId",
        "method": "GET",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:118:30",
        "header": "PATCH /admin/pre-receive-environments/:preReceiveEnvironmentId",
        "method": "PATCH",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:126:36",
        "header": "DELETE /admin/pre-receive-environments/:preReceiveEnvironmentId",
        "method": "DELETE",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:134:30",
        "header": "POST /admin/pre-receive-environments/:preReceiveEnvironmentId/downloads",
        "method": "POST",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:142:30",
        "header": "GET /admin/pre-receive-environments/:preReceiveEnvironmentId/downloads/latest",
        "method": "GET",
        "path": "/admin/pre-receive-environments/:preReceiveEnvironmentId/downloads/latest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:147:30",
        "header": "GET /admin/pre-receive-hooks",
        "method": "GET",
        "path": "/admin/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:152:30",
        "header": "POST /admin/pre-receive-hooks",
        "method": "POST",
        "path": "/admin/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:157:30",
        "header": "GET /admin/pre-receive-hooks/:preReceiveHookId",
        "method": "GET",
        "path": "/admin/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:162:30",
        "header": "PATCH /admin/pre-receive-hooks/:preReceiveHookId",
        "method": "PATCH",
        "path": "/admin/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:167:36",
        "header": "DELETE /admin/pre-receive-hooks/:preReceiveHookId",
        "method": "DELETE",
        "path": "/admin/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:172:30",
        "header": "GET /admin/tokens",
        "method": "GET",
        "path": "/admin/tokens",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:177:36",
        "header": "DELETE /admin/tokens/:tokenId",
        "method": "DELETE",
        "path": "/admin/tokens/:tokenId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:182:30",
        "header": "POST /admin/users",
        "method": "POST",
        "path": "/admin/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:187:30",
        "header": "PATCH /admin/users/:username",
        "method": "PATCH",
        "path": "/admin/users/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:192:36",
        "header": "DELETE /admin/users/:username",
        "method": "DELETE",
        "path": "/admin/users/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:197:30",
        "header": "POST /admin/users/:username/authorizations",
        "method": "POST",
        "path": "/admin/users/:username/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:202:36",
        "header": "DELETE /admin/users/:username/authorizations",
        "method": "DELETE",
        "path": "/admin/users/:username/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:207:30",
        "header": "GET /app",
        "method": "GET",
        "path": "/app",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:212:30",
        "header": "POST /app-manifests/:code/conversions",
        "method": "POST",
        "path": "/app-manifests/:code/conversions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:221:30",
        "header": "GET /app/hook/config",
        "method": "GET",
        "path": "/app/hook/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:226:30",
        "header": "PATCH /app/hook/config",
        "method": "PATCH",
        "path": "/app/hook/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:231:30",
        "header": "GET /app/hook/deliveries",
        "method": "GET",
        "path": "/app/hook/deliveries",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:240:30",
        "header": "GET /app/hook/deliveries/:deliveryId",
        "method": "GET",
        "path": "/app/hook/deliveries/:deliveryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:249:30",
        "header": "POST /app/hook/deliveries/:deliveryId/attempts",
        "method": "POST",
        "path": "/app/hook/deliveries/:deliveryId/attempts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:258:30",
        "header": "GET /app/installations",
        "method": "GET",
        "path": "/app/installations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:263:30",
        "header": "GET /app/installations/:installationId",
        "method": "GET",
        "path": "/app/installations/:installationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:272:36",
        "header": "DELETE /app/installations/:installationId",
        "method": "DELETE",
        "path": "/app/installations/:installationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:280:30",
        "header": "POST /app/installations/:installationId/access_tokens",
        "method": "POST",
        "path": "/app/installations/:installationId/access_tokens",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:292:30",
        "header": "PUT /app/installations/:installationId/suspended",
        "method": "PUT",
        "path": "/app/installations/:installationId/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:300:36",
        "header": "DELETE /app/installations/:installationId/suspended",
        "method": "DELETE",
        "path": "/app/installations/:installationId/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:308:30",
        "header": "GET /applications/grants",
        "method": "GET",
        "path": "/applications/grants",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:319:30",
        "header": "GET /applications/grants/:grantId",
        "method": "GET",
        "path": "/applications/grants/:grantId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:329:36",
        "header": "DELETE /applications/grants/:grantId",
        "method": "DELETE",
        "path": "/applications/grants/:grantId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:339:36",
        "header": "DELETE /applications/:clientId/grant",
        "method": "DELETE",
        "path": "/applications/:clientId/grant",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:347:36",
        "header": "DELETE /applications/:clientId/grants/:accessToken",
        "method": "DELETE",
        "path": "/applications/:clientId/grants/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:352:30",
        "header": "POST /applications/:clientId/token",
        "method": "POST",
        "path": "/applications/:clientId/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:361:30",
        "header": "PATCH /applications/:clientId/token",
        "method": "PATCH",
        "path": "/applications/:clientId/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:369:36",
        "header": "DELETE /applications/:clientId/token",
        "method": "DELETE",
        "path": "/applications/:clientId/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:377:30",
        "header": "POST /applications/:clientId/token/scoped",
        "method": "POST",
        "path": "/applications/:clientId/token/scoped",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:388:30",
        "header": "GET /applications/:clientId/tokens/:accessToken",
        "method": "GET",
        "path": "/applications/:clientId/tokens/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:396:30",
        "header": "POST /applications/:clientId/tokens/:accessToken",
        "method": "POST",
        "path": "/applications/:clientId/tokens/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:401:36",
        "header": "DELETE /applications/:clientId/tokens/:accessToken",
        "method": "DELETE",
        "path": "/applications/:clientId/tokens/:accessToken",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:406:30",
        "header": "GET /apps/:appSlug",
        "method": "GET",
        "path": "/apps/:appSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:416:30",
        "header": "GET /authorizations",
        "method": "GET",
        "path": "/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:427:30",
        "header": "POST /authorizations",
        "method": "POST",
        "path": "/authorizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:439:30",
        "header": "PUT /authorizations/clients/:clientId",
        "method": "PUT",
        "path": "/authorizations/clients/:clientId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:451:30",
        "header": "PUT /authorizations/clients/:clientId/:fingerprint",
        "method": "PUT",
        "path": "/authorizations/clients/:clientId/:fingerprint",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:460:30",
        "header": "GET /authorizations/:authorizationId",
        "method": "GET",
        "path": "/authorizations/:authorizationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:470:30",
        "header": "PATCH /authorizations/:authorizationId",
        "method": "PATCH",
        "path": "/authorizations/:authorizationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:478:36",
        "header": "DELETE /authorizations/:authorizationId",
        "method": "DELETE",
        "path": "/authorizations/:authorizationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:488:30",
        "header": "GET /codes_of_conduct",
        "method": "GET",
        "path": "/codes_of_conduct",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:496:30",
        "header": "GET /codes_of_conduct/:key",
        "method": "GET",
        "path": "/codes_of_conduct/:key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:505:30",
        "header": "GET /emojis",
        "method": "GET",
        "path": "/emojis",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:513:30",
        "header": "GET /enterprise/announcement",
        "method": "GET",
        "path": "/enterprise/announcement",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:518:30",
        "header": "PATCH /enterprise/announcement",
        "method": "PATCH",
        "path": "/enterprise/announcement",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:523:36",
        "header": "DELETE /enterprise/announcement",
        "method": "DELETE",
        "path": "/enterprise/announcement",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:528:30",
        "header": "GET /enterprise/settings/license",
        "method": "GET",
        "path": "/enterprise/settings/license",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:533:30",
        "header": "GET /enterprise/stats/all",
        "method": "GET",
        "path": "/enterprise/stats/all",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:538:30",
        "header": "GET /enterprise/stats/comments",
        "method": "GET",
        "path": "/enterprise/stats/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:543:30",
        "header": "GET /enterprise/stats/gists",
        "method": "GET",
        "path": "/enterprise/stats/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:548:30",
        "header": "GET /enterprise/stats/hooks",
        "method": "GET",
        "path": "/enterprise/stats/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:553:30",
        "header": "GET /enterprise/stats/issues",
        "method": "GET",
        "path": "/enterprise/stats/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:558:30",
        "header": "GET /enterprise/stats/milestones",
        "method": "GET",
        "path": "/enterprise/stats/milestones",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:563:30",
        "header": "GET /enterprise/stats/orgs",
        "method": "GET",
        "path": "/enterprise/stats/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:568:30",
        "header": "GET /enterprise/stats/pages",
        "method": "GET",
        "path": "/enterprise/stats/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:573:30",
        "header": "GET /enterprise/stats/pulls",
        "method": "GET",
        "path": "/enterprise/stats/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:578:30",
        "header": "GET /enterprise/stats/repos",
        "method": "GET",
        "path": "/enterprise/stats/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:583:30",
        "header": "GET /enterprise/stats/users",
        "method": "GET",
        "path": "/enterprise/stats/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:588:30",
        "header": "GET /enterprises/:enterprise/actions/permissions",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:593:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:598:30",
        "header": "GET /enterprises/:enterprise/actions/permissions/organizations",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/permissions/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:605:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions/organizations",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:610:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions/organizations/:orgId",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:615:36",
        "header": "DELETE /enterprises/:enterprise/actions/permissions/organizations/:orgId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/permissions/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:620:30",
        "header": "GET /enterprises/:enterprise/actions/permissions/selected-actions",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:625:30",
        "header": "PUT /enterprises/:enterprise/actions/permissions/selected-actions",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:630:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:635:30",
        "header": "POST /enterprises/:enterprise/actions/runner-groups",
        "method": "POST",
        "path": "/enterprises/:enterprise/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:640:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:645:30",
        "header": "PATCH /enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
        "method": "PATCH",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:650:36",
        "header": "DELETE /enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:655:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:662:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:667:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:672:36",
        "header": "DELETE /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/organizations/:orgId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:677:30",
        "header": "GET /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:682:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:687:30",
        "header": "PUT /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "PUT",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:692:36",
        "header": "DELETE /enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:697:30",
        "header": "GET /enterprises/:enterprise/actions/runners",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:702:30",
        "header": "GET /enterprises/:enterprise/actions/runners/downloads",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runners/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:707:30",
        "header": "POST /enterprises/:enterprise/actions/runners/registration-token",
        "method": "POST",
        "path": "/enterprises/:enterprise/actions/runners/registration-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:712:30",
        "header": "POST /enterprises/:enterprise/actions/runners/remove-token",
        "method": "POST",
        "path": "/enterprises/:enterprise/actions/runners/remove-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:717:30",
        "header": "GET /enterprises/:enterprise/actions/runners/:runnerId",
        "method": "GET",
        "path": "/enterprises/:enterprise/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:722:36",
        "header": "DELETE /enterprises/:enterprise/actions/runners/:runnerId",
        "method": "DELETE",
        "path": "/enterprises/:enterprise/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:727:30",
        "header": "GET /enterprises/:enterprise/audit-log",
        "method": "GET",
        "path": "/enterprises/:enterprise/audit-log",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:732:30",
        "header": "GET /events",
        "method": "GET",
        "path": "/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:742:30",
        "header": "GET /feeds",
        "method": "GET",
        "path": "/feeds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:747:30",
        "header": "GET /gists",
        "method": "GET",
        "path": "/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:756:30",
        "header": "POST /gists",
        "method": "POST",
        "path": "/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:767:30",
        "header": "GET /gists/public",
        "method": "GET",
        "path": "/gists/public",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:777:30",
        "header": "GET /gists/starred",
        "method": "GET",
        "path": "/gists/starred",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:787:30",
        "header": "GET /gists/:gistId",
        "method": "GET",
        "path": "/gists/:gistId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:797:30",
        "header": "PATCH /gists/:gistId",
        "method": "PATCH",
        "path": "/gists/:gistId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:806:36",
        "header": "DELETE /gists/:gistId",
        "method": "DELETE",
        "path": "/gists/:gistId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:816:30",
        "header": "GET /gists/:gistId/comments",
        "method": "GET",
        "path": "/gists/:gistId/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:826:30",
        "header": "POST /gists/:gistId/comments",
        "method": "POST",
        "path": "/gists/:gistId/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:836:30",
        "header": "GET /gists/:gistId/comments/:commentId",
        "method": "GET",
        "path": "/gists/:gistId/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:846:30",
        "header": "PATCH /gists/:gistId/comments/:commentId",
        "method": "PATCH",
        "path": "/gists/:gistId/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:854:36",
        "header": "DELETE /gists/:gistId/comments/:commentId",
        "method": "DELETE",
        "path": "/gists/:gistId/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:864:30",
        "header": "GET /gists/:gistId/commits",
        "method": "GET",
        "path": "/gists/:gistId/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:874:30",
        "header": "GET /gists/:gistId/forks",
        "method": "GET",
        "path": "/gists/:gistId/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:884:30",
        "header": "POST /gists/:gistId/forks",
        "method": "POST",
        "path": "/gists/:gistId/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:895:30",
        "header": "GET /gists/:gistId/star",
        "method": "GET",
        "path": "/gists/:gistId/star",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:905:30",
        "header": "PUT /gists/:gistId/star",
        "method": "PUT",
        "path": "/gists/:gistId/star",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:915:36",
        "header": "DELETE /gists/:gistId/star",
        "method": "DELETE",
        "path": "/gists/:gistId/star",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:925:30",
        "header": "GET /gists/:gistId/:sha",
        "method": "GET",
        "path": "/gists/:gistId/:sha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:935:30",
        "header": "GET /gitignore/templates",
        "method": "GET",
        "path": "/gitignore/templates",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:943:30",
        "header": "GET /gitignore/templates/:name",
        "method": "GET",
        "path": "/gitignore/templates/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:951:30",
        "header": "GET /installation/repositories",
        "method": "GET",
        "path": "/installation/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:961:36",
        "header": "DELETE /installation/token",
        "method": "DELETE",
        "path": "/installation/token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:966:30",
        "header": "GET /issues",
        "method": "GET",
        "path": "/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:976:30",
        "header": "GET /licenses",
        "method": "GET",
        "path": "/licenses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:984:30",
        "header": "GET /licenses/:license",
        "method": "GET",
        "path": "/licenses/:license",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:994:30",
        "header": "POST /markdown",
        "method": "POST",
        "path": "/markdown",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1002:30",
        "header": "POST /markdown/raw",
        "method": "POST",
        "path": "/markdown/raw",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1010:30",
        "header": "GET /meta",
        "method": "GET",
        "path": "/meta",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1018:30",
        "header": "GET /networks/:owner/:repo/events",
        "method": "GET",
        "path": "/networks/:owner/:repo/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1029:30",
        "header": "GET /notifications",
        "method": "GET",
        "path": "/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1040:30",
        "header": "PUT /notifications",
        "method": "PUT",
        "path": "/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1051:30",
        "header": "GET /notifications/threads/:threadId",
        "method": "GET",
        "path": "/notifications/threads/:threadId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1061:30",
        "header": "PATCH /notifications/threads/:threadId",
        "method": "PATCH",
        "path": "/notifications/threads/:threadId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1070:30",
        "header": "GET /notifications/threads/:threadId/subscription",
        "method": "GET",
        "path": "/notifications/threads/:threadId/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1080:30",
        "header": "PUT /notifications/threads/:threadId/subscription",
        "method": "PUT",
        "path": "/notifications/threads/:threadId/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1090:36",
        "header": "DELETE /notifications/threads/:threadId/subscription",
        "method": "DELETE",
        "path": "/notifications/threads/:threadId/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1100:30",
        "header": "GET /octocat",
        "method": "GET",
        "path": "/octocat",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1105:30",
        "header": "GET /organizations",
        "method": "GET",
        "path": "/organizations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1113:30",
        "header": "GET /orgs/:org",
        "method": "GET",
        "path": "/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1121:30",
        "header": "PATCH /orgs/:org",
        "method": "PATCH",
        "path": "/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1130:30",
        "header": "GET /orgs/:org/actions/permissions",
        "method": "GET",
        "path": "/orgs/:org/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1135:30",
        "header": "PUT /orgs/:org/actions/permissions",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1140:30",
        "header": "GET /orgs/:org/actions/permissions/repositories",
        "method": "GET",
        "path": "/orgs/:org/actions/permissions/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1147:30",
        "header": "PUT /orgs/:org/actions/permissions/repositories",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1152:30",
        "header": "PUT /orgs/:org/actions/permissions/repositories/:repositoryId",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1157:36",
        "header": "DELETE /orgs/:org/actions/permissions/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/permissions/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1162:30",
        "header": "GET /orgs/:org/actions/permissions/selected-actions",
        "method": "GET",
        "path": "/orgs/:org/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1167:30",
        "header": "PUT /orgs/:org/actions/permissions/selected-actions",
        "method": "PUT",
        "path": "/orgs/:org/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1172:30",
        "header": "GET /orgs/:org/actions/runner-groups",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1177:30",
        "header": "POST /orgs/:org/actions/runner-groups",
        "method": "POST",
        "path": "/orgs/:org/actions/runner-groups",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1182:30",
        "header": "GET /orgs/:org/actions/runner-groups/:runnerGroupId",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1187:30",
        "header": "PATCH /orgs/:org/actions/runner-groups/:runnerGroupId",
        "method": "PATCH",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1192:36",
        "header": "DELETE /orgs/:org/actions/runner-groups/:runnerGroupId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1197:30",
        "header": "GET /orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1202:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1207:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1212:36",
        "header": "DELETE /orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1217:30",
        "header": "GET /orgs/:org/actions/runner-groups/:runnerGroupId/runners",
        "method": "GET",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1222:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/runners",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1227:30",
        "header": "PUT /orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "PUT",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1232:36",
        "header": "DELETE /orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runner-groups/:runnerGroupId/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1237:30",
        "header": "GET /orgs/:org/actions/runners",
        "method": "GET",
        "path": "/orgs/:org/actions/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1242:30",
        "header": "GET /orgs/:org/actions/runners/downloads",
        "method": "GET",
        "path": "/orgs/:org/actions/runners/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1247:30",
        "header": "POST /orgs/:org/actions/runners/registration-token",
        "method": "POST",
        "path": "/orgs/:org/actions/runners/registration-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1252:30",
        "header": "POST /orgs/:org/actions/runners/remove-token",
        "method": "POST",
        "path": "/orgs/:org/actions/runners/remove-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1257:30",
        "header": "GET /orgs/:org/actions/runners/:runnerId",
        "method": "GET",
        "path": "/orgs/:org/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1262:36",
        "header": "DELETE /orgs/:org/actions/runners/:runnerId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1267:30",
        "header": "GET /orgs/:org/actions/secrets",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1272:30",
        "header": "GET /orgs/:org/actions/secrets/public-key",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets/public-key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1277:30",
        "header": "GET /orgs/:org/actions/secrets/:secretName",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1282:30",
        "header": "PUT /orgs/:org/actions/secrets/:secretName",
        "method": "PUT",
        "path": "/orgs/:org/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1290:36",
        "header": "DELETE /orgs/:org/actions/secrets/:secretName",
        "method": "DELETE",
        "path": "/orgs/:org/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1295:30",
        "header": "GET /orgs/:org/actions/secrets/:secretName/repositories",
        "method": "GET",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1300:30",
        "header": "PUT /orgs/:org/actions/secrets/:secretName/repositories",
        "method": "PUT",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1305:30",
        "header": "PUT /orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
        "method": "PUT",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1313:36",
        "header": "DELETE /orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1321:30",
        "header": "GET /orgs/:org/audit-log",
        "method": "GET",
        "path": "/orgs/:org/audit-log",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1326:30",
        "header": "GET /orgs/:org/events",
        "method": "GET",
        "path": "/orgs/:org/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1331:30",
        "header": "GET /orgs/:org/hooks",
        "method": "GET",
        "path": "/orgs/:org/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1339:30",
        "header": "POST /orgs/:org/hooks",
        "method": "POST",
        "path": "/orgs/:org/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1348:30",
        "header": "GET /orgs/:org/hooks/:hookId",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1356:30",
        "header": "PATCH /orgs/:org/hooks/:hookId",
        "method": "PATCH",
        "path": "/orgs/:org/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1365:36",
        "header": "DELETE /orgs/:org/hooks/:hookId",
        "method": "DELETE",
        "path": "/orgs/:org/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1373:30",
        "header": "GET /orgs/:org/hooks/:hookId/config",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1378:30",
        "header": "PATCH /orgs/:org/hooks/:hookId/config",
        "method": "PATCH",
        "path": "/orgs/:org/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1383:30",
        "header": "GET /orgs/:org/hooks/:hookId/deliveries",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId/deliveries",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1392:30",
        "header": "GET /orgs/:org/hooks/:hookId/deliveries/:deliveryId",
        "method": "GET",
        "path": "/orgs/:org/hooks/:hookId/deliveries/:deliveryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1401:30",
        "header": "POST /orgs/:org/hooks/:hookId/deliveries/:deliveryId/attempts",
        "method": "POST",
        "path": "/orgs/:org/hooks/:hookId/deliveries/:deliveryId/attempts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1410:30",
        "header": "POST /orgs/:org/hooks/:hookId/pings",
        "method": "POST",
        "path": "/orgs/:org/hooks/:hookId/pings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1418:30",
        "header": "GET /orgs/:org/installation",
        "method": "GET",
        "path": "/orgs/:org/installation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1423:30",
        "header": "GET /orgs/:org/installations",
        "method": "GET",
        "path": "/orgs/:org/installations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1428:30",
        "header": "GET /orgs/:org/issues",
        "method": "GET",
        "path": "/orgs/:org/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1436:30",
        "header": "GET /orgs/:org/members",
        "method": "GET",
        "path": "/orgs/:org/members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1445:30",
        "header": "GET /orgs/:org/members/:username",
        "method": "GET",
        "path": "/orgs/:org/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1454:36",
        "header": "DELETE /orgs/:org/members/:username",
        "method": "DELETE",
        "path": "/orgs/:org/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1462:30",
        "header": "GET /orgs/:org/memberships/:username",
        "method": "GET",
        "path": "/orgs/:org/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1471:30",
        "header": "PUT /orgs/:org/memberships/:username",
        "method": "PUT",
        "path": "/orgs/:org/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1480:36",
        "header": "DELETE /orgs/:org/memberships/:username",
        "method": "DELETE",
        "path": "/orgs/:org/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1489:30",
        "header": "GET /orgs/:org/outside_collaborators",
        "method": "GET",
        "path": "/orgs/:org/outside_collaborators",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1494:30",
        "header": "PUT /orgs/:org/outside_collaborators/:username",
        "method": "PUT",
        "path": "/orgs/:org/outside_collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1504:36",
        "header": "DELETE /orgs/:org/outside_collaborators/:username",
        "method": "DELETE",
        "path": "/orgs/:org/outside_collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1512:30",
        "header": "GET /orgs/:org/pre-receive-hooks",
        "method": "GET",
        "path": "/orgs/:org/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1517:30",
        "header": "GET /orgs/:org/pre-receive-hooks/:preReceiveHookId",
        "method": "GET",
        "path": "/orgs/:org/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1522:30",
        "header": "PATCH /orgs/:org/pre-receive-hooks/:preReceiveHookId",
        "method": "PATCH",
        "path": "/orgs/:org/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1527:36",
        "header": "DELETE /orgs/:org/pre-receive-hooks/:preReceiveHookId",
        "method": "DELETE",
        "path": "/orgs/:org/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1532:30",
        "header": "GET /orgs/:org/projects",
        "method": "GET",
        "path": "/orgs/:org/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1540:30",
        "header": "POST /orgs/:org/projects",
        "method": "POST",
        "path": "/orgs/:org/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1552:30",
        "header": "GET /orgs/:org/public_members",
        "method": "GET",
        "path": "/orgs/:org/public_members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1557:30",
        "header": "GET /orgs/:org/public_members/:username",
        "method": "GET",
        "path": "/orgs/:org/public_members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1565:30",
        "header": "PUT /orgs/:org/public_members/:username",
        "method": "PUT",
        "path": "/orgs/:org/public_members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1573:36",
        "header": "DELETE /orgs/:org/public_members/:username",
        "method": "DELETE",
        "path": "/orgs/:org/public_members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1578:30",
        "header": "GET /orgs/:org/repos",
        "method": "GET",
        "path": "/orgs/:org/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1583:30",
        "header": "POST /orgs/:org/repos",
        "method": "POST",
        "path": "/orgs/:org/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1592:30",
        "header": "GET /orgs/:org/secret-scanning/alerts",
        "method": "GET",
        "path": "/orgs/:org/secret-scanning/alerts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1601:30",
        "header": "GET /orgs/:org/teams",
        "method": "GET",
        "path": "/orgs/:org/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1609:30",
        "header": "POST /orgs/:org/teams",
        "method": "POST",
        "path": "/orgs/:org/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1618:30",
        "header": "GET /orgs/:org/teams/:teamSlug",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1626:30",
        "header": "PATCH /orgs/:org/teams/:teamSlug",
        "method": "PATCH",
        "path": "/orgs/:org/teams/:teamSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1631:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1636:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1641:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1646:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1651:30",
        "header": "PATCH /orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
        "method": "PATCH",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1656:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1661:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1666:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1671:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1676:30",
        "header": "PATCH /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
        "method": "PATCH",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1681:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1686:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1694:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1705:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions/:reactionId",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1713:30",
        "header": "GET /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1718:30",
        "header": "POST /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
        "method": "POST",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1726:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions/:reactionId",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1731:30",
        "header": "GET /orgs/:org/teams/:teamSlug/members",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1736:30",
        "header": "GET /orgs/:org/teams/:teamSlug/memberships/:username",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1744:30",
        "header": "PUT /orgs/:org/teams/:teamSlug/memberships/:username",
        "method": "PUT",
        "path": "/orgs/:org/teams/:teamSlug/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1753:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/memberships/:username",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1761:30",
        "header": "GET /orgs/:org/teams/:teamSlug/projects",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1766:30",
        "header": "GET /orgs/:org/teams/:teamSlug/projects/:projectId",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1774:30",
        "header": "PUT /orgs/:org/teams/:teamSlug/projects/:projectId",
        "method": "PUT",
        "path": "/orgs/:org/teams/:teamSlug/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1782:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/projects/:projectId",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1787:30",
        "header": "GET /orgs/:org/teams/:teamSlug/repos",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1792:30",
        "header": "GET /orgs/:org/teams/:teamSlug/repos/:owner/:repo",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1801:30",
        "header": "PUT /orgs/:org/teams/:teamSlug/repos/:owner/:repo",
        "method": "PUT",
        "path": "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1806:36",
        "header": "DELETE /orgs/:org/teams/:teamSlug/repos/:owner/:repo",
        "method": "DELETE",
        "path": "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1811:30",
        "header": "GET /orgs/:org/teams/:teamSlug/teams",
        "method": "GET",
        "path": "/orgs/:org/teams/:teamSlug/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1816:30",
        "header": "GET /projects/columns/cards/:cardId",
        "method": "GET",
        "path": "/projects/columns/cards/:cardId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1827:30",
        "header": "PATCH /projects/columns/cards/:cardId",
        "method": "PATCH",
        "path": "/projects/columns/cards/:cardId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1839:36",
        "header": "DELETE /projects/columns/cards/:cardId",
        "method": "DELETE",
        "path": "/projects/columns/cards/:cardId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1850:30",
        "header": "POST /projects/columns/cards/:cardId/moves",
        "method": "POST",
        "path": "/projects/columns/cards/:cardId/moves",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1862:30",
        "header": "GET /projects/columns/:columnId",
        "method": "GET",
        "path": "/projects/columns/:columnId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1873:30",
        "header": "PATCH /projects/columns/:columnId",
        "method": "PATCH",
        "path": "/projects/columns/:columnId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1883:36",
        "header": "DELETE /projects/columns/:columnId",
        "method": "DELETE",
        "path": "/projects/columns/:columnId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1893:30",
        "header": "GET /projects/columns/:columnId/cards",
        "method": "GET",
        "path": "/projects/columns/:columnId/cards",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1903:30",
        "header": "POST /projects/columns/:columnId/cards",
        "method": "POST",
        "path": "/projects/columns/:columnId/cards",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1915:30",
        "header": "POST /projects/columns/:columnId/moves",
        "method": "POST",
        "path": "/projects/columns/:columnId/moves",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1926:30",
        "header": "GET /projects/:projectId",
        "method": "GET",
        "path": "/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1936:30",
        "header": "PATCH /projects/:projectId",
        "method": "PATCH",
        "path": "/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1949:36",
        "header": "DELETE /projects/:projectId",
        "method": "DELETE",
        "path": "/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1961:30",
        "header": "GET /projects/:projectId/collaborators",
        "method": "GET",
        "path": "/projects/:projectId/collaborators",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1973:30",
        "header": "PUT /projects/:projectId/collaborators/:username",
        "method": "PUT",
        "path": "/projects/:projectId/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1985:36",
        "header": "DELETE /projects/:projectId/collaborators/:username",
        "method": "DELETE",
        "path": "/projects/:projectId/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:1997:30",
        "header": "GET /projects/:projectId/collaborators/:username/permission",
        "method": "GET",
        "path": "/projects/:projectId/collaborators/:username/permission",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2009:30",
        "header": "GET /projects/:projectId/columns",
        "method": "GET",
        "path": "/projects/:projectId/columns",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2019:30",
        "header": "POST /projects/:projectId/columns",
        "method": "POST",
        "path": "/projects/:projectId/columns",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2030:30",
        "header": "GET /rate_limit",
        "method": "GET",
        "path": "/rate_limit",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2039:36",
        "header": "DELETE /reactions/:reactionId",
        "method": "DELETE",
        "path": "/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2050:30",
        "header": "GET /repos/:owner/:repo",
        "method": "GET",
        "path": "/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2060:30",
        "header": "PATCH /repos/:owner/:repo",
        "method": "PATCH",
        "path": "/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2071:36",
        "header": "DELETE /repos/:owner/:repo",
        "method": "DELETE",
        "path": "/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2081:30",
        "header": "GET /repos/:owner/:repo/actions/artifacts",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/artifacts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2086:30",
        "header": "GET /repos/:owner/:repo/actions/artifacts/:artifactId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/artifacts/:artifactId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2091:36",
        "header": "DELETE /repos/:owner/:repo/actions/artifacts/:artifactId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/artifacts/:artifactId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2096:30",
        "header": "GET /repos/:owner/:repo/actions/artifacts/:artifactId/:archiveFormat",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/artifacts/:artifactId/:archiveFormat",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2101:30",
        "header": "GET /repos/:owner/:repo/actions/jobs/:jobId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/jobs/:jobId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2106:30",
        "header": "GET /repos/:owner/:repo/actions/jobs/:jobId/logs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/jobs/:jobId/logs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2111:30",
        "header": "GET /repos/:owner/:repo/actions/permissions",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2116:30",
        "header": "PUT /repos/:owner/:repo/actions/permissions",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/permissions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2121:30",
        "header": "GET /repos/:owner/:repo/actions/permissions/selected-actions",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2126:30",
        "header": "PUT /repos/:owner/:repo/actions/permissions/selected-actions",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/permissions/selected-actions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2131:30",
        "header": "GET /repos/:owner/:repo/actions/runners",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runners",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2136:30",
        "header": "GET /repos/:owner/:repo/actions/runners/downloads",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runners/downloads",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2141:30",
        "header": "POST /repos/:owner/:repo/actions/runners/registration-token",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runners/registration-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2146:30",
        "header": "POST /repos/:owner/:repo/actions/runners/remove-token",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runners/remove-token",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2151:30",
        "header": "GET /repos/:owner/:repo/actions/runners/:runnerId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2156:36",
        "header": "DELETE /repos/:owner/:repo/actions/runners/:runnerId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/runners/:runnerId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2161:30",
        "header": "GET /repos/:owner/:repo/actions/runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2166:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2171:36",
        "header": "DELETE /repos/:owner/:repo/actions/runs/:runId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/runs/:runId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2176:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/approvals",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/approvals",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2181:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/artifacts",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/artifacts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2186:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2191:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber/jobs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/attempts/:attemptNumber/jobs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2199:30",
        "header": "POST /repos/:owner/:repo/actions/runs/:runId/cancel",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runs/:runId/cancel",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2204:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/jobs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/jobs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2209:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/logs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/logs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2214:36",
        "header": "DELETE /repos/:owner/:repo/actions/runs/:runId/logs",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/runs/:runId/logs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2219:30",
        "header": "GET /repos/:owner/:repo/actions/runs/:runId/pending_deployments",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/runs/:runId/pending_deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2224:30",
        "header": "POST /repos/:owner/:repo/actions/runs/:runId/pending_deployments",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runs/:runId/pending_deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2229:30",
        "header": "POST /repos/:owner/:repo/actions/runs/:runId/rerun",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/runs/:runId/rerun",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2234:30",
        "header": "GET /repos/:owner/:repo/actions/secrets",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/secrets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2239:30",
        "header": "GET /repos/:owner/:repo/actions/secrets/public-key",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/secrets/public-key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2244:30",
        "header": "GET /repos/:owner/:repo/actions/secrets/:secretName",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2249:30",
        "header": "PUT /repos/:owner/:repo/actions/secrets/:secretName",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2257:36",
        "header": "DELETE /repos/:owner/:repo/actions/secrets/:secretName",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/actions/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2262:30",
        "header": "GET /repos/:owner/:repo/actions/workflows",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/workflows",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2267:30",
        "header": "GET /repos/:owner/:repo/actions/workflows/:workflowId",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2272:30",
        "header": "PUT /repos/:owner/:repo/actions/workflows/:workflowId/disable",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/disable",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2277:30",
        "header": "POST /repos/:owner/:repo/actions/workflows/:workflowId/dispatches",
        "method": "POST",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/dispatches",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2282:30",
        "header": "PUT /repos/:owner/:repo/actions/workflows/:workflowId/enable",
        "method": "PUT",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/enable",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2287:30",
        "header": "GET /repos/:owner/:repo/actions/workflows/:workflowId/runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/actions/workflows/:workflowId/runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2292:30",
        "header": "GET /repos/:owner/:repo/assignees",
        "method": "GET",
        "path": "/repos/:owner/:repo/assignees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2300:30",
        "header": "GET /repos/:owner/:repo/assignees/:assignee",
        "method": "GET",
        "path": "/repos/:owner/:repo/assignees/:assignee",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2308:30",
        "header": "GET /repos/:owner/:repo/autolinks",
        "method": "GET",
        "path": "/repos/:owner/:repo/autolinks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2313:30",
        "header": "POST /repos/:owner/:repo/autolinks",
        "method": "POST",
        "path": "/repos/:owner/:repo/autolinks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2321:30",
        "header": "GET /repos/:owner/:repo/autolinks/:autolinkId",
        "method": "GET",
        "path": "/repos/:owner/:repo/autolinks/:autolinkId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2329:36",
        "header": "DELETE /repos/:owner/:repo/autolinks/:autolinkId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/autolinks/:autolinkId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2337:30",
        "header": "GET /repos/:owner/:repo/branches",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2345:30",
        "header": "GET /repos/:owner/:repo/branches/:branch",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2355:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2363:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2373:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2381:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2386:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2391:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2399:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2404:30",
        "header": "PATCH /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2412:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2420:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2428:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2436:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2444:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2452:30",
        "header": "PATCH /repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2461:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2466:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2474:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2484:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2493:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2502:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2510:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2515:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2523:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2531:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2539:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2547:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2555:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2563:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2571:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2579:30",
        "header": "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2587:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2595:30",
        "header": "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2603:36",
        "header": "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2611:30",
        "header": "POST /repos/:owner/:repo/branches/:branch/rename",
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/rename",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2621:30",
        "header": "POST /repos/:owner/:repo/check-runs",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2626:30",
        "header": "GET /repos/:owner/:repo/check-runs/:checkRunId",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2631:30",
        "header": "PATCH /repos/:owner/:repo/check-runs/:checkRunId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2636:30",
        "header": "GET /repos/:owner/:repo/check-runs/:checkRunId/annotations",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId/annotations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2641:30",
        "header": "POST /repos/:owner/:repo/check-runs/:checkRunId/rerequest",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-runs/:checkRunId/rerequest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2651:30",
        "header": "POST /repos/:owner/:repo/check-suites",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-suites",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2659:30",
        "header": "PATCH /repos/:owner/:repo/check-suites/preferences",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/check-suites/preferences",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2664:30",
        "header": "GET /repos/:owner/:repo/check-suites/:checkSuiteId",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-suites/:checkSuiteId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2669:30",
        "header": "GET /repos/:owner/:repo/check-suites/:checkSuiteId/check-runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/check-suites/:checkSuiteId/check-runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2674:30",
        "header": "POST /repos/:owner/:repo/check-suites/:checkSuiteId/rerequest",
        "method": "POST",
        "path": "/repos/:owner/:repo/check-suites/:checkSuiteId/rerequest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2679:30",
        "header": "GET /repos/:owner/:repo/code-scanning/alerts",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/alerts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2689:30",
        "header": "GET /repos/:owner/:repo/code-scanning/alerts/:alertNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2699:30",
        "header": "PATCH /repos/:owner/:repo/code-scanning/alerts/:alertNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/code-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2709:30",
        "header": "GET /repos/:owner/:repo/code-scanning/alerts/:alertNumber/instances",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/alerts/:alertNumber/instances",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2719:30",
        "header": "GET /repos/:owner/:repo/code-scanning/analyses",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/analyses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2729:30",
        "header": "GET /repos/:owner/:repo/code-scanning/analyses/:analysisId",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/analyses/:analysisId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2739:36",
        "header": "DELETE /repos/:owner/:repo/code-scanning/analyses/:analysisId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/code-scanning/analyses/:analysisId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2750:30",
        "header": "POST /repos/:owner/:repo/code-scanning/sarifs",
        "method": "POST",
        "path": "/repos/:owner/:repo/code-scanning/sarifs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2762:30",
        "header": "GET /repos/:owner/:repo/code-scanning/sarifs/:sarifId",
        "method": "GET",
        "path": "/repos/:owner/:repo/code-scanning/sarifs/:sarifId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2772:30",
        "header": "GET /repos/:owner/:repo/collaborators",
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2780:30",
        "header": "GET /repos/:owner/:repo/collaborators/:username",
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2788:30",
        "header": "PUT /repos/:owner/:repo/collaborators/:username",
        "method": "PUT",
        "path": "/repos/:owner/:repo/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2798:36",
        "header": "DELETE /repos/:owner/:repo/collaborators/:username",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/collaborators/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2803:30",
        "header": "GET /repos/:owner/:repo/collaborators/:username/permission",
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators/:username/permission",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2811:30",
        "header": "GET /repos/:owner/:repo/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2816:30",
        "header": "GET /repos/:owner/:repo/comments/:commentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2824:30",
        "header": "PATCH /repos/:owner/:repo/comments/:commentId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2832:36",
        "header": "DELETE /repos/:owner/:repo/comments/:commentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2840:30",
        "header": "GET /repos/:owner/:repo/comments/:commentId/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2848:30",
        "header": "POST /repos/:owner/:repo/comments/:commentId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2858:36",
        "header": "DELETE /repos/:owner/:repo/comments/:commentId/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/comments/:commentId/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2863:30",
        "header": "GET /repos/:owner/:repo/commits",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2874:30",
        "header": "GET /repos/:owner/:repo/commits/:commitSha/branches-where-head",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commitSha/branches-where-head",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2882:30",
        "header": "GET /repos/:owner/:repo/commits/:commitSha/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commitSha/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2887:30",
        "header": "POST /repos/:owner/:repo/commits/:commitSha/comments",
        "method": "POST",
        "path": "/repos/:owner/:repo/commits/:commitSha/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2896:30",
        "header": "GET /repos/:owner/:repo/commits/:commitSha/pulls",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commitSha/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2901:30",
        "header": "GET /repos/:owner/:repo/commits/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2911:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/check-runs",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/check-runs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2916:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/check-suites",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/check-suites",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2921:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/status",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/status",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2929:30",
        "header": "GET /repos/:owner/:repo/commits/:ref/statuses",
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/statuses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2937:30",
        "header": "GET /repos/:owner/:repo/compare/:basehead",
        "method": "GET",
        "path": "/repos/:owner/:repo/compare/:basehead",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2946:30",
        "header": "POST /repos/:owner/:repo/content_references/:contentReferenceId/attachments",
        "method": "POST",
        "path": "/repos/:owner/:repo/content_references/:contentReferenceId/attachments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2959:30",
        "header": "GET /repos/:owner/:repo/contents/:path",
        "method": "GET",
        "path": "/repos/:owner/:repo/contents/:path",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2969:30",
        "header": "PUT /repos/:owner/:repo/contents/:path",
        "method": "PUT",
        "path": "/repos/:owner/:repo/contents/:path",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2980:36",
        "header": "DELETE /repos/:owner/:repo/contents/:path",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/contents/:path",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:2991:30",
        "header": "GET /repos/:owner/:repo/contributors",
        "method": "GET",
        "path": "/repos/:owner/:repo/contributors",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3001:30",
        "header": "GET /repos/:owner/:repo/deployments",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3006:30",
        "header": "POST /repos/:owner/:repo/deployments",
        "method": "POST",
        "path": "/repos/:owner/:repo/deployments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3016:30",
        "header": "GET /repos/:owner/:repo/deployments/:deploymentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deploymentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3024:36",
        "header": "DELETE /repos/:owner/:repo/deployments/:deploymentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/deployments/:deploymentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3033:30",
        "header": "GET /repos/:owner/:repo/deployments/:deploymentId/statuses",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deploymentId/statuses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3041:30",
        "header": "POST /repos/:owner/:repo/deployments/:deploymentId/statuses",
        "method": "POST",
        "path": "/repos/:owner/:repo/deployments/:deploymentId/statuses",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3049:30",
        "header": "GET /repos/:owner/:repo/deployments/:deploymentId/statuses/:statusId",
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deploymentId/statuses/:statusId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3057:30",
        "header": "POST /repos/:owner/:repo/dispatches",
        "method": "POST",
        "path": "/repos/:owner/:repo/dispatches",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3065:30",
        "header": "GET /repos/:owner/:repo/environments",
        "method": "GET",
        "path": "/repos/:owner/:repo/environments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3070:30",
        "header": "GET /repos/:owner/:repo/environments/:environmentName",
        "method": "GET",
        "path": "/repos/:owner/:repo/environments/:environmentName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3075:30",
        "header": "PUT /repos/:owner/:repo/environments/:environmentName",
        "method": "PUT",
        "path": "/repos/:owner/:repo/environments/:environmentName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3083:36",
        "header": "DELETE /repos/:owner/:repo/environments/:environmentName",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/environments/:environmentName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3088:30",
        "header": "GET /repos/:owner/:repo/events",
        "method": "GET",
        "path": "/repos/:owner/:repo/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3093:30",
        "header": "GET /repos/:owner/:repo/forks",
        "method": "GET",
        "path": "/repos/:owner/:repo/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3101:30",
        "header": "POST /repos/:owner/:repo/forks",
        "method": "POST",
        "path": "/repos/:owner/:repo/forks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3112:30",
        "header": "POST /repos/:owner/:repo/git/blobs",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/blobs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3123:30",
        "header": "GET /repos/:owner/:repo/git/blobs/:fileSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/blobs/:fileSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3133:30",
        "header": "POST /repos/:owner/:repo/git/commits",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3142:30",
        "header": "GET /repos/:owner/:repo/git/commits/:commitSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/commits/:commitSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3150:30",
        "header": "GET /repos/:owner/:repo/git/matching-refs/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/matching-refs/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3155:30",
        "header": "GET /repos/:owner/:repo/git/ref/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/ref/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3163:30",
        "header": "POST /repos/:owner/:repo/git/refs",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/refs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3171:30",
        "header": "PATCH /repos/:owner/:repo/git/refs/:ref",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/git/refs/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3179:36",
        "header": "DELETE /repos/:owner/:repo/git/refs/:ref",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/git/refs/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3187:30",
        "header": "POST /repos/:owner/:repo/git/tags",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/tags",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3195:30",
        "header": "GET /repos/:owner/:repo/git/tags/:tagSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/tags/:tagSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3203:30",
        "header": "POST /repos/:owner/:repo/git/trees",
        "method": "POST",
        "path": "/repos/:owner/:repo/git/trees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3213:30",
        "header": "GET /repos/:owner/:repo/git/trees/:treeSha",
        "method": "GET",
        "path": "/repos/:owner/:repo/git/trees/:treeSha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3222:30",
        "header": "GET /repos/:owner/:repo/hooks",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3230:30",
        "header": "POST /repos/:owner/:repo/hooks",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3240:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3248:30",
        "header": "PATCH /repos/:owner/:repo/hooks/:hookId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3257:36",
        "header": "DELETE /repos/:owner/:repo/hooks/:hookId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/hooks/:hookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3265:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId/config",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3270:30",
        "header": "PATCH /repos/:owner/:repo/hooks/:hookId/config",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/hooks/:hookId/config",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3275:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId/deliveries",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId/deliveries",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3284:30",
        "header": "GET /repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId",
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3293:30",
        "header": "POST /repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId/attempts",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hookId/deliveries/:deliveryId/attempts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3302:30",
        "header": "POST /repos/:owner/:repo/hooks/:hookId/pings",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hookId/pings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3310:30",
        "header": "POST /repos/:owner/:repo/hooks/:hookId/tests",
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hookId/tests",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3318:30",
        "header": "GET /repos/:owner/:repo/installation",
        "method": "GET",
        "path": "/repos/:owner/:repo/installation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3327:30",
        "header": "GET /repos/:owner/:repo/invitations",
        "method": "GET",
        "path": "/repos/:owner/:repo/invitations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3332:30",
        "header": "PATCH /repos/:owner/:repo/invitations/:invitationId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3337:36",
        "header": "DELETE /repos/:owner/:repo/invitations/:invitationId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3342:30",
        "header": "GET /repos/:owner/:repo/issues",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3352:30",
        "header": "POST /repos/:owner/:repo/issues",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3364:30",
        "header": "GET /repos/:owner/:repo/issues/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3373:30",
        "header": "GET /repos/:owner/:repo/issues/comments/:commentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3381:30",
        "header": "PATCH /repos/:owner/:repo/issues/comments/:commentId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/issues/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3389:36",
        "header": "DELETE /repos/:owner/:repo/issues/comments/:commentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3394:30",
        "header": "GET /repos/:owner/:repo/issues/comments/:commentId/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3402:30",
        "header": "POST /repos/:owner/:repo/issues/comments/:commentId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3411:36",
        "header": "DELETE /repos/:owner/:repo/issues/comments/:commentId/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/comments/:commentId/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3416:30",
        "header": "GET /repos/:owner/:repo/issues/events",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3424:30",
        "header": "GET /repos/:owner/:repo/issues/events/:eventId",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/events/:eventId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3434:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3445:30",
        "header": "PATCH /repos/:owner/:repo/issues/:issueNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/issues/:issueNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3458:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/assignees",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/assignees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3463:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/assignees",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/assignees",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3468:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3477:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/comments",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3488:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/events",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3496:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3504:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3513:30",
        "header": "PUT /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "PUT",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3522:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/labels",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3530:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/labels/:name",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3539:30",
        "header": "PUT /repos/:owner/:repo/issues/:issueNumber/lock",
        "method": "PUT",
        "path": "/repos/:owner/:repo/issues/:issueNumber/lock",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3550:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/lock",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/lock",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3559:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3568:30",
        "header": "POST /repos/:owner/:repo/issues/:issueNumber/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issueNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3577:36",
        "header": "DELETE /repos/:owner/:repo/issues/:issueNumber/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issueNumber/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3582:30",
        "header": "GET /repos/:owner/:repo/issues/:issueNumber/timeline",
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issueNumber/timeline",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3591:30",
        "header": "GET /repos/:owner/:repo/keys",
        "method": "GET",
        "path": "/repos/:owner/:repo/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3596:30",
        "header": "POST /repos/:owner/:repo/keys",
        "method": "POST",
        "path": "/repos/:owner/:repo/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3604:30",
        "header": "GET /repos/:owner/:repo/keys/:keyId",
        "method": "GET",
        "path": "/repos/:owner/:repo/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3612:36",
        "header": "DELETE /repos/:owner/:repo/keys/:keyId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3617:30",
        "header": "GET /repos/:owner/:repo/labels",
        "method": "GET",
        "path": "/repos/:owner/:repo/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3625:30",
        "header": "POST /repos/:owner/:repo/labels",
        "method": "POST",
        "path": "/repos/:owner/:repo/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3634:30",
        "header": "GET /repos/:owner/:repo/labels/:name",
        "method": "GET",
        "path": "/repos/:owner/:repo/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3642:30",
        "header": "PATCH /repos/:owner/:repo/labels/:name",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3647:36",
        "header": "DELETE /repos/:owner/:repo/labels/:name",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/labels/:name",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3652:30",
        "header": "GET /repos/:owner/:repo/languages",
        "method": "GET",
        "path": "/repos/:owner/:repo/languages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3657:30",
        "header": "PUT /repos/:owner/:repo/lfs",
        "method": "PUT",
        "path": "/repos/:owner/:repo/lfs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3665:36",
        "header": "DELETE /repos/:owner/:repo/lfs",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/lfs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3670:30",
        "header": "GET /repos/:owner/:repo/license",
        "method": "GET",
        "path": "/repos/:owner/:repo/license",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3675:30",
        "header": "POST /repos/:owner/:repo/merge-upstream",
        "method": "POST",
        "path": "/repos/:owner/:repo/merge-upstream",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3684:30",
        "header": "POST /repos/:owner/:repo/merges",
        "method": "POST",
        "path": "/repos/:owner/:repo/merges",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3696:30",
        "header": "GET /repos/:owner/:repo/milestones",
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3704:30",
        "header": "POST /repos/:owner/:repo/milestones",
        "method": "POST",
        "path": "/repos/:owner/:repo/milestones",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3713:30",
        "header": "GET /repos/:owner/:repo/milestones/:milestoneNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3721:30",
        "header": "PATCH /repos/:owner/:repo/milestones/:milestoneNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3726:36",
        "header": "DELETE /repos/:owner/:repo/milestones/:milestoneNumber",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3734:30",
        "header": "GET /repos/:owner/:repo/milestones/:milestoneNumber/labels",
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones/:milestoneNumber/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3739:30",
        "header": "GET /repos/:owner/:repo/notifications",
        "method": "GET",
        "path": "/repos/:owner/:repo/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3744:30",
        "header": "PUT /repos/:owner/:repo/notifications",
        "method": "PUT",
        "path": "/repos/:owner/:repo/notifications",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3752:30",
        "header": "GET /repos/:owner/:repo/pages",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3760:30",
        "header": "POST /repos/:owner/:repo/pages",
        "method": "POST",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3769:30",
        "header": "PUT /repos/:owner/:repo/pages",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3778:36",
        "header": "DELETE /repos/:owner/:repo/pages",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pages",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3787:30",
        "header": "GET /repos/:owner/:repo/pages/builds",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3792:30",
        "header": "POST /repos/:owner/:repo/pages/builds",
        "method": "POST",
        "path": "/repos/:owner/:repo/pages/builds",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3797:30",
        "header": "GET /repos/:owner/:repo/pages/builds/latest",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds/latest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3802:30",
        "header": "GET /repos/:owner/:repo/pages/builds/:buildId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds/:buildId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3807:30",
        "header": "GET /repos/:owner/:repo/pre-receive-hooks",
        "method": "GET",
        "path": "/repos/:owner/:repo/pre-receive-hooks",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3812:30",
        "header": "GET /repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3817:30",
        "header": "PATCH /repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3822:36",
        "header": "DELETE /repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pre-receive-hooks/:preReceiveHookId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3827:30",
        "header": "GET /repos/:owner/:repo/projects",
        "method": "GET",
        "path": "/repos/:owner/:repo/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3839:30",
        "header": "POST /repos/:owner/:repo/projects",
        "method": "POST",
        "path": "/repos/:owner/:repo/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3851:30",
        "header": "GET /repos/:owner/:repo/pulls",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3860:30",
        "header": "POST /repos/:owner/:repo/pulls",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3869:30",
        "header": "GET /repos/:owner/:repo/pulls/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3874:30",
        "header": "GET /repos/:owner/:repo/pulls/comments/:commentId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3882:30",
        "header": "PATCH /repos/:owner/:repo/pulls/comments/:commentId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3887:36",
        "header": "DELETE /repos/:owner/:repo/pulls/comments/:commentId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3895:30",
        "header": "GET /repos/:owner/:repo/pulls/comments/:commentId/reactions",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3903:30",
        "header": "POST /repos/:owner/:repo/pulls/comments/:commentId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3912:36",
        "header": "DELETE /repos/:owner/:repo/pulls/comments/:commentId/reactions/:reactionId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/comments/:commentId/reactions/:reactionId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3917:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3927:30",
        "header": "PATCH /repos/:owner/:repo/pulls/:pullNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pulls/:pullNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3936:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3941:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/comments",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3950:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/comments/:commentId/replies",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/comments/:commentId/replies",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3958:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/commits",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3963:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/files",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/files",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3972:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/merge",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/merge",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3980:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/merge",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/merge",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3992:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:3997:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4006:36",
        "header": "DELETE /repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4014:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/reviews",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4019:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/reviews",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4028:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4036:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4044:36",
        "header": "DELETE /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4053:30",
        "header": "GET /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/comments",
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4061:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/dismissals",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/dismissals",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4070:30",
        "header": "POST /repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/events",
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4080:30",
        "header": "PUT /repos/:owner/:repo/pulls/:pullNumber/update-branch",
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pullNumber/update-branch",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4089:30",
        "header": "GET /repos/:owner/:repo/readme",
        "method": "GET",
        "path": "/repos/:owner/:repo/readme",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4098:30",
        "header": "GET /repos/:owner/:repo/readme/:dir",
        "method": "GET",
        "path": "/repos/:owner/:repo/readme/:dir",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4107:30",
        "header": "GET /repos/:owner/:repo/releases",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4115:30",
        "header": "POST /repos/:owner/:repo/releases",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4123:30",
        "header": "GET /repos/:owner/:repo/releases/assets/:assetId",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/assets/:assetId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4133:30",
        "header": "PATCH /repos/:owner/:repo/releases/assets/:assetId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/releases/assets/:assetId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4138:36",
        "header": "DELETE /repos/:owner/:repo/releases/assets/:assetId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/releases/assets/:assetId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4143:30",
        "header": "POST /repos/:owner/:repo/releases/generate-notes",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases/generate-notes",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4151:30",
        "header": "GET /repos/:owner/:repo/releases/latest",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/latest",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4156:30",
        "header": "GET /repos/:owner/:repo/releases/tags/:tag",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/tags/:tag",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4164:30",
        "header": "GET /repos/:owner/:repo/releases/:releaseId",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/:releaseId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4172:30",
        "header": "PATCH /repos/:owner/:repo/releases/:releaseId",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/releases/:releaseId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4177:36",
        "header": "DELETE /repos/:owner/:repo/releases/:releaseId",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/releases/:releaseId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4182:30",
        "header": "GET /repos/:owner/:repo/releases/:releaseId/assets",
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/:releaseId/assets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4187:30",
        "header": "POST /repos/:owner/:repo/releases/:releaseId/assets",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases/:releaseId/assets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4195:30",
        "header": "POST /repos/:owner/:repo/releases/:releaseId/reactions",
        "method": "POST",
        "path": "/repos/:owner/:repo/releases/:releaseId/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4204:30",
        "header": "GET /repos/:owner/:repo/secret-scanning/alerts",
        "method": "GET",
        "path": "/repos/:owner/:repo/secret-scanning/alerts",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4213:30",
        "header": "GET /repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
        "method": "GET",
        "path": "/repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4223:30",
        "header": "PATCH /repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
        "method": "PATCH",
        "path": "/repos/:owner/:repo/secret-scanning/alerts/:alertNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4233:30",
        "header": "GET /repos/:owner/:repo/secret-scanning/alerts/:alertNumber/locations",
        "method": "GET",
        "path": "/repos/:owner/:repo/secret-scanning/alerts/:alertNumber/locations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4242:30",
        "header": "GET /repos/:owner/:repo/stargazers",
        "method": "GET",
        "path": "/repos/:owner/:repo/stargazers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4250:30",
        "header": "GET /repos/:owner/:repo/stats/code_frequency",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/code_frequency",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4259:30",
        "header": "GET /repos/:owner/:repo/stats/commit_activity",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/commit_activity",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4268:30",
        "header": "GET /repos/:owner/:repo/stats/contributors",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/contributors",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4277:30",
        "header": "GET /repos/:owner/:repo/stats/participation",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/participation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4285:30",
        "header": "GET /repos/:owner/:repo/stats/punch_card",
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/punch_card",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4293:30",
        "header": "POST /repos/:owner/:repo/statuses/:sha",
        "method": "POST",
        "path": "/repos/:owner/:repo/statuses/:sha",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4298:30",
        "header": "GET /repos/:owner/:repo/subscribers",
        "method": "GET",
        "path": "/repos/:owner/:repo/subscribers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4303:30",
        "header": "GET /repos/:owner/:repo/subscription",
        "method": "GET",
        "path": "/repos/:owner/:repo/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4312:30",
        "header": "PUT /repos/:owner/:repo/subscription",
        "method": "PUT",
        "path": "/repos/:owner/:repo/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4317:36",
        "header": "DELETE /repos/:owner/:repo/subscription",
        "method": "DELETE",
        "path": "/repos/:owner/:repo/subscription",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4322:30",
        "header": "GET /repos/:owner/:repo/tags",
        "method": "GET",
        "path": "/repos/:owner/:repo/tags",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4327:30",
        "header": "GET /repos/:owner/:repo/tarball/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/tarball/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4332:30",
        "header": "GET /repos/:owner/:repo/teams",
        "method": "GET",
        "path": "/repos/:owner/:repo/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4337:30",
        "header": "GET /repos/:owner/:repo/topics",
        "method": "GET",
        "path": "/repos/:owner/:repo/topics",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4345:30",
        "header": "PUT /repos/:owner/:repo/topics",
        "method": "PUT",
        "path": "/repos/:owner/:repo/topics",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4354:30",
        "header": "POST /repos/:owner/:repo/transfer",
        "method": "POST",
        "path": "/repos/:owner/:repo/transfer",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4359:30",
        "header": "GET /repos/:owner/:repo/zipball/:ref",
        "method": "GET",
        "path": "/repos/:owner/:repo/zipball/:ref",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4364:30",
        "header": "POST /repos/:templateOwner/:templateRepo/generate",
        "method": "POST",
        "path": "/repos/:templateOwner/:templateRepo/generate",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4369:30",
        "header": "GET /repositories",
        "method": "GET",
        "path": "/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4378:30",
        "header": "GET /repositories/:repositoryId/environments/:environmentName/secrets",
        "method": "GET",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4383:30",
        "header": "GET /repositories/:repositoryId/environments/:environmentName/secrets/public-key",
        "method": "GET",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/public-key",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4388:30",
        "header": "GET /repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
        "method": "GET",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4393:30",
        "header": "PUT /repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
        "method": "PUT",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4401:36",
        "header": "DELETE /repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
        "method": "DELETE",
        "path": "/repositories/:repositoryId/environments/:environmentName/secrets/:secretName",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4406:30",
        "header": "GET /search/code",
        "method": "GET",
        "path": "/search/code",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4417:30",
        "header": "GET /search/commits",
        "method": "GET",
        "path": "/search/commits",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4425:30",
        "header": "GET /search/issues",
        "method": "GET",
        "path": "/search/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4436:30",
        "header": "GET /search/labels",
        "method": "GET",
        "path": "/search/labels",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4447:30",
        "header": "GET /search/repositories",
        "method": "GET",
        "path": "/search/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4457:30",
        "header": "GET /search/topics",
        "method": "GET",
        "path": "/search/topics",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4465:30",
        "header": "GET /search/users",
        "method": "GET",
        "path": "/search/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4475:30",
        "header": "GET /setup/api/configcheck",
        "method": "GET",
        "path": "/setup/api/configcheck",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4480:30",
        "header": "POST /setup/api/configure",
        "method": "POST",
        "path": "/setup/api/configure",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4485:30",
        "header": "GET /setup/api/maintenance",
        "method": "GET",
        "path": "/setup/api/maintenance",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4490:30",
        "header": "POST /setup/api/maintenance",
        "method": "POST",
        "path": "/setup/api/maintenance",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4495:30",
        "header": "GET /setup/api/settings",
        "method": "GET",
        "path": "/setup/api/settings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4500:30",
        "header": "PUT /setup/api/settings",
        "method": "PUT",
        "path": "/setup/api/settings",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4505:30",
        "header": "GET /setup/api/settings/authorized-keys",
        "method": "GET",
        "path": "/setup/api/settings/authorized-keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4510:30",
        "header": "POST /setup/api/settings/authorized-keys",
        "method": "POST",
        "path": "/setup/api/settings/authorized-keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4515:36",
        "header": "DELETE /setup/api/settings/authorized-keys",
        "method": "DELETE",
        "path": "/setup/api/settings/authorized-keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4520:30",
        "header": "POST /setup/api/start",
        "method": "POST",
        "path": "/setup/api/start",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4525:30",
        "header": "POST /setup/api/upgrade",
        "method": "POST",
        "path": "/setup/api/upgrade",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4530:30",
        "header": "GET /teams/:teamId",
        "method": "GET",
        "path": "/teams/:teamId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4538:30",
        "header": "PATCH /teams/:teamId",
        "method": "PATCH",
        "path": "/teams/:teamId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4549:36",
        "header": "DELETE /teams/:teamId",
        "method": "DELETE",
        "path": "/teams/:teamId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4558:30",
        "header": "GET /teams/:teamId/discussions",
        "method": "GET",
        "path": "/teams/:teamId/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4563:30",
        "header": "POST /teams/:teamId/discussions",
        "method": "POST",
        "path": "/teams/:teamId/discussions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4568:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4573:30",
        "header": "PATCH /teams/:teamId/discussions/:discussionNumber",
        "method": "PATCH",
        "path": "/teams/:teamId/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4578:36",
        "header": "DELETE /teams/:teamId/discussions/:discussionNumber",
        "method": "DELETE",
        "path": "/teams/:teamId/discussions/:discussionNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4583:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/comments",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4588:30",
        "header": "POST /teams/:teamId/discussions/:discussionNumber/comments",
        "method": "POST",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4593:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4598:30",
        "header": "PATCH /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
        "method": "PATCH",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4603:36",
        "header": "DELETE /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
        "method": "DELETE",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4608:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4613:30",
        "header": "POST /teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
        "method": "POST",
        "path": "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4618:30",
        "header": "GET /teams/:teamId/discussions/:discussionNumber/reactions",
        "method": "GET",
        "path": "/teams/:teamId/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4623:30",
        "header": "POST /teams/:teamId/discussions/:discussionNumber/reactions",
        "method": "POST",
        "path": "/teams/:teamId/discussions/:discussionNumber/reactions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4628:30",
        "header": "GET /teams/:teamId/members",
        "method": "GET",
        "path": "/teams/:teamId/members",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4636:30",
        "header": "GET /teams/:teamId/members/:username",
        "method": "GET",
        "path": "/teams/:teamId/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4644:30",
        "header": "PUT /teams/:teamId/members/:username",
        "method": "PUT",
        "path": "/teams/:teamId/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4654:36",
        "header": "DELETE /teams/:teamId/members/:username",
        "method": "DELETE",
        "path": "/teams/:teamId/members/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4662:30",
        "header": "GET /teams/:teamId/memberships/:username",
        "method": "GET",
        "path": "/teams/:teamId/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4670:30",
        "header": "PUT /teams/:teamId/memberships/:username",
        "method": "PUT",
        "path": "/teams/:teamId/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4680:36",
        "header": "DELETE /teams/:teamId/memberships/:username",
        "method": "DELETE",
        "path": "/teams/:teamId/memberships/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4688:30",
        "header": "GET /teams/:teamId/projects",
        "method": "GET",
        "path": "/teams/:teamId/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4696:30",
        "header": "GET /teams/:teamId/projects/:projectId",
        "method": "GET",
        "path": "/teams/:teamId/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4704:30",
        "header": "PUT /teams/:teamId/projects/:projectId",
        "method": "PUT",
        "path": "/teams/:teamId/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4714:36",
        "header": "DELETE /teams/:teamId/projects/:projectId",
        "method": "DELETE",
        "path": "/teams/:teamId/projects/:projectId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4724:30",
        "header": "GET /teams/:teamId/repos",
        "method": "GET",
        "path": "/teams/:teamId/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4732:30",
        "header": "GET /teams/:teamId/repos/:owner/:repo",
        "method": "GET",
        "path": "/teams/:teamId/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4741:30",
        "header": "PUT /teams/:teamId/repos/:owner/:repo",
        "method": "PUT",
        "path": "/teams/:teamId/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4750:36",
        "header": "DELETE /teams/:teamId/repos/:owner/:repo",
        "method": "DELETE",
        "path": "/teams/:teamId/repos/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4755:30",
        "header": "GET /teams/:teamId/teams",
        "method": "GET",
        "path": "/teams/:teamId/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4765:30",
        "header": "GET /user",
        "method": "GET",
        "path": "/user",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4775:30",
        "header": "PATCH /user",
        "method": "PATCH",
        "path": "/user",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4787:30",
        "header": "GET /user/emails",
        "method": "GET",
        "path": "/user/emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4798:30",
        "header": "POST /user/emails",
        "method": "POST",
        "path": "/user/emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4810:36",
        "header": "DELETE /user/emails",
        "method": "DELETE",
        "path": "/user/emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4822:30",
        "header": "GET /user/followers",
        "method": "GET",
        "path": "/user/followers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4832:30",
        "header": "GET /user/following",
        "method": "GET",
        "path": "/user/following",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4842:30",
        "header": "GET /user/following/:username",
        "method": "GET",
        "path": "/user/following/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4853:30",
        "header": "PUT /user/following/:username",
        "method": "PUT",
        "path": "/user/following/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4864:36",
        "header": "DELETE /user/following/:username",
        "method": "DELETE",
        "path": "/user/following/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4875:30",
        "header": "GET /user/gpg_keys",
        "method": "GET",
        "path": "/user/gpg_keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4886:30",
        "header": "POST /user/gpg_keys",
        "method": "POST",
        "path": "/user/gpg_keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4898:30",
        "header": "GET /user/gpg_keys/:gpgKeyId",
        "method": "GET",
        "path": "/user/gpg_keys/:gpgKeyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4909:36",
        "header": "DELETE /user/gpg_keys/:gpgKeyId",
        "method": "DELETE",
        "path": "/user/gpg_keys/:gpgKeyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4921:30",
        "header": "GET /user/installations",
        "method": "GET",
        "path": "/user/installations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4932:30",
        "header": "GET /user/installations/:installationId/repositories",
        "method": "GET",
        "path": "/user/installations/:installationId/repositories",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4942:30",
        "header": "PUT /user/installations/:installationId/repositories/:repositoryId",
        "method": "PUT",
        "path": "/user/installations/:installationId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4952:36",
        "header": "DELETE /user/installations/:installationId/repositories/:repositoryId",
        "method": "DELETE",
        "path": "/user/installations/:installationId/repositories/:repositoryId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4962:30",
        "header": "GET /user/issues",
        "method": "GET",
        "path": "/user/issues",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4971:30",
        "header": "GET /user/keys",
        "method": "GET",
        "path": "/user/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4982:30",
        "header": "POST /user/keys",
        "method": "POST",
        "path": "/user/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:4994:30",
        "header": "GET /user/keys/:keyId",
        "method": "GET",
        "path": "/user/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5005:36",
        "header": "DELETE /user/keys/:keyId",
        "method": "DELETE",
        "path": "/user/keys/:keyId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5016:30",
        "header": "GET /user/memberships/orgs",
        "method": "GET",
        "path": "/user/memberships/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5027:30",
        "header": "GET /user/memberships/orgs/:org",
        "method": "GET",
        "path": "/user/memberships/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5036:30",
        "header": "PATCH /user/memberships/orgs/:org",
        "method": "PATCH",
        "path": "/user/memberships/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5046:30",
        "header": "GET /user/orgs",
        "method": "GET",
        "path": "/user/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5056:30",
        "header": "POST /user/projects",
        "method": "POST",
        "path": "/user/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5068:30",
        "header": "GET /user/public_emails",
        "method": "GET",
        "path": "/user/public_emails",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5079:30",
        "header": "GET /user/repos",
        "method": "GET",
        "path": "/user/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5090:30",
        "header": "POST /user/repos",
        "method": "POST",
        "path": "/user/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5103:30",
        "header": "GET /user/repository_invitations",
        "method": "GET",
        "path": "/user/repository_invitations",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5114:30",
        "header": "PATCH /user/repository_invitations/:invitationId",
        "method": "PATCH",
        "path": "/user/repository_invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5125:36",
        "header": "DELETE /user/repository_invitations/:invitationId",
        "method": "DELETE",
        "path": "/user/repository_invitations/:invitationId",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5136:30",
        "header": "GET /user/starred",
        "method": "GET",
        "path": "/user/starred",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5146:30",
        "header": "GET /user/starred/:owner/:repo",
        "method": "GET",
        "path": "/user/starred/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5157:30",
        "header": "PUT /user/starred/:owner/:repo",
        "method": "PUT",
        "path": "/user/starred/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5168:36",
        "header": "DELETE /user/starred/:owner/:repo",
        "method": "DELETE",
        "path": "/user/starred/:owner/:repo",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5179:30",
        "header": "GET /user/subscriptions",
        "method": "GET",
        "path": "/user/subscriptions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5189:30",
        "header": "GET /user/teams",
        "method": "GET",
        "path": "/user/teams",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5199:30",
        "header": "GET /users",
        "method": "GET",
        "path": "/users",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5207:30",
        "header": "GET /users/:username",
        "method": "GET",
        "path": "/users/:username",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5215:30",
        "header": "GET /users/:username/events",
        "method": "GET",
        "path": "/users/:username/events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5220:30",
        "header": "GET /users/:username/events/orgs/:org",
        "method": "GET",
        "path": "/users/:username/events/orgs/:org",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5225:30",
        "header": "GET /users/:username/events/public",
        "method": "GET",
        "path": "/users/:username/events/public",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5230:30",
        "header": "GET /users/:username/followers",
        "method": "GET",
        "path": "/users/:username/followers",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5235:30",
        "header": "GET /users/:username/following",
        "method": "GET",
        "path": "/users/:username/following",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5240:30",
        "header": "GET /users/:username/following/:targetUser",
        "method": "GET",
        "path": "/users/:username/following/:targetUser",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5248:30",
        "header": "GET /users/:username/gists",
        "method": "GET",
        "path": "/users/:username/gists",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5256:30",
        "header": "GET /users/:username/gpg_keys",
        "method": "GET",
        "path": "/users/:username/gpg_keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5261:30",
        "header": "GET /users/:username/hovercard",
        "method": "GET",
        "path": "/users/:username/hovercard",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5270:30",
        "header": "GET /users/:username/installation",
        "method": "GET",
        "path": "/users/:username/installation",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5275:30",
        "header": "GET /users/:username/keys",
        "method": "GET",
        "path": "/users/:username/keys",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5280:30",
        "header": "GET /users/:username/orgs",
        "method": "GET",
        "path": "/users/:username/orgs",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5285:30",
        "header": "GET /users/:username/projects",
        "method": "GET",
        "path": "/users/:username/projects",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5293:30",
        "header": "GET /users/:username/received_events",
        "method": "GET",
        "path": "/users/:username/received_events",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5298:30",
        "header": "GET /users/:username/received_events/public",
        "method": "GET",
        "path": "/users/:username/received_events/public",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5303:30",
        "header": "GET /users/:username/repos",
        "method": "GET",
        "path": "/users/:username/repos",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5308:30",
        "header": "PUT /users/:username/site_admin",
        "method": "PUT",
        "path": "/users/:username/site_admin",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5313:36",
        "header": "DELETE /users/:username/site_admin",
        "method": "DELETE",
        "path": "/users/:username/site_admin",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5318:30",
        "header": "GET /users/:username/starred",
        "method": "GET",
        "path": "/users/:username/starred",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5323:30",
        "header": "GET /users/:username/subscriptions",
        "method": "GET",
        "path": "/users/:username/subscriptions",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5328:30",
        "header": "PUT /users/:username/suspended",
        "method": "PUT",
        "path": "/users/:username/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5333:36",
        "header": "DELETE /users/:username/suspended",
        "method": "DELETE",
        "path": "/users/:username/suspended",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
    HttpHandler {
      "info": {
        "callFrame": "    at ./example/test-githubapi--static.js:5338:30",
        "header": "GET /zen",
        "method": "GET",
        "path": "/zen",
      },
      "isUsed": false,
      "options": {},
      "resolver": [Function],
    },
  ],
  "startWorker": [Function],
}
`;
